{"version":3,"sources":["SharedComponents/CustomSelect.js","SharedComponents/DateTimePicker.js","SharedComponents/TimePicker.js","SharedComponents/DatePicker.js","SharedComponents/CustomDateTimePicker.js","Components/PopupEdit/PopupEdit.js","SharedComponents/exportDocx.js","Components/PopupConfirm/PopupConfirm.js","Components/PopupAddLinkedInfo/PopupAddLinkedInfo.js","Components/TblActionMenu/TblActionMenu.js"],"names":["CustomSelect","props","handleChange","value","Array","isArray","setState","valueErr","setValue","map","a","join","setFocus","selectRef","focus","filterValues","data","isDisplayed","optionsCounter","maxOptions","RegExp","test","label","options","length","defaultValue","state","offsetTop","this","ReactDOM","findDOMNode","selectStyles","input","base","height","fontFamily","marginTop","fontSize","backgroundColor","control","minHeight","border","borderRadius","borderBottom","selectProps","menuIsOpen","borderColor","boxShadow","placeholder","color","option","valueContainer","paddingLeft","marginLeft","indicatorsContainer","padding","clearIndicator","dropdownIndicator","style","isCreatable","allowCreate","ref","styles","menuPlacement","bottom","defaultInputValue","onChange","onMenuOpen","noOptionsMessage","isClearable","isSearchable","required","isMulti","width","filterOption","React","Component","DateTimePicker","useState","utils","MomentUtils","format","fullWidth","ampm","minutesStep","margin","e","_d","className","CustomDateTimePicker","type","PopupEdit","setOpenConfirm","openConfirm","setOpen","open","Object","keys","metaData","dataTable","forEach","property","isEditable","includes","task","realId","listName","vocabulary","getData","then","listInfo","d","id","onClose","handleDateTimeChange","getRealId","indexOf","handleOk","dataEdited","key","DateW","toDateTimeStr","isDataEdited","propertyInfo","dataEditedValue","parseInt","dataTableName","participants","split","responsible","action","console","log","handleSaveAsNew","date","time","confirmMessage","confirmSaveAsNew","week","parseFloat","getYearWeekStr","actionNew","handleUpload","storage","alert","dispatch","status","message","fileUpload","target","files","response","fileUrl","window","location","host","fileName","filesAttached","push","openUrl","url","filterValidKeys","sortValidKeys","b","tableIndex","printPDF","tasksList","_dataRef","createRef","bind","match","properties","concat","filter","sort","Dialog","isOpened","classes","paper","DialogTitle","trigger","Tooltip","title","IconButton","content","current","onAfterPrint","CustomIcon","class","tip","textRows","doc","Document","rows","text","Paragraph","children","TextRun","size","font","addSection","Packer","toBlob","blob","saveAs","err","exportDocx","specificParameters","tableName","tables","selectString","v","tasks","t","textToDoc","DialogContent","pKey","inputRef","el","refName","isSelectCreatable","Input","multiline","onKeyDown","stopPropagation","inputProps","maxHeight","overflow","endAdornment","hasFileUploader","InputAdornment","position","display","multiple","htmlFor","component","TextField","disabled","replace","DialogActions","Button","variant","onClick","startIcon","hasEditMenuSaveAsNew","PopupConfirm","actionName","actionText","memo","PopupAddLinkedInfo","editData","fields","field","emptyDataError","metaTable","realID","prop","initialValue","getDefaultValues","list","undefined","k","TblActionMenu","opened","setOpened","menuEl","setMenuEl","menuElSub","setMenuElSub","menuList","setMenuList","isPopupConfirmOpened","setIsPopupConfirmOpened","isPopupEditOpened","setIsPopupEditOpened","isPopupLinkedOpened","setIsPopupLinkedOpened","_menuElSub","useRef","hideBasicElement","parentElement","handleClickSub","event","currentTarget","offsetWidth","item","args","handleOpenPopupLinked","handleClosePopups","closeElSub","handleClickItem","Menu","keepMounted","anchorEl","index","Divider","isListOfItems","MenuItem","ListItemIcon","Typography","noWrap","listItems","listItem"],"mappings":"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","file":"static/js/6.45b552e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport default class CustomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let defaultValue = '';\r\n    if (this.props.defaultValue) {\r\n      ({ defaultValue } = this.props);\r\n    } else if (this.props.defaultValue) {\r\n      defaultValue = [];\r\n    }\r\n\r\n    this.state = {\r\n      value: defaultValue,\r\n      valueErr: false,\r\n      offsetTop: 0,\r\n    };\r\n\r\n    this.maxOptions = this.props.maxOptions ? this.props.maxOptions : 60;\r\n    this.optionsCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    this.setState({ offsetTop: ReactDOM.findDOMNode(this).offsetTop });\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    if (value && value !== '' && value !== 'null' && Array.isArray(value)) {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.map((a) => a.value).join(','));\r\n      }\r\n    } else if (value && value !== '' && value !== 'null') {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.value);\r\n      }\r\n    } else {\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  setFocus = () => {\r\n    // this.refs[this.props.refName].focus();\r\n    this.selectRef.focus();\r\n  };\r\n\r\n  filterValues = (data, value) => {\r\n    let isDisplayed = this.optionsCounter < this.maxOptions;\r\n\r\n    if (value && value !== '') {\r\n      const regExp = new RegExp(value, 'i');\r\n      if (!regExp.test(data.label)) isDisplayed = false;\r\n    }\r\n\r\n    if (isDisplayed) this.optionsCounter++;\r\n    if (\r\n      this.optionsCounter === this.props.options.length ||\r\n      this.optionsCounter === this.maxOptions\r\n    ) {\r\n      this.optionsCounter = 0;\r\n    }\r\n    return isDisplayed;\r\n  };\r\n\r\n  render() {\r\n    const selectStyles = {\r\n      input: (base) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        marginTop: '-0.75px',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      control: (base, state) => ({\r\n        ...base,\r\n        minHeight: '25px',\r\n        height: 'fit-content',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n        border: '0px',\r\n        borderRadius: '0px',\r\n        borderBottom: this.state.valueErr\r\n          ? '2px solid'\r\n          : state.selectProps.menuIsOpen\r\n          ? '2px solid'\r\n          : '1px solid',\r\n        borderColor: this.state.valueErr\r\n          ? '#f44336 !important'\r\n          : state.selectProps.menuIsOpen\r\n          ? '#3f51b5 !important'\r\n          : 'rgba(0, 0, 0, 0.42) !important',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n          borderBottom: state.selectProps.menuIsOpen ? '2px solid' : '2px solid',\r\n          borderColor: this.state.valueErr\r\n            ? '#f44336'\r\n            : state.selectProps.menuIsOpen\r\n            ? '#3f51b5'\r\n            : 'black',\r\n        },\r\n      }),\r\n      placeholder: (base, state) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        color: this.state.valueErr ? '#f44336' : state.selectProps.menuIsOpen ? '#3f51b5' : '',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      option: (base) => ({\r\n        ...base,\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        marginTop: '-3px',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      }),\r\n      valueContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '24px',\r\n        height: 'fit-content',\r\n        marginTop: '-5px',\r\n        paddingLeft: '0px',\r\n        marginLeft: '-2px',\r\n      }),\r\n      indicatorsContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '25px !important',\r\n        padding: '0px !important',\r\n      }),\r\n      clearIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n      dropdownIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div style={this.props.style}>\r\n        {!this.props.isCreatable && (\r\n          <Select\r\n            allowCreate={this.props.allowCreate}\r\n            ref={this.selectRef}\r\n            // ref={this.props.refName}\r\n            options={this.props.options}\r\n            styles={selectStyles}\r\n            // menuPlacement={this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\r\n            menuPlacement={\r\n              this.props.bottom ? 'bottom' : this.state.offsetTop < 250 ? 'bottom' : 'top'\r\n            }\r\n            value={this.state.value}\r\n            placeholder={this.props.label}\r\n            defaultValue={this.props.defaultValue}\r\n            defaultInputValue={this.props.defaultInputValue}\r\n            onChange={this.handleChange}\r\n            onMenuOpen={() => {\r\n              this.optionsCounter = 0;\r\n            }}\r\n            noOptionsMessage={() => 'Нет подходящих вариантов'}\r\n            isClearable\r\n            isSearchable\r\n            required\r\n            isMulti={!!this.props.isMulti}\r\n            style={{ width: '200px' }}\r\n            filterOption={this.filterValues}\r\n          />\r\n        )}\r\n        {this.props.isCreatable && (\r\n          <CreatableSelect\r\n            allowCreate={this.props.allowCreate}\r\n            ref={this.selectRef}\r\n            // ref={this.props.refName}\r\n            options={this.props.options}\r\n            styles={selectStyles}\r\n            menuPlacement={\r\n              this.props.bottom ? 'bottom' : this.state.offsetTop < 250 ? 'bottom' : 'top'\r\n            }\r\n            value={this.state.value}\r\n            placeholder={this.props.label}\r\n            defaultValue={this.props.defaultValue}\r\n            defaultInputValue={this.props.defaultInputValue}\r\n            onChange={this.handleChange}\r\n            onMenuOpen={() => {\r\n              this.optionsCounter = 0;\r\n            }}\r\n            noOptionsMessage={() => 'Нет подходящих вариантов'}\r\n            isClearable\r\n            isSearchable\r\n            required\r\n            isMulti={!!this.props.isMulti}\r\n            style={{ width: '200px' }}\r\n            filterOption={this.filterValues}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState();\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDateTimePicker\r\n        format=\"YYYY-MM-DD HH:mm\"\r\n        fullWidth\r\n        ampm={false}\r\n        minutesStep={5}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = !props.fullWidth === 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardTimePicker\r\n        format=\"HH:mm\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        ampm={false}\r\n        minutesStep={5}\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n        className={props.className}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = !props.fullWidth === 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDatePicker\r\n        format=\"YYYY-MM-DD\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import DateTimePicker from './DateTimePicker';\r\nimport TimePicker from './TimePicker';\r\nimport DatePicker from './DatePicker';\r\n\r\nexport default function CustomDateTimePicker(props) {\r\n  return (\r\n    <>\r\n      {props.type === 'datetime' && <DateTimePicker {...props} />}\r\n      {props.type === 'date' && <DatePicker {...props} />}\r\n      {props.type === 'time' && <TimePicker {...props} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TextField,\r\n  DialogContent,\r\n  Input,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ReactToPrint from 'react-to-print';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CustomDateTimePicker from '../../SharedComponents/CustomDateTimePicker';\r\nimport 'moment/locale/ru';\r\n\r\nimport { metaData, dataTable } from '../../config/data';\r\nimport { getData, fileUpload } from '../../utils/api';\r\nimport storage from '../../storages/commonStorage';\r\nimport CustomSelect from '../../SharedComponents/CustomSelect';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport exportDocx from '../../SharedComponents/exportDocx';\r\nimport DateW from '../../utils/date';\r\nimport './PopupEdit.css';\r\n\r\nconst textToDoc = (task, tasksList) => {\r\n  const rows = ['Планировщик задач', metaData.specificParameters.tableName, ''];\r\n\r\n  const properties = [];\r\n  Object.keys(metaData.dataTable)\r\n    .filter(\r\n      (key) =>\r\n        key !== 'specificParameters' && key !== 'undefined' && metaData.dataTable[key].isEditable\r\n    )\r\n    .sort((a, b) => (metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1))\r\n    .forEach((property) => properties.push(property));\r\n  Object.keys(metaData.dataTable)\r\n    .filter(\r\n      (key) =>\r\n        key !== 'specificParameters' && key !== 'undefined' && !metaData.dataTable[key].isEditable\r\n    )\r\n    .sort((a, b) => (metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1))\r\n    .forEach((property) => properties.push(property));\r\n\r\n  properties.forEach((property) => {\r\n    const propertyInfo = metaData.dataTable[property];\r\n    const listInfo = metaData.dataTable[property].vocabulary\r\n      ? metaData[`${metaData.dataTable[property].vocabulary}List`]\r\n      : metaData[`${property}List`];\r\n\r\n    let value = task[property] ? task[property] : '';\r\n    if (property === 'mainTable' && metaData.tables[`${value}_meta`].specificParameters) {\r\n      value = metaData.tables[`${value}_meta`].specificParameters.tableName;\r\n    }\r\n\r\n    if (\r\n      ['select', 'multi-select'].indexOf(metaData.dataTable[property].type) !== -1 &&\r\n      value !== ''\r\n    ) {\r\n      const selectString = value;\r\n      value = '';\r\n      selectString.split(',').forEach((v) => {\r\n        value += value === '' ? listInfo[v]?.value || v : `,${listInfo[v]?.value || v}`;\r\n      });\r\n    }\r\n\r\n    rows.push(`${propertyInfo.value}:   ${value}`);\r\n  });\r\n\r\n  if (metaData.dataTableName === 'discussion') {\r\n    const tasks = tasksList;\r\n    rows.push('');\r\n    if (tasks.length > 0) {\r\n      rows.push('Незакрытые задачи:');\r\n      tasks.forEach((t) => rows.push(t));\r\n    } else {\r\n      rows.push('Незакрытые задачи: отсутствуют');\r\n    }\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\n// Standart dialog: full edit current task (anything loaded as main table)\r\nexport default class PopupEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openConfirm: false,\r\n      confirmMessage: '',\r\n      printPDF: false,\r\n      tasksList: [],\r\n    };\r\n    this._dataRef = React.createRef();\r\n    this.setOpen = this.setOpen.bind(this);\r\n    if (this.props.id) {\r\n      this.realId = dataTable.map((task) => task.id).indexOf(this.props.id);\r\n      this.task = dataTable[this.realId];\r\n\r\n      Object.keys(metaData.dataTable).forEach((property) => {\r\n        if (['datetime', 'date'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] =\r\n            this.task[property] && this.task[property] !== '' ? this.task[property] : null;\r\n        } else if (['time'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] =\r\n            this.task[property] && this.task[property] !== ''\r\n              ? `2000-01-01T${this.task[property]}`\r\n              : null;\r\n        } else if (['select', 'multi-select'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] = this.task[property];\r\n        }\r\n\r\n        const filesAttached = [];\r\n        if (\r\n          /\\b(http:.+?)(txt|docx?|xlsx?|pptx?|pdf|png|bmp|img|jpg|jpeg)\\b/im.test(\r\n            this.task[property]\r\n          )\r\n        ) {\r\n          filesAttached.push(\r\n            this.task[property].match(\r\n              /\\b(http:.+?)(txt|doc|docx|ppt|pptx|xls|xlsx|pdf|png|bpm|img|jpg|jpeg)\\b/gi\r\n            )\r\n          );\r\n          this.state[`${property}FilesAttached`] = filesAttached[0];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOpenConfirm = (openConfirm) => this.setState({ openConfirm });\r\n\r\n  setOpen = (open) => {\r\n    this.setState({ open });\r\n\r\n    if (open) {\r\n      Object.keys(metaData.dataTable).forEach((property) => {\r\n        if (\r\n          metaData.dataTable[property].isEditable &&\r\n          ['select', 'multi-select'].includes(metaData.dataTable[property].type)\r\n        ) {\r\n          this.task[property] = dataTable[this.realId][property];\r\n\r\n          const listName = metaData.dataTable[property].vocabulary\r\n            ? metaData.dataTable[property].vocabulary\r\n            : property;\r\n          if (!metaData[`${listName}List`]) {\r\n            getData(listName, 'direct').then((data) => {\r\n              const listInfo = {};\r\n              data.forEach((d) => {\r\n                listInfo[d.id] = d;\r\n              });\r\n              this.setState({ [`${listName}List`]: listInfo });\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleDateTimeChange = (property) => (value) => this.setState({ [property]: value });\r\n\r\n  getRealId = () => dataTable.map((task) => task.id).indexOf(this.props.id);\r\n\r\n  handleOk = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    const dataEdited = {};\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      if (key !== 'specificParameters' && key !== 'undefined') {\r\n        if (key === 'mainTable') {\r\n          dataEdited[key] = task[key];\r\n        } else {\r\n          dataEdited[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n          if (['datetime', 'date', 'time'].includes(metaData.dataTable[key].type)) {\r\n            dataEdited[key] = DateW.toDateTimeStr(metaData.dataTable[key].type, this.state[key]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // check if something changed and send only if changed;\r\n    let isDataEdited = false;\r\n    Object.keys(dataEdited).forEach((key) => {\r\n      const propertyInfo = metaData.dataTable[key];\r\n      const dataEditedValue =\r\n        propertyInfo.type === 'int' ? parseInt(dataEdited[key], 10) : dataEdited[key];\r\n      if (propertyInfo.type !== 'int' && dataEditedValue !== task[key]) {\r\n        isDataEdited = true;\r\n      }\r\n    });\r\n\r\n    if (metaData.dataTableName === 'discussion') {\r\n      if (!dataEdited.participants.split(',').includes(dataEdited.responsible)) {\r\n        dataEdited.participants = `{dataEdited.responsible},${dataEdited.participants}`;\r\n      }\r\n    }\r\n\r\n    if (isDataEdited) {\r\n      this.props.action(this.props.id, dataEdited);\r\n    } else {\r\n      console.log('Изменений внесено не было');\r\n    }\r\n    this.setOpen(false);\r\n  };\r\n\r\n  handleSaveAsNew = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    if (task.date === this.state.date && task.time === this.state.time) {\r\n      this.setState({ confirmMessage: '(дата и время не были изменены!)' });\r\n    }\r\n    this.setOpenConfirm(true);\r\n  };\r\n\r\n  confirmSaveAsNew = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    const dataEdited = {};\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      if (key !== 'specificParameters' && key !== 'undefined') {\r\n        dataEdited[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n        if (key === 'mainTable') {\r\n          dataEdited[key] = task[key];\r\n        }\r\n\r\n        if (['datetime', 'date', 'time'].includes(metaData.dataTable[key].type)) {\r\n          dataEdited[key] = DateW.toDateTimeStr(metaData.dataTable[key].type, this.state[key]);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (dataEdited.week) {\r\n      dataEdited.week = parseFloat(new DateW(dataEdited.date).getYearWeekStr());\r\n    }\r\n\r\n    console.log(dataEdited);\r\n\r\n    this.props.actionNew(dataEdited);\r\n    this.setOpen(false);\r\n  };\r\n\r\n  handleUpload = (e, property) => {\r\n    storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'warn', message: 'Файл загружается...' });\r\n    fileUpload(e.target.files[0]).then(([response, error]) => {\r\n      if (!error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Файл загружен успешно, ссылка добавлена',\r\n        });\r\n        const fileUrl = `http://${window.location.host}/smisplan-docs/${response.fileName}`;\r\n        this[property].value = `{this[property].value}\\n${fileUrl}`;\r\n\r\n        const filesAttached = [];\r\n        if (this.state[`${property}FilesAttached`])\r\n          filesAttached.push(...this.state[`${property}FilesAttached`]);\r\n        filesAttached.push(fileUrl);\r\n        this.setState({ [`${property}FilesAttached`]: filesAttached });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при загрузке',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  openUrl = (url) => window.open(url, '_blank', '');\r\n\r\n  filterValidKeys = (key) => key !== 'specificParameters' && key !== 'undefined';\r\n\r\n  sortValidKeys = (a, b) =>\r\n    metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1;\r\n\r\n  render() {\r\n    const properties = [].concat(\r\n      Object.keys(metaData.dataTable)\r\n        .filter(this.filterValidKeys)\r\n        .filter((key) => metaData.dataTable[key].isEditable)\r\n        .sort(this.sortValidKeys),\r\n      Object.keys(metaData.dataTable)\r\n        .filter(this.filterValidKeys)\r\n        .filter((key) => !metaData.dataTable[key].isEditable)\r\n        .sort(this.sortValidKeys)\r\n    );\r\n\r\n    return (\r\n      this.task && (\r\n        <Dialog\r\n          open={this.props.isOpened}\r\n          onClose={this.props.onClose}\r\n          aria-labelledby=\"dialog-title\"\r\n          fullWidth\r\n          classes={{ paper: 'dialog-edit' }}\r\n        >\r\n          <div className=\"popup-edit__header\">\r\n            <DialogTitle id=\"dialog-title\">Редактирование</DialogTitle>\r\n            <div className=\"popup-edit__print-doc\">\r\n              <ReactToPrint\r\n                trigger={() => (\r\n                  <Tooltip title=\"Печатать\">\r\n                    <IconButton className=\"icn\" style={{ padding: '0px' }}>\r\n                      <PrintIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n                content={() => {\r\n                  this.setState({ printPDF: true });\r\n                  return this._dataRef.current;\r\n                }}\r\n                onAfterPrint={() => {\r\n                  this.setState({ printPDF: false });\r\n                }}\r\n              />\r\n              {metaData.dataTableName === 'discussion' && (\r\n                <CustomIcon\r\n                  class=\"icn_save\"\r\n                  tip=\"Сохранить как документ MS Word\"\r\n                  fontSize=\"large\"\r\n                  action={() => exportDocx(textToDoc(this.task, this.state.tasksList), metaData)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <DialogContent ref={this._dataRef}>\r\n            {properties.map((property) => {\r\n              const propertyInfo = metaData.dataTable[property];\r\n              const listName = metaData.dataTable[property].vocabulary\r\n                ? metaData.dataTable[property].vocabulary\r\n                : property;\r\n              const listInfo = metaData[`${listName}List`]\r\n                ? metaData[`${listName}List`]\r\n                : this.state[`${listName}List`];\r\n\r\n              let value = this.task[property];\r\n              if (property === 'mainTable' && metaData.tables[`${value}_meta`].specificParameters) {\r\n                value = metaData.tables[`${value}_meta`].specificParameters.tableName;\r\n              }\r\n\r\n              return (\r\n                <div key={`dialogEdit-${property}-main`}>\r\n                  <div key={`dialogEdit-${property}-subMain`} className=\"popup-edit__row\">\r\n                    <div\r\n                      style={{\r\n                        width: '200px',\r\n                        fontSize: '14px',\r\n                        color: !propertyInfo.isEditable ? 'var(--font-color-disabled)' : '',\r\n                      }}\r\n                    >\r\n                      {propertyInfo.value}\r\n                    </div>\r\n                    {propertyInfo.isEditable &&\r\n                      (propertyInfo.type === 'multi-select' || propertyInfo.type === 'select') &&\r\n                      listInfo && (\r\n                        <CustomSelect\r\n                          style={{ width: '100%', minHeight: '30px', marginTop: '5px' }}\r\n                          options={Object.keys(listInfo)\r\n                            .sort((a, b) => (listInfo[a].value >= listInfo[b].value ? 1 : -1))\r\n                            .map((pKey) => ({ value: pKey, label: listInfo[pKey].value }))}\r\n                          bottom\r\n                          ref={property}\r\n                          inputRef={(el) => {\r\n                            this[property] = el;\r\n                          }}\r\n                          refName={property}\r\n                          defaultValue={\r\n                            this.task[property]\r\n                              ? this.task[property]\r\n                                  .split(',')\r\n                                  .map((v) =>\r\n                                    listInfo[v]\r\n                                      ? { value: v, label: listInfo[v].value }\r\n                                      : { value: v, label: v }\r\n                                  )\r\n                              : null\r\n                          }\r\n                          setValue={(v) => {\r\n                            this.setState({ [property]: v });\r\n                          }}\r\n                          label=\"Выбрать...\"\r\n                          isMulti={propertyInfo.type === 'multi-select'}\r\n                          isCreatable={propertyInfo.isSelectCreatable}\r\n                        />\r\n                      )}\r\n                    {propertyInfo.isEditable &&\r\n                      ['string', 'int', 'fulltext'].includes(propertyInfo.type) && (\r\n                        <Input\r\n                          defaultValue={this.task[property]}\r\n                          fullWidth\r\n                          multiline\r\n                          onKeyDown={(e) => e.stopPropagation()}\r\n                          inputRef={(el) => {\r\n                            this[property] = el;\r\n                          }}\r\n                          inputProps={{\r\n                            style: {\r\n                              fontSize: '14px',\r\n                              fontFamily: 'var(--font-main)',\r\n                              maxHeight: this.state.printPDF ? '2000px' : '200px',\r\n                              overflow: 'unset !important',\r\n                            },\r\n                          }}\r\n                          endAdornment={\r\n                            propertyInfo.hasFileUploader &&\r\n                            !this.state.printPDF && (\r\n                              <div className=\"popup-edit__upload-file\">\r\n                                <InputAdornment position=\"end\">\r\n                                  <input\r\n                                    id=\"editDialog-fileUploader\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    multiple\r\n                                    onChange={(e) => this.handleUpload(e, property)}\r\n                                  />\r\n                                  <label htmlFor=\"editDialog-fileUploader\">\r\n                                    <Tooltip title=\"Загрузить\">\r\n                                      <IconButton color=\"default\" component=\"span\">\r\n                                        <CloudUploadIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  </label>\r\n                                </InputAdornment>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                    {propertyInfo.isEditable &&\r\n                      ['datetime', 'date', 'time'].includes(propertyInfo.type) && (\r\n                        <CustomDateTimePicker\r\n                          type={propertyInfo.type}\r\n                          value={this.state[property]}\r\n                          onChange={this.handleDateTimeChange(property)}\r\n                        />\r\n                      )}\r\n                    {!propertyInfo.isEditable && (\r\n                      <TextField\r\n                        defaultValue={value}\r\n                        inputProps={{\r\n                          style: { fontSize: '14px', fontFamily: 'var(--font-main)' },\r\n                        }}\r\n                        inputRef={(el) => {\r\n                          this[property] = el;\r\n                        }}\r\n                        fullWidth\r\n                        disabled\r\n                      />\r\n                    )}\r\n                  </div>\r\n\r\n                  {this.state[`${property}FilesAttached`] &&\r\n                    this.state[`${property}FilesAttached`].length > 0 && (\r\n                      <div className=\"popup-edit__attached-file\">\r\n                        {this.state[`${property}FilesAttached`].map((fileUrl) => (\r\n                          <CustomIcon\r\n                            class=\"icn_attachment\"\r\n                            tip={`Открыть: ${fileUrl.replace(/^.+\\/(.+)$/, '$1')}`}\r\n                            type=\"material-ui\"\r\n                            fontSize=\"large\"\r\n                            action={() => this.openUrl(fileUrl)}\r\n                            key={`${fileUrl}`}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              );\r\n            })}\r\n          </DialogContent>\r\n          <DialogActions className=\"popup-edit__actions\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.handleOk}\r\n              color=\"primary\"\r\n              className=\"MuiButton-outlinedOk\"\r\n              startIcon={<CheckIcon />}\r\n            >\r\n              Принять изменения\r\n            </Button>\r\n            {metaData.specificParameters.hasEditMenuSaveAsNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={this.handleSaveAsNew}\r\n                color=\"default\"\r\n                className=\"MuiButton-outlinedDefault\"\r\n                startIcon={<SaveAltIcon />}\r\n              >\r\n                Сохранить как новую\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.props.onClose}\r\n              color=\"secondary\"\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n\r\n            <Dialog\r\n              open={this.state.openConfirm}\r\n              onClose={() => this.setOpenConfirm(false)}\r\n              aria-labelledby=\"dialog-title\"\r\n              fullWidth\r\n            >\r\n              <DialogTitle id=\"dialog-title\">\r\n                Вы подтверждаете сохранение {this.state.confirmMessage} ?\r\n              </DialogTitle>\r\n              <DialogActions className=\"popup-edit__actions\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={this.confirmSaveAsNew}\r\n                  color=\"primary\"\r\n                  className=\"MuiButton-outlinedOk\"\r\n                  startIcon={<CheckIcon />}\r\n                >\r\n                  Да\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => this.setOpenConfirm(false)}\r\n                  color=\"secondary\"\r\n                  startIcon={<CloseIcon />}\r\n                >\r\n                  Отмена\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Document, Packer, Paragraph, TextRun } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\nimport storage from '../storages/commonStorage';\r\n\r\nexport default function exportDocx(textRows) {\r\n  storage.alert.dispatch({\r\n    type: 'SHOW_ALERT',\r\n    status: 'warn',\r\n    message: 'Идёт сохранение документа...',\r\n  });\r\n\r\n  const doc = new Document();\r\n  const rows = [];\r\n\r\n  try {\r\n    textRows.forEach((text) => {\r\n      rows.push(new Paragraph({ children: [new TextRun({ text, size: '24', font: 'Arial' })] }));\r\n    });\r\n\r\n    doc.addSection({ children: rows });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      saveAs(blob, 'SMISPlan document.docx');\r\n      storage.alert.dispatch({\r\n        type: 'SHOW_ALERT',\r\n        status: 'success',\r\n        message: 'Документ успешно сохранён и загружен',\r\n      });\r\n    });\r\n  } catch (err) {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'fail',\r\n      message: 'Ошибка при создании и/или сохранении',\r\n    });\r\n    console.log(`Ошибка при сохранении и/или создании документа: ${err}`);\r\n  }\r\n\r\n  return true;\r\n}\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './PopupConfirm.css';\r\n\r\nfunction PopupConfirm({ id, action, actionName, actionText, isOpened, onClose }) {\r\n  const handleOk = () => {\r\n    action(id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpened} onClose={onClose} aria-labelledby=\"dialog-title\" fullWidth>\r\n      <DialogTitle id=\"dialog-title\">Вы подтверждаете {actionName} ?</DialogTitle>\r\n      <DialogContent>\r\n        {actionText && <div className=\"popup-confirm__content\">{actionText}</div>}\r\n        <span className=\"popup-confirm__content\">Действие невозможно отменить!</span>\r\n      </DialogContent>\r\n      <DialogActions className=\"popup-confirm__actions\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleOk}\r\n          color=\"primary\"\r\n          className=\"MuiButton-outlinedOk\"\r\n          startIcon={<CheckIcon />}\r\n        >\r\n          Да\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={onClose} color=\"secondary\" startIcon={<CloseIcon />}>\r\n          Отмена\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(PopupConfirm);\r\n","import React from 'react';\r\n\r\nimport { Dialog, DialogTitle, DialogActions, TextField, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport 'moment/locale/ru';\r\n\r\nimport CustomSelect from '../../SharedComponents/CustomSelect';\r\nimport CustomDateTimePicker from '../../SharedComponents/CustomDateTimePicker';\r\nimport { metaData, dataTable } from '../../config/data';\r\nimport DateW from '../../utils/date';\r\nimport getDefaultValues from '../../utils/defaultData';\r\nimport './PopupAddLinkedInfo.css';\r\n\r\n// Standart dialog:\r\nexport default class PopupAddLinkedInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: this.props.isOpened,\r\n      emptyDataError: false,\r\n    };\r\n\r\n    // get list of not defined fields;\r\n    const { type } = this.props;\r\n    const fields = {};\r\n    const metaTable = metaData.tables[`${type}_meta`];\r\n    const realID = dataTable.map((task) => task.id).indexOf(this.props.id);\r\n    Object.keys(metaTable.dataTable).forEach((prop) => {\r\n      if (prop !== 'id' && metaTable.dataTable[prop].defaultValue === '') {\r\n        fields[prop] = {\r\n          type: metaTable.dataTable[prop].type,\r\n          value: metaTable.dataTable[prop].value,\r\n        };\r\n\r\n        if (metaTable.dataTable[prop].initialValue) {\r\n          fields[prop].initialValue = getDefaultValues(\r\n            realID,\r\n            prop,\r\n            metaTable.dataTable,\r\n            'initialValue'\r\n          );\r\n        }\r\n\r\n        if (['select', 'multi-select'].includes(metaTable.dataTable[prop].type)) {\r\n          fields[prop].list = metaTable.dataTable[prop].vocabulary || prop;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.fields = fields;\r\n    Object.keys(fields).forEach((field) => {\r\n      if (fields[field].initialValue) {\r\n        this.state[field] = fields[field].initialValue;\r\n      } else if (['datetime', 'date', 'time'].includes(fields[field].type)) {\r\n        this.state[field] = null;\r\n      } else {\r\n        this.state[field] = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDateTimeChange = (property) => (value) => this.setState({ [property]: value });\r\n\r\n  handleOk = () => {\r\n    const editData = {};\r\n    Object.keys(this.state.fields).forEach((field) => {\r\n      editData[field] = '';\r\n    });\r\n\r\n    let emptyDataError = 0;\r\n    const { type } = this.props;\r\n    const metaTable = metaData.tables[`${type}_meta`];\r\n    Object.keys(editData).forEach((key) => {\r\n      editData[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n      if (['datetime', 'date', 'time'].includes(metaTable.dataTable[key].type)) {\r\n        editData[key] = DateW.toDateTimeStr(metaTable.dataTable[key].type, this.state[key]);\r\n      }\r\n\r\n      if (key !== 'week' && (!editData[key] || editData[key] === '')) emptyDataError++;\r\n    });\r\n\r\n    if (metaTable.dataTable.week) {\r\n      editData.week = new DateW(editData.date).getYearWeekStr();\r\n    }\r\n\r\n    if (emptyDataError) {\r\n      this.setState({ emptyDataError: true });\r\n    } else {\r\n      this.setState({ emptyDataError: false });\r\n      this.props.action(this.props.id, this.props.type, editData);\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const editData = this.state.fields;\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpened}\r\n        onClose={() => {\r\n          this.setState({ emptyDataError: false });\r\n          this.props.onClose();\r\n        }}\r\n        aria-labelledby=\"dialog-title\"\r\n        fullWidth\r\n        style={{ overflow: 'visible' }}\r\n        classes={{ paper: 'dialog-linked-data' }}\r\n      >\r\n        <DialogTitle id=\"dialog-title\">\r\n          <div className=\"popup-add-linked-info__title\">\r\n            <div>{this.props.title ? this.props.title : 'Добавление информации'}</div>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.props.onClose}\r\n              color=\"secondary\"\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {this.state.emptyDataError && (\r\n            <div className=\"popup-add-linked-info__err-no-data\">\r\n              Данные должны быть полностью заполнены\r\n            </div>\r\n          )}\r\n          {Object.keys(editData)\r\n            .filter((property) => property !== 'week')\r\n            .sort((a, b) => (editData[a].value >= editData[b].value ? 1 : -1))\r\n            .map((property) => {\r\n              const propertyInfo = editData[property];\r\n              const listInfo = metaData[`${propertyInfo.list}List`];\r\n              const { initialValue } = propertyInfo;\r\n\r\n              return (\r\n                <div key={property} className=\"popup-add-linked-info__row\">\r\n                  <div className=\"popup-add-linked-info__value\">{propertyInfo.value}</div>\r\n                  {['select', 'multi-select'].includes(propertyInfo.type) && (\r\n                    <CustomSelect\r\n                      style={{ width: '100%', minHeight: '30px', marginTop: '5px' }}\r\n                      options={Object.keys(listInfo)\r\n                        .sort((a, b) => (listInfo[a].value >= listInfo[b].value ? 1 : -1))\r\n                        .map((k) => ({ value: k, label: listInfo[k].value }))}\r\n                      defaultValue={\r\n                        initialValue\r\n                          ? initialValue\r\n                              .split(',')\r\n                              .map((v) => ({ value: v, label: listInfo[v].value }))\r\n                          : null\r\n                      }\r\n                      ref={property}\r\n                      inputRef={(el) => {\r\n                        this[property] = el;\r\n                      }}\r\n                      setValue={(value) => this.setState({ [property]: value })}\r\n                      label=\"Выбрать...\"\r\n                      isMulti={propertyInfo.type === 'multi-select'}\r\n                    />\r\n                  )}\r\n                  {['fulltext', 'string', 'id'].includes(propertyInfo.type) && (\r\n                    <TextField\r\n                      fullWidth\r\n                      value={initialValue}\r\n                      onChange={this.handleDateTimeChange(property)}\r\n                      multiline={propertyInfo.type === 'fulltext'}\r\n                    />\r\n                  )}\r\n                  {['datetime', 'date', 'time'].includes(propertyInfo.type) && (\r\n                    <CustomDateTimePicker\r\n                      type={propertyInfo.type}\r\n                      onChange={this.handleDateTimeChange(property)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </DialogContent>\r\n        <DialogActions className=\"popup-add-linked-info__actions\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={this.handleOk}\r\n            color=\"primary\"\r\n            className=\"MuiButton-outlinedOk\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Принять\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Menu, MenuItem, ListItemIcon, Typography, Divider } from '@material-ui/core';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\n\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport PopupEdit from '../PopupEdit/PopupEdit';\r\nimport PopupConfirm from '../PopupConfirm/PopupConfirm';\r\nimport PopupAddLinkedInfo from '../PopupAddLinkedInfo/PopupAddLinkedInfo';\r\nimport './TblActionMenu.css';\r\n\r\nfunction TblActionMenu(props) {\r\n  const [opened, setOpened] = React.useState(false);\r\n  const [menuEl, setMenuEl] = React.useState(null);\r\n  const [menuElSub, setMenuElSub] = React.useState(null);\r\n  const [menuList, setMenuList] = React.useState([]);\r\n  const [isPopupConfirmOpened, setIsPopupConfirmOpened] = React.useState(false);\r\n  const [isPopupEditOpened, setIsPopupEditOpened] = React.useState(false);\r\n  const [isPopupLinkedOpened, setIsPopupLinkedOpened] = React.useState({});\r\n\r\n  const _menuElSub = React.useRef(null);\r\n\r\n  // need for correct work of sub menu\r\n  const showBasicElement = () => {\r\n    menuEl.parentElement.style.display = 'flex';\r\n  };\r\n  const hideBasicElement = () => {\r\n    menuEl.parentElement.style.display = '';\r\n    setOpened(false);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setIsPopupLinkedOpened({});\r\n    if (isPopupConfirmOpened) setIsPopupConfirmOpened(false);\r\n    if (isPopupEditOpened) setIsPopupEditOpened(false);\r\n\r\n    setMenuEl(event.currentTarget);\r\n    setOpened(true);\r\n    setMenuList(props.list);\r\n  };\r\n\r\n  const handleClickSub = (event) => {\r\n    showBasicElement();\r\n    setMenuElSub(event.currentTarget);\r\n    _menuElSub.current.style.marginLeft =\r\n      -1 * `${_menuElSub.current.children[1].offsetWidth + 5}px`;\r\n  };\r\n\r\n  const action = (item, args) => {\r\n    setOpened(false);\r\n    item.action(...args);\r\n  };\r\n\r\n  const handleOpenPopupEdit = () => setIsPopupEditOpened(true);\r\n\r\n  const handleOpenPopupLinked = (type) => setIsPopupLinkedOpened({ [type]: true });\r\n\r\n  const handleOpenPopupConfirm = () => setIsPopupConfirmOpened(true);\r\n\r\n  const handleClosePopups = (event) => {\r\n    setIsPopupLinkedOpened({});\r\n    setIsPopupConfirmOpened(false);\r\n    setIsPopupEditOpened(false);\r\n    setMenuEl(null);\r\n    setOpened(false);\r\n    if (event) event.stopPropagation();\r\n  };\r\n\r\n  const closeEl = () => {\r\n    hideBasicElement();\r\n    setMenuEl(null);\r\n  };\r\n\r\n  const closeElSub = () => setMenuElSub(null);\r\n\r\n  const handleClickItem = (item, id) => () => {\r\n    setMenuEl(null);\r\n    if (item.id === 'tasks_edit') {\r\n      handleOpenPopupEdit();\r\n    } else if (item.id === 'tasks_delete') {\r\n      handleOpenPopupConfirm();\r\n    } else if (item.id === 'discussion') {\r\n      handleOpenPopupLinked(item.id);\r\n    } else if (item.id === 'question') {\r\n      handleOpenPopupLinked(item.id);\r\n    } else {\r\n      item.action(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomIcon class=\"icn_moreH\" tip=\"Меню действий\" action={handleClick} />\r\n\r\n      {opened && (\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={menuEl}\r\n          open={!!menuEl}\r\n          onClose={closeEl}\r\n          className=\"tbl-action-menu\"\r\n        >\r\n          {menuList.map((item, index) => (\r\n            <div key={`${index}`}>\r\n              {item.id === 'divider' && <Divider key={`menu-divider-${index}`} />}\r\n\r\n              {item.id !== 'divider' && !item.isListOfItems && (\r\n                <MenuItem\r\n                  key={`menu-${item.id}-menuItem`}\r\n                  onClick={handleClickItem(item, props.id)}\r\n                >\r\n                  <ListItemIcon>\r\n                    {item.id === 'tasks_edit' && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip=\"Редактировать\" />\r\n                        <PopupEdit\r\n                          isOpened={isPopupEditOpened}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={(...args) => action(item, args)}\r\n                          actionNew={item.actionNew}\r\n                          task={props.task}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {['discussion', 'question'].includes(item.id) && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip={item.value} type=\"material-ui\" />\r\n                        <PopupAddLinkedInfo\r\n                          isOpened={isPopupLinkedOpened[item.id] || false}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={item.action}\r\n                          type={item.type}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {item.id === 'tasks_delete' && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip={item.actionName} />\r\n                        <PopupConfirm\r\n                          isOpened={isPopupConfirmOpened}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={item.action}\r\n                          actionText={`Тема: ${props.task?.value}`}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {!['tasks_edit', 'tasks_delete', 'discussion', 'question'].includes(item.id) ? (\r\n                      <CustomIcon\r\n                        class={`icn_${item.id}`}\r\n                        action={item.actionName}\r\n                        actionName={item.actionName}\r\n                        actionText={props.task?.value}\r\n                        tip={item.value}\r\n                      />\r\n                    ) : null}\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\" noWrap>\r\n                    {item.value}\r\n                  </Typography>\r\n                </MenuItem>\r\n              )}\r\n              {item.id !== 'divider' && item.isListOfItems && (\r\n                <MenuItem key={`menu-${item.id}-menuItem`} onClick={handleClickSub}>\r\n                  <ListItemIcon>\r\n                    <ArrowLeft fontSize=\"medium\" />\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\" noWrap>\r\n                    {item.value}\r\n                  </Typography>\r\n                </MenuItem>\r\n              )}\r\n              {item.id !== 'divider' && item.isListOfItems && (\r\n                <Menu\r\n                  keepMounted\r\n                  anchorEl={menuElSub}\r\n                  ref={_menuElSub}\r\n                  key={`menu${item.id}-menuItem-sub`}\r\n                  open={!!menuElSub}\r\n                  onClose={closeElSub}\r\n                >\r\n                  {Object.keys(item.listItems).map((listItem) => (\r\n                    <MenuItem\r\n                      key={`menu${item.id}-menuItem-sub-${listItem}`}\r\n                      onClick={() => {\r\n                        hideBasicElement();\r\n                        setMenuEl(null);\r\n                        setMenuElSub(null);\r\n                        item.action(props.id, listItem);\r\n                      }}\r\n                    >\r\n                      {item.listItems[listItem].value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TblActionMenu);\r\n"],"sourceRoot":""}