{"version":3,"sources":["utils/defaultData.js","SharedComponents/CustomIcon.js","config/constants.js","utils/apiMockAdapter.js","utils/api.js","config/data.js","Components/Header/HeaderModes.js","Components/Header/HeaderProjects.js","Components/Header/Header.js","Components/MenuItemSettings/MenuItemSettings.js","Components/MenuItemChief/MenuItemChief.js","Components/HeaderLogin/HeaderLogin.js","Components/CheckboxListFilter/CheckboxListFilter.js","Components/MainLeftSide/MainLeftSide.js","Components/LoadingComponent/LoadingComponent.js","Components/TblHeaderBtnMenu/TblHeaderBtnMenu.js","Components/TblHeadEnhanced/TblHeadEnhanced.js","Components/TblHeaderSearch/TblHeaderSearch.js","Components/TblHeaderPagination/TblHeaderPagination.js","Components/PopupConfirmChoice/PopupConfirmChoice.js","Components/TblGroupRow/TblGroupRow.js","Components/DataTable/DataTable.js","Components/Content/Content.js","App.js","index.js","storages/commonStorage.js","utils/date.js"],"names":["getDefaultValues","id","property","metaTable","value","mode","today","Date","moment","format","undefined","search","inputData","split","objectKey","objectValue","dataTable","metaData","React","memo","props","size","fontSize","type","style","padding","class","left","color","title","tip","className","onClick","action","href","target","rel","width","height","display","urlApi","user","require","developers","projects","task","discussion","calendar","event","data","mock","MockAdapter","axios","delayResponse","onGet","reply","onPut","status","error","onPatch","onDelete","onPost","defaults","headers","get","post","put","patch","delete","Api","then","_handleApiResult","bind","body","fnName","res","getData","a","getUser","result","login","getProject","getDeveloper","info","Object","keys","length","Error","mainModes","map","m","includes","tables","getMetaData","key","infoR","infoKey","values","mobile","showInTableMobile","showInTable","validValues","vocabulary","dataTableName","setDataTable","prop","propInfo","filters","setKeys","parseInt","e","console","push","doData","feature","json","putData","patchData","deleteData","postData","method","log","fileUpload","file","formData","FormData","append","fetch","response","ok","modes","realData","filter","projectList","developerList","clear","getKeys","test","tbl","isFilter","forEach","setValue","field","vocFilter","f","join","checkFilter","indexOf","checkValue","filterData","Array","isArray","perm","specificParameters","mainValue","compare","fieldsArray","replace","ff","propertyValue","taskValue","asRegexp","date","RegExp","this","developer","project","filtersStorageString","sessionStorage","getItem","filtersStorage","JSON","parse","hasStorageFilters","v","storage","alert","dispatch","message","filterTasks","redrawTable","filtersString","stringify","setItem","dataTableShow","reloadDataTable","hostpath","window","location","getMode","pathname","pathArray","slice","shift","tableName","document","useState","handleChange","newValue","toISOString","useEffect","subscribe","table","storageTableName","getState","TABLE","AppBar","position","path","render","Tabs","onChange","indicatorColor","textColor","variant","scrollButtons","aria-label","index","Tab","label","a11yProps","disabled","to","component","Link","HeaderProjects","setProjects","setState","reloadActiveProjects","projectsHash","projectsActive","projectsOther","showAsDisabled","sort","b","state","redraw","unsubscribe","dataLoading","STATE","unsubscribeUpd","upd","UPD","update","unsubscribeData","DATA","classes","root","tabStyles","PureComponent","MenuItemSettings","setCheckedElSubList","checkedElSubList","handleClickItem","documentElement","colorIcons","getComputedStyle","getPropertyValue","setProperty","colorHover","menuElSub_c","menuEl","handleClickItemSub","stage","menuElSub","openUrl","url","open","opened","isOpened","CustomIcon","currentTarget","Menu","name","anchorEl","keepMounted","Boolean","onClose","MenuItem","headCell","Checkbox","edge","ref","checked","tabIndex","disableRipple","MenuItemChief","menuItem","currentDate","DateW","currentWeek","getWeek","notifyWeek","getFullYear","getDay","week","ListItemIcon","Typography","noWrap","HeaderLogin","filtersOff","username","_columnsList","createRef","trigger","Tooltip","IconButton","content","dataRef","current","resortActive","activeDevsList","row","author","activeDevs","nonActiveDevs","dev","CheckboxListFilter","setOpen","setChecked","resortDevelopers","inputDevelopers","sortedDevelopers","outputDevelopers","handleToggle","currentIndex","newChecked","splice","updateData","inputFilter","List","dense","labelId","ListItem","role","button","inputProps","ListItemText","primary","Divider","MainLeftSide","widthDefault","handleShow","handleHide","list","d","Drawer","anchor","paper","borderRadius","LoadingComponent","textAlign","paddingTop","CircularProgress","TblHeaderBtnMenu","setAnchorEl","handleClick","handleClose","itemList","item","all","noClose","backgroundColor","utils","MomentUtils","margin","marginLeft","inputRef","el","Component","TblHeadEnhanced","setCoumnWidth","headCells","widths","getColumnWidth","hasAdditionalCell","hasSpecAction","hasSpecNotes","hasEditMenu","hasDeleteButton","hasDoneButton","getAdditionalCellProps","createSortHandler","onRequestSort","createGroupHandler","onRequestGroup","groupBy","handleDateFilter","onFilter","headCellWidth","innerWidth","isGroup","isInlineEditable","isHovered","order","orderBy","TableRow","tableIndex","filterVisibility","groupVisibility","paddingLeft","minWidth","filterList","groupList","TableCell","align","maxWidth","onMouseEnter","onMouseLeave","sortDirection","TableSortLabel","active","direction","TblHeaderSearch","setSearch","clearSearch","Input","placeholder","onKeyDown","startAdornment","InputAdornment","endAdornment","TblHeaderPagination","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","labelRowsPerPage","labelDisplayedRows","from","backIconButtonProps","paddingBottom","nextIconButtonProps","toolbar","select","ActionsComponent","countTotal","Math","ceil","placement","enterDelay","PopupConfirmChoice","choice","setChoice","options","setOptions","actionName","Dialog","aria-labelledby","fullWidth","DialogTitle","DialogContent","RadioGroup","i","FormControlLabel","control","Radio","DialogActions","Button","startIcon","getYearWeekStr","TblGroupRow","fullColsNum","getDateGroup","groupValue","groupHide","colSpan","setGroup","dayOptions","weekData","sendNotification","toggleDescription","weekOptions","weekObj","weekDate","setDate","getDate","weekStr","startOf","endOf","copyPreviousWeekDiscussions","TblActionMenu","lazy","PopupEditFullText","TblSecondaryList","TblFullTextRow","getSorting","desc","val_a","Number","isInteger","toString","val_b","DataTable","setData","setEditID","setPage","setOrder","setOrderBy","editID","setEditItem","editItem","setShowFullTextID","showFullTextID","setRowsPerPage","setHeadCells","setWeekDescription","weekDescription","commonFieldSearch","setSort","sortFieldIndex","handleRequestSort","handleRequestGroup","byWeek","handleChangePage","newPage","handleChangeRowsPerPage","defaultSort","sortSString","sortObj","defaultGroupField","realID","editTableRow","rowData","errorResult","addTableRow","updateTable","addTableRowArray","rowDataArray","Promise","returnDataArray","jsonOk","returnData","returnError","returnJson","deleteTableRow","inlineEditOk","editProperty","dialogEditOk","editPropertyValue","completeTableRow","dateEnd","setStatusTableRow","showFullText","loadLinked","loadTableName","mainTable","idTask","titleRow","showResults","showAddRows","secDataList","participants","string","addLinkedData","infoData","linkedData","defaultValue","loadSecondaryList","dataListName","menuActionLoadQuestions","menuActionLoadDiscussions","menuActionLoadThemeTasks","sendNotificationWeekDate","actionMenuList","menuList","hasQuestions","haveDiscussion","hasGoToDiscussion","hasSublistData","actionNew","hasSetStatusMenu","isListOfItems","listItems","statusList","hasNotificationButton","hasShowResults","setIsOpenedPopupEdit","taskID","taskPopupEdit","isOpenedPopupEdit","loadData","hasAddMenu","selectedWeek","chosenWeek","infoArray","videoConf","newWeekDate","day","defaultSortDirection","defaultSortField","unsubscribeTable","toLocaleDateString","noPagination","Table","stickyHeader","TableHead","rowCount","hasTitleRow","TableBody","array","cmp","stabilizedThis","stableSort","rowClass","priority","showGroupByRow","dayName","groupField","fullText","fullTextIndexCell","ZoomLink","YouTubeLink","r","hover","whiteSpace","hasFullTextLink","autoFocus","hoverID","fallback","text","borderBottom","MainCalendar","DataAdd","Content","setTableName","dates","Hint","App","setDevelopers","_divDataTable","useRef","func","resetFilter","removeItem","navigator","userAgent","match","ReactDOM","querySelector","createStore","combineReducers","ALERT","meta","META","dowOffset","newYear","weeknum","daynum","floor","getTime","getTimezoneOffset","nYear","nday","getWeekStr","dayOffset","toDateTimeStr","_isAMomentObject"],"mappings":"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","file":"static/js/main.ebe6dae3.chunk.js","sourcesContent":["import moment from 'moment';\nimport { metaData, dataTable } from '../config/data';\n\nexport default function getDefaultValues (id, property, metaTable, mode = 'defaultValue') {\n  const today = new Date();\n  let value;\n  switch (metaTable[property][mode]) {\n    case 'date':\n      value = moment(today, 'YYYY-MM-DD').format('YYYY-MM-DD');\n      break;\n    case 'time':\n      value = moment(today, 'YYYY-MM-DD').format('HH:mm:00');\n      break;\n    case 'datetime':\n      value = moment(today, 'YYYY-MM-DD').format('YYYY-MM-DD HH:mm:00');\n      break;\n    case 'empty':\n      value = undefined;\n      break;\n    default:\n      if ( metaTable[property][mode].search(/object:/) !== -1 ) {\n        const inputData = metaTable[property][mode].split(',');\n        const objectKey = inputData[0].split(':')[1];\n        const objectValue = inputData[1].split(':')[1];\n        if ( objectKey === 'data' ) {\n          value = dataTable[ id ][ objectValue ]\n        } else if ( objectKey === 'meta' ) {\n          value = metaData[ objectValue ]\n        }\n      }\n      else{\n        value = metaTable[property][mode];\n      }\n\n      break;\n  }\n\n  return value;\n}\n","import React from 'react';\nimport {IconButton, Tooltip} from '@material-ui/core';\n\nimport FilterListIcon       from '@material-ui/icons/FilterList';\nimport ClearIcon            from '@material-ui/icons/Clear';\nimport SearchIcon           from '@material-ui/icons/Search';\nimport SettingsIcon         from '@material-ui/icons/Settings';\nimport PlaylistAddIcon      from '@material-ui/icons/PlaylistAdd';\nimport EditIcon             from '@material-ui/icons/Edit';\nimport DeleteIcon           from '@material-ui/icons/Delete';\nimport CheckIcon            from '@material-ui/icons/Check';\nimport CheckCircleIcon      from '@material-ui/icons/CheckCircle';\nimport CancelIcon           from '@material-ui/icons/Cancel';\nimport VisibilityIcon       from '@material-ui/icons/Visibility';\nimport PrintIcon            from '@material-ui/icons/Print';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport DoubleArrowIcon      from '@material-ui/icons/DoubleArrow';\nimport ChevronLeftIcon      from '@material-ui/icons/ChevronLeft';\nimport CommentIcon          from '@material-ui/icons/Comment';\nimport DescriptionIcon      from '@material-ui/icons/Description';\nimport MenuIcon             from '@material-ui/icons/Menu';\nimport SpeakerNotesIcon     from '@material-ui/icons/SpeakerNotes';\nimport FormatIndentDecreaseIcon   from '@material-ui/icons/FormatIndentDecrease';\nimport AccountTreeIcon      from '@material-ui/icons/AccountTree';\nimport ArrowRightIcon       from '@material-ui/icons/ArrowRight';\nimport ArrowLeftIcon        from '@material-ui/icons/ArrowLeft';\nimport ArrowDropUpIcon      from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDownIcon    from '@material-ui/icons/ArrowDropDown';\nimport ContactSupportIcon   from '@material-ui/icons/ContactSupport';\nimport MoreHorizIcon        from '@material-ui/icons/MoreHoriz';\nimport MoreVertIcon         from '@material-ui/icons/MoreVert';\nimport GroupAddIcon         from '@material-ui/icons/GroupAdd';\nimport CloudUploadIcon      from '@material-ui/icons/CloudUpload';\nimport HowToRegIcon         from '@material-ui/icons/HowToReg';\nimport AssignmentIcon       from '@material-ui/icons/Assignment';\nimport SaveIcon             from '@material-ui/icons/Save';\nimport AttachmentIcon       from '@material-ui/icons/Attachment';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport RecordVoiceOverIcon  from '@material-ui/icons/RecordVoiceOver';\nimport ViewListIcon         from '@material-ui/icons/ViewList';\nimport AddToPhotosIcon      from '@material-ui/icons/AddToPhotos';\n\nfunction CustomIcon(props) {\n    const size = typeof props.size !== undefined ? props.size : '30px';\n    const fontSize = props.fontSize !== undefined ? props.fontSize : 'default';\n    const type = props.type ? props.type : \"material-ui\";\n\n    const style = props.style || {};\n    style.padding = \"0px\";\n    if ( props.class === \"icn_arrow_left_fill\" ) style.left = \"-30px\";\n\n    let color=\"default\";\n    if ( props.class === \"icn_ok\" ) {}\n    if ( props.class === \"icn_cancel\" ) {\n        color=\"secondary\"\n    }\n\n    return (\n      <>\n        {\n        type === 'material-ui' &&\n        <Tooltip title={props.tip ? props.tip : ''}>\n        <IconButton className=\"icn\" style={style} color={color} onClick={typeof props.action === 'function' ? props.action : null}>\n            {props.class === \"icn_filter\"          && <FilterListIcon fontSize={fontSize}/>}\n            {props.class === \"icn_tasks_add\"       && <PlaylistAddIcon fontSize={fontSize}/>}\n            {props.class === \"icn_tasks_edit\"      && <EditIcon fontSize={fontSize}/>}\n            {props.class === \"icn_tasks_delete\"    && <DeleteIcon fontSize={fontSize}/>}\n            {props.class === \"icn_tasks_complete\"  && <CheckIcon fontSize={fontSize}/>}\n            {props.class === \"icn_ok\"              && <CheckCircleIcon style={{color:\"green\"}} fontSize={fontSize}/>}\n            {props.class === \"icn_cancel\"          && <CancelIcon fontSize={fontSize}/>}\n            {props.class === \"icn_filterOff\"       && <VisibilityIcon fontSize={fontSize}/>}\n            {props.class === \"icn_print\"           && <PrintIcon fontSize={fontSize}/>}\n            {props.class === \"icn_tasks_daily\"     && <FormatListNumberedIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_right\"     && <ArrowRightIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_left\"      && <ArrowLeftIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_down\"      && <ArrowDropDownIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_up\"        && <ArrowDropUpIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_right_fill\"&& <DoubleArrowIcon fontSize={fontSize}/>}\n            {props.class === \"icn_arrow_left_fill\" && <ChevronLeftIcon fontSize={fontSize}/>}\n            {props.class === \"icn_description\"     && <DescriptionIcon fontSize={fontSize}/>}\n            {props.class === \"icn_comment\"         && <CommentIcon fontSize={fontSize}/>}\n            {props.class === \"icn_settings\"        && <SettingsIcon fontSize={fontSize}/>}\n            {props.class === \"icn_menu\"            && <MenuIcon fontSize={fontSize}/>}\n            {props.class === \"icn_spec_notes\"      && <SpeakerNotesIcon fontSize={fontSize}/>}\n            {props.class === \"icn_group\"           && <FormatIndentDecreaseIcon fontSize={fontSize}/>}\n            {props.class === \"icn_secDataList\"     && <AccountTreeIcon fontSize={fontSize}/>}\n            {props.class === \"icn_secDataListCollapse\" && <ArrowDropUpIcon fontSize={fontSize}/>}\n            {props.class === \"icn_question\"        && <ContactSupportIcon fontSize={fontSize}/>}\n            {props.class === \"icn_moreH\"           && <MoreHorizIcon fontSize={fontSize}/>}\n            {props.class === \"icn_moreV\"           && <MoreVertIcon fontSize={fontSize}/>}\n            {props.class === \"icn_meeeting\"        && <GroupAddIcon fontSize={fontSize}/>}\n            {props.class === \"icn_discussion\"      && <HowToRegIcon fontSize={fontSize}/>}\n            {props.class === \"icn_notification\"    && <NotificationsActiveIcon fontSize={fontSize}/>}\n            {props.class === \"icn_search\"          && <SearchIcon fontSize={fontSize}/>}\n            {props.class === \"icn_clear\"           && <ClearIcon fontSize={fontSize}/>}\n            {props.class === \"icn_download\"        && <CloudUploadIcon fontSize={fontSize}/>}\n            {props.class === \"icn_save\"            && <SaveIcon fontSize={fontSize}/>}\n            {props.class === \"icn_save_doc\"        && <AssignmentIcon fontSize={fontSize}/>}\n            {props.class === \"icn_attachment\"      && <AttachmentIcon fontSize={fontSize}/>}\n            {props.class === \"icn_chief\"           && <RecordVoiceOverIcon fontSize={fontSize}/>}\n            {props.class === \"icn_discussionList\"  && <ViewListIcon fontSize={fontSize}/>}\n            {props.class === \"icn_discussionCopy\"  && <AddToPhotosIcon fontSize={fontSize}/>}\n        </IconButton>\n        </Tooltip>\n        }\n        {\n        type === 'link' &&\n        <a href={props.href} target=\"_blank\" title={props.tip ? props.tip : ''} rel=\"noopener noreferrer\">\n        <div style={{width:size, height:size, display:'inline-block'}}\n          onClick={props.action} className={props.class}>\n        </div>\n        </a>\n        }\n        {\n        type !== 'link' && type !== 'material-ui' &&\n        <div style={{width:size, height:size, display:'inline-block'}}\n            onClick={props.action} className={props.class}>\n        </div>\n        }\n      </>\n    )\n}\n\nexport default React.memo(CustomIcon);\n","export const urlApi = '/smisplan/cgi/api-smisplan-getInfo.pl';\n","import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport { urlApi } from '../config/constants';\n\nconst user = require('../config/dummyData/user.json');\nconst developers = require('../config/dummyData/developers.json');\nconst projects = require('../config/dummyData/projects.json');\n\nconst metaData = {\n  task: null,\n  discussion: null,\n  calendar: null,\n  event: null,\n};\n\nmetaData.task = require('../config/dummyData/task_meta.json');\nmetaData.discussion = require('../config/dummyData/discussion_meta.json');\nmetaData.calendar = require('../config/dummyData/calendar_meta.json');\nmetaData.event = require('../config/dummyData/event_meta.json');\n\nconst data = {\n  task: null,\n  discussion: null,\n  calendar: null,\n  event: null,\n};\n\ndata.task = require('../config/dummyData/task.json');\ndata.discussion = require('../config/dummyData/discussion.json');\ndata.calendar = require('../config/dummyData/calendar.json');\ndata.event = require('../config/dummyData/event.json');\n\nconst mock = new MockAdapter(axios, { delayResponse: 100 });\n\nexport default function setMockAdapter() {\n  // get basic information\n  mock.onGet(`${urlApi}/user/`).reply(200, user);\n\n  mock.onGet(`${urlApi}/developer/`).reply(200, developers);\n\n  mock.onGet(`${urlApi}/project/`).reply(200, projects);\n\n  // get meta data information\n  mock.onGet(`${urlApi}/task-meta/`).reply(200, metaData.task);\n\n  mock.onGet(`${urlApi}/discussion-meta/`).reply(200, metaData.discussion);\n\n  mock.onGet(`${urlApi}/calendar-meta/`).reply(200, metaData.calendar);\n\n  mock.onGet(`${urlApi}/event-meta/`).reply(200, metaData.event);\n\n  // get data\n  mock.onGet(`${urlApi}/task/`).reply(200, data.task);\n\n  mock.onGet(`${urlApi}/discussion/`).reply(200, data.discussion);\n\n  mock.onGet(`${urlApi}/calendar/`).reply(200, data.calendar);\n\n  mock.onGet(`${urlApi}/event/`).reply(200, data.event);\n\n  // put data\n  mock.onPut(`${urlApi}/task/`).reply(200, {status: \"OK\", error: \"\"});\n\n  mock.onPut(`${urlApi}/discussion/`).reply(200, {status: \"OK\", error: \"\"});\n\n  // patch data\n  mock.onPatch(`${urlApi}/task/`).reply(200, {status: \"OK\", error: \"\"});\n\n  mock.onPatch(`${urlApi}/discussion/`).reply(200, {status: \"OK\", error: \"\"});\n\n  // delete data\n  mock.onDelete(`${urlApi}/task/`).reply(200, {status: \"OK\", error: \"\"});\n\n  mock.onDelete(`${urlApi}/discussion/`).reply(200, {status: \"OK\", error: \"\"});\n\n  // post data\n  mock.onPost(`${urlApi}/task/`).reply(200, {status: \"OK\", error: \"\"});\n\n  mock.onPost(`${urlApi}/discussion/`).reply(200, {status: \"OK\", error: \"\"});\n}\n","import storage from '../storages/commonStorage';\nimport { metaData, dataTable, mainModes, filters, setDataTable } from '../config/data';\nimport { urlApi } from '../config/constants';\nimport axios from 'axios';\nimport setMockAdapter from './apiMockAdapter';\n\nsetMockAdapter();\n\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.put['Content-Type'] = 'application/json';\naxios.defaults.headers.patch['Content-Type'] = 'application/json';\naxios.defaults.headers.delete['Content-Type'] = 'application/json';\n\nclass Api {\n  static async getUser() {\n    return axios.get(`${urlApi}/user/`).then(Api._handleApiResult.bind(null, 'getUser'));\n  }\n\n  static async getProject() {\n    return axios.get(`${urlApi}/project/`).then(Api._handleApiResult.bind(null, 'getProject'));\n  }\n\n  static async getDeveloper() {\n    return axios.get(`${urlApi}/developer/`).then(Api._handleApiResult.bind(null, 'getDeveloper'));\n  }\n\n  static async getMetaData(mode) {\n    return axios.get(`${urlApi}/${mode}/`).then(Api._handleApiResult.bind(null, 'getMetaData'));\n  }\n\n  static async getData(mode) {\n    return axios.get(`${urlApi}/${mode}/`).then(Api._handleApiResult.bind(null, 'getData'));\n  }\n\n  static async putData(mode, body) {\n    return axios.put(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'putData'));\n  }\n\n  static async patchData(mode, body) {\n    return axios.patch(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'patchData'));\n  }\n\n  static async deleteData(mode, body) {\n    return axios.delete(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'deleteData'));\n  }\n\n  static async postData(mode, body) {\n    return axios.post(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'postData'));\n  }\n\n  static _handleApiResult(fnName, res) {\n    return res.data.data;\n\n    if (res.data.status !== 'OK') {\n      storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'fail', message: 'Ошибка' });\n      console.error(`Ошибка запроса: ${res.data.error}`);\n    }\n\n    if (!['OK', 'Created', 'No Content'].includes(res.statusText)) {\n      storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'fail', message: 'Ошибка' });\n      console.error(`Ошибка HTTP:  + ${res.statusText}`);\n    }\n\n    return ['OK', 'Created', 'No Content'].includes(res.statusText)\n      ? res.data\n      : Error(`Ошибка получения результата в ${fnName}: ${res.status} ${res.statusText}`);\n  }\n}\n\n/* get meta/data etc function */\nexport const getData = async (mode, type = 'initialize', filter = {}) => {\n  if (mode === 'user') {\n    const result = await Api.getUser();\n\n    if (result !== 'ERROR') {\n      metaData.user = result;\n      metaData.login = result.login;\n\n      return result;\n    }\n  }\n\n  if (mode === 'project' || mode === 'developer') {\n    let result;\n    if (mode === 'project') result = await Api.getProject();\n    if (mode === 'developer') result = await Api.getDeveloper();\n\n    if (result !== 'ERROR') {\n      metaData[`${mode}List`] = {};\n      for (let info of result) {\n        metaData[`${mode}List`][info.id] = { id: info.id, value: info.value };\n      }\n    }\n\n    if (!metaData[`${mode}List`] || Object.keys(metaData[`${mode}List`]).length === 0) {\n      throw new Error('Data not uploaded');\n    }\n  }\n\n  if ( mainModes.map(m => `${m}_meta`).includes(mode)) {\n    if (!metaData.tables[mode]) {\n      const result = await Api.getMetaData(mode);\n\n      if (result !== 'ERROR') {\n        metaData.tables[mode] = {};\n        metaData.tables[mode].dataTable = {};\n        for (let infoR of result) {\n          let infoKey = Object.keys(infoR)[0];\n          let info = Object.values(infoR)[0];\n\n          //fix json 'true','false' to boolean\n          for (let key in info) {\n            if (metaData.mobile && typeof info.showInTableMobile !== 'undefined')\n              info.showInTable = info.showInTableMobile;\n\n            if (info[key] === 'true') info[key] = true;\n            if (info[key] === 'false') info[key] = false;\n          }\n\n          if (infoKey === 'specificParameters') {\n            metaData.tables[mode][infoKey] = info;\n          } else if (typeof info.validValues !== 'undefined' && info.validValues !== '') {\n            metaData.tables[mode][`${info.id}List`] = info.validValues;\n          } else if (\n            (typeof info.validValues === 'undefined' || info.validValues === '') &&\n            (info.type === 'select' || info.type === 'multi-select') &&\n            info.vocabulary &&\n            metaData[`${info.vocabulary}List`]\n          ) {\n            metaData.tables[mode][`${info.id}List`] = metaData[`${info.vocabulary}List`];\n          }\n\n          if (infoKey !== 'specificParameters') {\n            metaData.tables[mode].dataTable[info.id] = info;\n          }\n        }\n      }\n    }\n\n    if (metaData.tables[mode] && mode === metaData.dataTableName + '_meta') {\n      for (let key in metaData.tables[mode]) {\n        metaData[key] = metaData.tables[mode][key];\n      }\n      setDataTable([]);\n    }\n\n    for (let prop in metaData.dataTable) {\n      let propInfo = metaData.dataTable[prop];\n      if (\n        (propInfo.type === 'select' || propInfo.type === 'multi-select') &&\n        !metaData[`${prop}List`] &&\n        propInfo.vocabulary &&\n        metaData[`${propInfo.vocabulary}List`]\n      ) {\n        metaData[`${prop}List`] = metaData[`${propInfo.vocabulary}List`];\n      }\n    }\n\n    filters.setKeys(metaData.dataTable);\n  }\n\n  let data = [];\n  if (mainModes.includes(mode)) {\n    const result = await Api.getData(mode);\n\n    if (result !== 'ERROR') {\n      if (type === 'initialize') setDataTable([]);\n\n      for (let info of result) {\n        try {\n          info.id = parseInt(info.id);\n        } catch (e) {\n          console.error('Ошибка: невозможно поле id сделать integer');\n        }\n\n        if (type === 'meta') {\n          if (!metaData[`${mode}List`]) metaData[`${mode}List`] = {};\n          metaData[`${mode}List`][info.id] = info;\n        } else if (type === 'initialize') {\n          dataTable.push(info);\n        } else if (type === 'direct') {\n          data.push(info);\n        }\n      }\n\n      if (type === 'direct') {\n        return data;\n      }\n    }\n  }\n};\n\n/* put/delete/patch data */\nexport const doData = async (mode, data, id, feature) => {\n  if (!feature) feature = 'task';\n  let json = {};\n  let error = true;\n\n  if (!['put', 'delete', 'patch', 'notify'].includes(mode)) {\n    console.error(`Mode [${mode}] is not available`);\n  } else {\n    try {\n      let body = {\n        feature: feature,\n        data: {\n          data: data,\n          id: id,\n        },\n      };\n\n      let result;\n      if (mode === 'put') result = await Api.putData(feature, body);\n      if (mode === 'patch') result = await Api.patchData(feature, body);\n      if (mode === 'delete') result = await Api.deleteData(feature, body);\n      if (mode === 'notify') result = await Api.postData(feature, {...body, method: mode});\n\n      json = result !== \"ERROR\" ? result.data : result;\n    } catch (err) {\n      console.log(`Unexpected error ${err}`); // Failed to fetch\n    }\n  }\n\n  return [error, json];\n};\n\n/* file uploader function */\nexport async function fileUpload(file) {\n  let urlApi = '/smisplan/cgi/upload.pl';\n  const formData = new FormData();\n  formData.append('file', file);\n\n  let json = {};\n  let error = true;\n  try {\n    let response = await fetch(urlApi, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (response && response.ok) {\n      json = await response.json();\n\n      if (json.status === 'OK') {\n        error = false;\n      } else if (json.error) {\n        console.log(`Ошибка запроса: ${json.error}`);\n      }\n    }\n  } catch (err) {\n    console.log(`Unexpected error ${err}`); // Failed to fetch\n  }\n\n  return [json, error];\n}\n","import storage from '../storages/commonStorage';\n\nexport const modes = [\n  { id: 'task', value: 'Задачи', realData: true },\n  { id: 'discussion', value: 'Обсуждения', realData: true },\n  { id: 'calendar', value: 'Календарь', realData: true },\n  { id: 'event', value: 'Изменения', realData: true },\n];\n\nexport const mainModes = modes.filter(e => e.realData).map(e => e.id);\n\nexport let dataTable = [];\nexport let metaData = {\n  mobile: false,\n  user: {},\n  dataTableName: 'task',\n  projectList: {},\n  developerList: {},\n  dataTable: {},\n  tables: {},\n};\n\nexport const setDataTable = (data) => {\n  dataTable = data;\n};\n\n/* main Filter class */\nclass Filters {\n  constructor(props) {\n    this.data = { developer: [], project: '' };\n    this.perm = {};\n\n    let filtersStorageString = sessionStorage.getItem('filters');\n    if (filtersStorageString && filtersStorageString !== '{}') {\n      let filtersStorage = JSON.parse(filtersStorageString);\n      this.data = filtersStorage[metaData.dataTableName]?.data || {};\n      this.perm = filtersStorage[metaData.dataTableName]?.perm || {};\n\n      let hasStorageFilters = false;\n      Object.values(this.data).forEach((v) => {\n        if ((!Array.isArray(v) && v !== '') || (Array.isArray(v) && v.length > 0))\n          hasStorageFilters = true;\n      });\n      if (hasStorageFilters)\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Были использованы ранее сохранённые фильтры',\n        });\n    }\n  }\n\n  // clear all data\n  clear = () => {\n    for (let key of this.getKeys()) {\n      if (/^_.+/.test(key)) {\n        delete this.data[key];\n      } else if (typeof this.data[key] === 'string') {\n        this.data[key] = '';\n      } else {\n        this.data[key] = [];\n      }\n    }\n  };\n\n  setKeys = (tbl) => {\n    Object.values(tbl)\n      .filter((a) => {\n        return a.isFilter;\n      })\n      .forEach((value) => {\n        if (typeof this.data[value.id] === 'undefined') this.data[value.id] = '';\n      });\n  };\n\n  // set single filter field + all fields where this one is as Vocabulary\n  setValue = (mode = 'data', field, value) => {\n    this[mode][field] = value;\n\n    let vocFilter = [];\n    for (let f in metaData.dataTable) {\n      if (metaData.dataTable[f].vocabulary === field) vocFilter.push(f);\n    }\n\n    if (vocFilter.length > 0) {\n      if (vocFilter.length === 1) {\n        this[mode][vocFilter[0]] = value;\n      } else {\n        this[mode]['_' + vocFilter.join('OR')] = value;\n      }\n    }\n  };\n\n  // get all keys\n  getKeys = (mode = 'data') => {\n    return Object.keys(this[mode]);\n  };\n\n  // check if field is filter\n  checkFilter = (f) => {\n    return this.getKeys().indexOf(f) > -1 ? true : false;\n  };\n\n  // check if row data is ok for filter\n  checkValue = (task) => {\n    let filter = true;\n    let filterData = {};\n\n    this.getKeys('data').map((key) => {\n      if (Array.isArray(filterData[key])) {\n        return filterData[key].includes(this.data[key])\n      }\n      return (filterData[key] = this.data[key]);\n    });\n    this.getKeys('perm').map((key) => {\n      return (filterData[key] = this.perm[key]);\n    });\n\n    for (let f in filterData) {\n      if (!filterData[f] || filterData[f] === '') continue;\n      if (!metaData.dataTable[f] && f.search(/^_.+OR.+$/) === -1 && f !== 'commonFieldSearch')\n        continue;\n\n      // filter for SEARCH\n      if (f === 'commonFieldSearch') {\n        for (let field in task) {\n          if (field === 'value') continue;\n          if (\n            field !== metaData.specificParameters.mainValue // && metaData.dataTable[field]?.type !== 'fulltext'\n          )\n            continue;\n          if (typeof task[field] !== 'string') continue;\n          filter = this.compare(filterData[f], task[field], true);\n          if (filter) break;\n        }\n      } else if (f.search(/^_(.+OR.+)$/) !== -1) {\n        let fieldsString = f.replace(/^_(.+OR.+)/, '$1');\n        let fieldsArray = fieldsString.split('OR');\n        for (let field of fieldsArray) {\n          if (!metaData.dataTable[field]) continue;\n\n          if (metaData.dataTable[field].type === 'multi-select') {\n            for (let ff of task[field].split(',')) {\n              filter = this.compare(filterData[f], ff);\n              if (filter) break;\n            }\n          } else {\n            filter = this.compare(filterData[f], task[field]);\n          }\n          if (filter) break;\n        }\n      } else if (metaData.dataTable[f].type === 'multi-select') {\n        for (let ff of task[f].split(',')) {\n          filter = this.compare(filterData[f], ff);\n          if (filter) break;\n        }\n      } else {\n        filter = this.compare(filterData[f], task[f]);\n      }\n      if (!filter) break;\n    }\n    return filter;\n  };\n\n  // compare two direct values: filter and row data value\n  compare = (propertyValue, taskValue, asRegexp = 'false') => {\n    let filter = true;\n    if (typeof propertyValue === 'string') {\n      if (\n        propertyValue !== '' &&\n        taskValue &&\n        taskValue !== '' &&\n        taskValue.search(/\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/) !== -1\n      ) {\n        let date = taskValue.replace(/(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}/, '$1');\n\n        if (propertyValue !== date) filter = false;\n      } else if (taskValue && propertyValue !== '' && !asRegexp) {\n        if (propertyValue !== taskValue) filter = false;\n      } else if (taskValue && propertyValue !== '' && asRegexp) {\n        if (taskValue.search(new RegExp(propertyValue, 'i')) === -1) filter = false;\n      } else if ((!taskValue || taskValue === '') && propertyValue !== '') {\n        filter = false;\n      }\n    } else if (typeof propertyValue === 'number') {\n      if (propertyValue && propertyValue > 0 && propertyValue !== parseInt(taskValue))\n        filter = false;\n    } else {\n      if (propertyValue && propertyValue.length > 0 && propertyValue.indexOf(taskValue) === -1)\n        filter = false;\n    }\n\n    return filter;\n  };\n}\n\nexport let filters = new Filters({});\n\n/* universal filter function */\nexport function filterTasks(redrawTable = false) {\n  // const filtersString = JSON.stringify(filters);\n  // sessionStorage.setItem('filters', filtersString);\n  // const filtersString = JSON.stringify({[metaData.dataTableName]: filters});\n\n  const filtersStorage = JSON.parse(sessionStorage.getItem('filters') || '{}');\n  if (redrawTable) {\n    filters.data = filtersStorage[metaData.dataTableName]?.data || {};\n    filters.perm = filtersStorage[metaData.dataTableName]?.perm || {};\n  } else {\n    if (filters.data.developer && filters.data.developer.length > 0) {\n      modes.forEach(mode => {\n        if (filtersStorage[mode.id]) {\n          filtersStorage[mode.id].data.developer = [...filters.data.developer];\n        } else {\n          filtersStorage[mode.id] = {\n            data: {\n              developer: [...filters.data.developer],\n            }\n          };\n        }\n      })\n    }\n\n    filtersStorage[metaData.dataTableName] = filters;\n    const filtersString = JSON.stringify(filtersStorage);\n    sessionStorage.setItem('filters', filtersString);\n  }\n\n  let dataTableShow = [];\n  for (let task of dataTable) {\n    let filter = filters.checkValue(task);\n    if (filter) dataTableShow.push(task);\n  }\n\n  return dataTableShow;\n}\n","import React from 'react';\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport storage from '../../storages/commonStorage';\nimport { metaData, filters, modes, mainModes } from '../../config/data';\n\nfunction a11yProps(index) {\n  return {\n    id: `modes-tab-${index}`,\n    'aria-controls': `modes-tabpanel-${index}`,\n  };\n}\n\nfunction HeaderModes({ reloadDataTable }) {\n  const hostpath = window.location.href.search(/localhost:3000/) !== -1 ? '' : 'smisplan';\n\n  const getMode = (pathname) => {\n    const pathArray = pathname.split('/').slice(1);\n    if (pathArray[0] === hostpath) pathArray.shift();\n\n    return pathArray[0];\n  }\n\n  const tableName = getMode(document.location.pathname);\n\n  const [value, setValue] = React.useState(`${hostpath && '/' + hostpath}/${mainModes.includes(tableName) ? tableName : 'task'}`)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    const mode = getMode(newValue);\n\n    filters.perm = [];\n    switch (mode) {\n      case 'spec_notes':\n        reloadDataTable(mode, () => {\n          filters.setValue('perm', '_authorORdeveloper', metaData.user.login);\n        });\n        break;\n      case 'daily':\n        reloadDataTable('task', () => {\n          let today = new Date();\n          filters.setValue('data', 'dateEnd', today.toISOString().replace(/(.+)T(.+)\\..+/, '$1'));\n          filters.setValue('data', 'status', 'done');\n          setValue(newValue);\n        });\n        break;\n      default:\n        reloadDataTable(mode);\n        break;\n    }\n  };\n\n  React.useEffect(() => {\n    const subscribe = () => {\n      storage.table.subscribe(() => {\n        const storageTableName = storage.table.getState().TABLE.tableName;\n        if (storageTableName) {\n          setValue(`${hostpath && '/' + hostpath}/${storageTableName}`);\n        }\n      });\n    }\n\n    subscribe();\n    return subscribe();\n  }, [hostpath])\n\n  return (\n    <AppBar position=\"static\" className=\"header-modes-projects__bar\" color=\"default\">\n        <Route\n          path=\"/\"\n          render={({ location }) => (\n            <>\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"on\"\n                aria-label=\"scrollable auto tabs example\"\n              >\n                {modes.map((mode, index) => {\n                  return (\n                    <Tab\n                      className=\"header-modes-projects__modes-item\"\n                      label={mode.value}\n                      {...a11yProps(index)}\n                      key={mode.id}\n                      disabled={mode.disabled ? true : false}\n                      value={`${hostpath && '/' + hostpath}/${mode.id}`}\n                      to={`${hostpath && '/' + hostpath}/${mode.id}`}\n                      component={Link}\n                    />\n                  );\n                })}\n              </Tabs>\n              <Switch>\n                {modes.map((mode, index) => {\n                  return <Route path={`${hostpath && '/' + hostpath}/${mode.id}`} key={`Link-${mode.id}`} />;\n                })}\n                <Redirect to={`${hostpath && '/' + hostpath}/${tableName}`} />\n              </Switch>\n            </>\n          )}\n        />\n      </AppBar>\n  );\n}\n\nexport default React.memo(HeaderModes);\n","import React from 'react';\r\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\r\n\r\nimport { metaData, dataTable, filters } from '../../config/data';\r\nimport { getData } from '../../utils/api';\r\nimport storage from '../../storages/commonStorage';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `projects-tab-${index}`,\r\n    'aria-controls': `projects-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n/* *************************  Project list  ******************************* */\r\nexport default class HeaderProjects extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: 0, projects: Object.values(metaData.projectList) };\r\n    this.setValue = this.setValue.bind(this);\r\n    this.setProjects = this.setProjects.bind(this);\r\n  }\r\n\r\n  setProjects = (projects) => {\r\n    this.setState({ projects });\r\n  };\r\n  setValue = (value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  reloadActiveProjects = () => {\r\n    let projects = [];\r\n    let projectsHash = {};\r\n    dataTable.map((data) => {\r\n      return (projectsHash[data.project] = true);\r\n    });\r\n    let projectsActive = {};\r\n    let projectsOther = {};\r\n\r\n    for (let project in metaData.projectList) {\r\n      if (projectsHash[project] && !projectsActive[project]) {\r\n        metaData.projectList[project].showAsDisabled = false;\r\n        projectsActive[project] = metaData.projectList[project];\r\n      }\r\n\r\n      if (!projectsHash[project] && !projectsOther[project]) {\r\n        metaData.projectList[project].showAsDisabled = true;\r\n        projectsOther[project] = metaData.projectList[project];\r\n      }\r\n    }\r\n\r\n    Object.values(projectsActive)\r\n      .sort((a, b) => {\r\n        return a.value >= b.value ? 1 : -1;\r\n      })\r\n      .map((project) => {\r\n        return projects.push(project);\r\n      });\r\n    Object.values(projectsOther)\r\n      .sort((a, b) => {\r\n        return a.value >= b.value ? 1 : -1;\r\n      })\r\n      .map((project) => {\r\n        return projects.push(project);\r\n      });\r\n\r\n    this.setProjects(projects);\r\n  };\r\n\r\n  componentDidMount() {\r\n    getData('project').then(() => this.setProjects(Object.values(metaData.projectList)));\r\n\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      let dataLoading = storage.state.getState().STATE.dataLoading;\r\n      // if (dataLoading && dataLoading === 'meta') this.setValue(0);\r\n\r\n      //reload projects list with active/not active\r\n      if (dataLoading && dataLoading === 'data') {\r\n        this.setValue(0);\r\n        this.reloadActiveProjects();\r\n      }\r\n    });\r\n\r\n    this.unsubscribeUpd = storage.upd.subscribe(() => {\r\n      if (storage.upd.getState().UPD.update) {\r\n        this.reloadActiveProjects();\r\n      }\r\n    });\r\n\r\n    this.unsubscribeData = storage.data.subscribe(() => {\r\n      let redraw = storage.data.getState().DATA.redraw;\r\n      if (\r\n        redraw &&\r\n        (!filters.data.project || filters.data.project === '') &&\r\n        this.state.value > 0\r\n      ) {\r\n        this.setValue(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribeData();\r\n    this.unsubscribeUpd();\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    filters.setValue('data', 'project', newValue === 0 ? '' : this.state.projects[newValue - 1].id);\r\n\r\n    storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n    this.setValue(newValue);\r\n  };\r\n\r\n  render() {\r\n    const classes = {};\r\n    const value = this.state.value;\r\n    let projects = this.state.projects;\r\n\r\n    return (\r\n      <AppBar position=\"static\" className=\"header-modes-projects__bar\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={this.handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Все\"\r\n            {...a11yProps(0)}\r\n            key=\"all\"\r\n            classes={{ root: classes.tabStyles }}\r\n            className=\"header-modes-projects__modes-item\"\r\n          />\r\n\r\n          {projects.map((project, index) => {\r\n            return (\r\n              <Tab\r\n                label={project.value}\r\n                {...a11yProps(index + 1)}\r\n                key={project.id}\r\n                disabled={project.showAsDisabled ? true : false}\r\n                classes={{ root: classes.tabStyles }}\r\n                className=\"header-modes-projects__modes-item\"\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport HeaderModes from './HeaderModes';\r\nimport HeaderProjects from './HeaderProjects';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header-modes-projects\">\r\n      <HeaderModes reloadDataTable={props.reloadDataTable} />\r\n      <HeaderProjects class=\"divProjectList\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Header);","import React from 'react';\r\nimport { Menu, MenuItem, Checkbox } from '@material-ui/core';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\n\r\nimport { metaData } from '../../config/data';\r\nimport storage from '../../storages/commonStorage';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport './MenuItemSettings.css';\r\n\r\nexport default class MenuItemSettings extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opened: props.isOpened || false,\r\n      menuEl: null,\r\n      menuElSub_c: null,\r\n      menuElSub: null,\r\n      checkedElSubList: [],\r\n    };\r\n    this.setCheckedElSubList = this.setCheckedElSubList.bind(this);\r\n  }\r\n\r\n  setCheckedElSubList = (checkedElSubList) => {\r\n    this.setState({ checkedElSubList });\r\n  };\r\n\r\n  handleClickItem = (filter) => (event) => {\r\n    let root = document.documentElement;\r\n\r\n    let colorIcons = getComputedStyle(root).getPropertyValue(`--icons-filter-${filter}`);\r\n    root.style.setProperty('--icons-filter', colorIcons);\r\n    let colorHover = getComputedStyle(root).getPropertyValue(`--hover-filter-${filter}`);\r\n    root.style.setProperty('--hover-filter', colorHover);\r\n\r\n    this.setState({ menuElSub_c: null });\r\n    this.setState({ menuEl: null });\r\n  };\r\n\r\n  handleClickItemSub = (id) => (event) => {\r\n    let checkedElSubList = this.state.checkedElSubList;\r\n    if (checkedElSubList.indexOf(id) !== -1) {\r\n      metaData.dataTable[id].showInTable = false;\r\n      checkedElSubList = checkedElSubList.filter((a) => {\r\n        return a !== id;\r\n      });\r\n    } else {\r\n      metaData.dataTable[id].showInTable = true;\r\n      checkedElSubList.push(id);\r\n    }\r\n\r\n    storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'meta' });\r\n\r\n    this.setState({ checkedElSubList: checkedElSubList });\r\n    this.setState({ menuElSub: null });\r\n    this.setState({ menuEl: null });\r\n  };\r\n\r\n  openUrl = (url) => {\r\n    window.open(url, '_blank', '');\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      let dataLoading = storage.state.getState().STATE.dataLoading;\r\n      if (dataLoading && dataLoading === 'data') {\r\n        this.setCheckedElSubList(\r\n          Object.keys(metaData.dataTable).filter((a) => {\r\n            return metaData.dataTable[a].showInTable;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CustomIcon\r\n          class=\"icn_settings\"\r\n          tip=\"Опции и настройки\"\r\n          fontSize=\"large\"\r\n          action={(e) => this.setState({ menuEl: e.currentTarget })}\r\n        />\r\n          <Menu\r\n            id={`filter-menu-id-${this.props.name}`}\r\n            anchorEl={this.state.menuEl}\r\n            keepMounted\r\n            open={Boolean(this.state.menuEl)}\r\n            onClose={() => this.setState({ menuEl: null })}\r\n            className=\"menu-item-settings\"\r\n          >\r\n            <MenuItem\r\n              key={`menu-colors`}\r\n              className=\"menu-item-settings__item\"\r\n              onClick={(e) => this.setState({ menuElSub_c: e.currentTarget })}\r\n            >\r\n              <div>Цветовая схема</div>\r\n              <ArrowRight fontSize=\"default\" />\r\n            </MenuItem>\r\n            <Menu\r\n              anchorEl={this.state.menuElSub_c}\r\n              keepMounted\r\n              open={Boolean(this.state.menuElSub_c)}\r\n              onClose={() => this.setState({ menuElSub_c: null })}\r\n              className=\"menu-item-settings__item-menu\"\r\n            >\r\n              <MenuItem\r\n                key={`menu-${this.props.name}-standart`}\r\n                onClick={this.handleClickItem('standart')}\r\n              >\r\n                Стандартная схема\r\n              </MenuItem>\r\n              <MenuItem key={`menu-${this.props.name}-red`} onClick={this.handleClickItem('red')}>\r\n                Красная схема\r\n              </MenuItem>\r\n              <MenuItem key={`menu-${this.props.name}-blue`} onClick={this.handleClickItem('blue')}>\r\n                Синяя схема\r\n              </MenuItem>\r\n            </Menu>\r\n\r\n            {/* Columns menu - START */}\r\n            <MenuItem\r\n              key={`menu-columns`}\r\n              className=\"menu-item-settings__item\"\r\n              onClick={(e) => this.setState({ menuElSub: e.currentTarget })}\r\n            >\r\n              <div>Колонки</div>\r\n              <ArrowRight fontSize=\"default\" />\r\n            </MenuItem>\r\n            <Menu\r\n              id={`columns-menu-id`}\r\n              anchorEl={this.state.menuElSub}\r\n              keepMounted\r\n              open={Boolean(this.state.menuElSub)}\r\n              onClose={() => this.setState({ menuElSub: null })}\r\n              className=\"menu-item-settings__item-menu\"\r\n            >\r\n              {Object.values(metaData.dataTable)\r\n                .filter((a) => {\r\n                  return a.value && a.value !== '';\r\n                })\r\n                .sort((a, b) => {\r\n                  return a.value >= b.value ? 1 : -1;\r\n                })\r\n                .map((headCell) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={`menu-columns-${headCell.id}`}\r\n                      onClick={this.handleClickItemSub(headCell.id)}\r\n                    >\r\n                      <Checkbox\r\n                        className=\"menu-item-settings__menu-checkbox\"\r\n                        edge=\"start\"\r\n                        ref={`checkbox-${headCell.id}`}\r\n                        checked={this.state.checkedElSubList.indexOf(headCell.id) !== -1}\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                      />\r\n                      {headCell.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Menu>\r\n            {/* Columns menu - END*/}\r\n\r\n            <MenuItem\r\n              key=\"manual\"\r\n              onClick={() => {\r\n                this.openUrl('http://d902.iki.rssi.ru/smisplan-docs/SMISplan.pdf');\r\n                this.setState({ menuEl: null });\r\n              }}\r\n            >\r\n              <div className=\"menu-item-settings__item\">Инструкция</div>\r\n            </MenuItem>\r\n          </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { Menu, MenuItem, ListItemIcon, Typography } from '@material-ui/core';\n\nimport { metaData, filters } from '../../config/data';\nimport { doData } from '../../utils/api';\nimport storage from '../../storages/commonStorage';\nimport CustomIcon from '../../SharedComponents/CustomIcon';\nimport DateW from '../../utils/date';\nimport './MenuItemChief.css';\n\nexport default class MenuItemChief extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuEl: null,\n      menuElSub_c: null,\n      menuElSub: null,\n      checkedElSubList: [],\n    };\n    this.setCheckedElSubList = this.setCheckedElSubList.bind(this);\n  }\n\n  setCheckedElSubList = (checkedElSubList) => {\n    this.setState({ checkedElSubList });\n  };\n\n  handleClickItem = (menuItem) => (event) => {\n    const currentDate = new DateW();\n    const currentWeek = currentDate.getWeek();\n\n    switch (menuItem) {\n      case 'discussionNotification':\n        let notifyWeek = `${currentDate.getFullYear()}.${\n          currentWeek + (currentDate.getDay() >= 5 ? 1 : 0)\n        }`;\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'warn',\n          message: 'Идёт отправка уведомлений...',\n        });\n        const data = {\n          week: notifyWeek,\n          mode: 'done',\n          feature: 'discussion',\n        };\n        doData('notify', data, undefined, 'notification').then(([error]) => {\n          error\n            ? storage.alert.dispatch({\n                type: 'SHOW_ALERT',\n                status: 'fail',\n                message: 'Ошибка при отправке уведомления',\n              })\n            : storage.alert.dispatch({\n                type: 'SHOW_ALERT',\n                status: 'success',\n                message: 'Уведомление послано успешно',\n              });\n        });\n        break;\n      default:\n        //discussion\n        const loadTableName = 'discussion';\n        this.props.reloadDataTable(loadTableName, () => {\n          filters.data.week = `${currentDate.getFullYear()}.${\n            currentWeek + (currentDate.getDay() >= 5 ? 1 : 0)\n          }`;\n        });\n        break;\n    }\n    this.setState({ menuEl: null });\n  };\n\n  componentDidMount() {\n    this.unsubscribe = storage.state.subscribe(() => {\n      let dataLoading = storage.state.getState().STATE.dataLoading;\n      if (dataLoading && dataLoading === 'meta') {\n        this.setCheckedElSubList(\n          Object.keys(metaData.dataTable).filter((a) => {\n            return metaData.dataTable[a].showInTable;\n          })\n        );\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return (\n      <div>\n        <CustomIcon\n          class={this.props.class}\n          tip=\"Для начальника\"\n          fontSize=\"large\"\n          action={(e) => this.setState({ menuEl: e.currentTarget })}\n        />\n\n        <Menu\n          id={`filter-menu-id-${this.props.name}`}\n          anchorEl={this.state.menuEl}\n          keepMounted\n          open={Boolean(this.state.menuEl)}\n          onClose={() => this.setState({ menuEl: null })}\n          className=\"menu-item-chief\"\n        >\n          <MenuItem\n            key={`menu-${this.props.name}-discussion`}\n            onClick={this.handleClickItem('discussion')}\n          >\n            <ListItemIcon>\n              <CustomIcon class=\"icn_discussionList\" tip=\"Перейти к списку расписаний на неделю\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\" noWrap>\n              Расписание обсуждений\n            </Typography>\n          </MenuItem>\n\n          {/* <MenuItem key={`menu-${this.props.name}-discussionPrint`} onClick={this.handleClickItem('discussionPrint')}>\n                        <ListItemIcon>\n                        <CustomIcon\n                                class=\"icn_print\"\n                                tip=\"Распечатать оповещения об обсуждениях на текущей неделе\" />\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\" noWrap>\n                            Распечатать обсуждения\n                        </Typography>\n                    </MenuItem> */}\n\n          <MenuItem\n            key={`menu-${this.props.name}-discussionNotification`}\n            onClick={this.handleClickItem('discussionNotification')}\n          >\n            <ListItemIcon>\n              <CustomIcon\n                class=\"icn_notification\"\n                tip=\"Отправить оповещения об обсуждениях на текущей неделе\"\n              />\n            </ListItemIcon>\n            <Typography variant=\"inherit\" noWrap>\n              Уведомление об обсуждениях\n            </Typography>\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport PrintIcon from '@material-ui/icons/Print';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ReactToPrint from 'react-to-print';\n\nimport { metaData, filters } from '../../config/data';\nimport { getData } from '../../utils/api';\nimport MenuItemSettings from '../MenuItemSettings/MenuItemSettings';\nimport MenuItemChief from '../MenuItemChief/MenuItemChief';\nimport storage from '../../storages/commonStorage';\nimport './HeaderLogin.css';\n\n/* *************************  Login info  ******************************* */\nexport default class HeaderLogin extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { username: '' };\n    this._columnsList = React.createRef();\n  }\n\n  filtersOff = () => {\n    filters.clear();\n    const filtersStorage = JSON.parse(sessionStorage.getItem('filters') || '{}');\n    filtersStorage[metaData.dataTableName] = {data: {}, perm: {}};\n    const filtersString = JSON.stringify(filtersStorage);\n    sessionStorage.setItem('filters', filtersString);\n\n    storage.data.dispatch({ type: 'REDRAW', redraw: true });\n  };\n\n  reloadDataTable = (mode) => {\n    this.filtersOff();\n    this.props.reloadDataTable(mode);\n  };\n\n  componentDidMount() {\n    getData('user')\n      .then((user) => this.setState({ username: user.username }));\n  }\n\n  render() {\n    return (\n      <div className=\"header-login\">\n        <div className=\"header-login__menu\">\n          <ReactToPrint\n            trigger={() => (\n              <Tooltip title=\"Распечатать\">\n                <IconButton className=\"icn\" style={{ padding: '0px' }}>\n                  <PrintIcon fontSize=\"large\" />\n                </IconButton>\n              </Tooltip>\n            )}\n            content={() => this.props.dataRef.current}\n          />\n\n          <MenuItemSettings ref={this._columnsList} class=\"icn_filter\" name=\"MenuSettings\" />\n\n          <MenuItemChief\n            class=\"icn_chief\"\n            name=\"MenuChief\"\n            reloadDataTable={this.props.reloadDataTable}\n          />\n\n          <Tooltip title=\"Сбросить фильтры\">\n            <IconButton className=\"icn\" style={{ padding: '0px' }} onClick={this.filtersOff}>\n              <VisibilityIcon fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n        </div>\n        <div className=\"header-login__login\">\n          <b>Логин</b>: {this.state.username}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { metaData, dataTable, filters } from '../../config/data';\r\nimport storage from '../../storages/commonStorage';\r\nimport './CheckboxListFilter.css';\r\n\r\nfunction resortActive(developerList) {\r\n  let activeDevsList = [];\r\n  if (dataTable) {\r\n    for (let row of dataTable) {\r\n      if (row.author && row.author !== '' && activeDevsList.indexOf(row.author) === -1) {\r\n        activeDevsList.push(row.author);\r\n      }\r\n      if (row.developer && row.developer !== '' && activeDevsList.indexOf(row.developer) === -1) {\r\n        activeDevsList.push(row.developer);\r\n      }\r\n    }\r\n  }\r\n\r\n  let activeDevs = {};\r\n  let nonActiveDevs = {};\r\n  if (Object.keys(developerList).length > 0) {\r\n    for (let dev of Object.keys(developerList)) {\r\n      activeDevsList.indexOf(dev) !== -1\r\n        ? (activeDevs[dev] = developerList[dev])\r\n        : (nonActiveDevs[dev] = developerList[dev]);\r\n    }\r\n  }\r\n\r\n  return [activeDevs, nonActiveDevs];\r\n}\r\n\r\nexport default class CheckboxListFilter extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true,\r\n      checked: [],\r\n      developers: Object.keys(metaData.developerList),\r\n    };\r\n\r\n    this.inputFilter = this.props.developer;\r\n\r\n    this.setOpen = this.setOpen.bind(this);\r\n    this.setChecked = this.setChecked.bind(this);\r\n  }\r\n\r\n  setOpen = (open) => this.setOpen({ open });\r\n  setChecked = (checked) => this.setState({ checked });\r\n\r\n  resortDevelopers = (inputDevelopers = metaData.developerList) => {\r\n    let sortedDevelopers = [];\r\n    sortedDevelopers = resortActive(inputDevelopers);\r\n\r\n    let outputDevelopers = [];\r\n    if (Object.keys(sortedDevelopers[0]).length > 0) {\r\n      Object.keys(sortedDevelopers[0])\r\n        .sort((a, b) => sortedDevelopers[0][a].value >= sortedDevelopers[0][b].value ? 1 : -1)\r\n        .map((key) => outputDevelopers.push(key));\r\n      outputDevelopers.push('divider');\r\n      Object.keys(sortedDevelopers[1])\r\n        .sort((a, b) => sortedDevelopers[1][a].value >= sortedDevelopers[1][b].value ? 1 : -1)\r\n        .map((key) => outputDevelopers.push(key));\r\n    } else if (Object.keys(sortedDevelopers[1]).length > 0) {\r\n      Object.keys(sortedDevelopers[1])\r\n        .sort((a, b) => sortedDevelopers[1][a].value >= sortedDevelopers[1][b].value ? 1 : -1)\r\n        .map((key) => outputDevelopers.push(key));\r\n    } else {\r\n      Object.keys(inputDevelopers)\r\n        .sort((a, b) => inputDevelopers[a].value >= inputDevelopers[b].value ? 1 : -1)\r\n        .map((key) => outputDevelopers.push(key));\r\n    }\r\n\r\n    return outputDevelopers;\r\n  };\r\n\r\n  handleToggle = (value) => (event) => {\r\n    if (value !== '') {\r\n      const currentIndex = this.state.checked.indexOf(value);\r\n      const newChecked = [...this.state.checked];\r\n\r\n      currentIndex === -1 ? newChecked.push(value) : newChecked.splice(currentIndex, 1);\r\n\r\n      filters.setValue('data', 'developer', [...newChecked]);\r\n\r\n      storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n      this.setChecked(newChecked);\r\n    } else {\r\n      storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n      this.props.updateData();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      let dataLoading = storage.state.getState().STATE.dataLoading;\r\n      if (dataLoading && dataLoading === 'data') {\r\n        this.setState({ developers: this.resortDevelopers() });\r\n        filters.setValue('data', 'developer', this.state.checked);\r\n      }\r\n\r\n      if (this.inputFilter) {\r\n        filters.setValue('data', 'developer', [this.inputFilter]);\r\n        storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n        this.setChecked([this.inputFilter]);\r\n        this.inputFilter = undefined;\r\n      }\r\n    });\r\n\r\n    this.unsubscribeUpd = storage.upd.subscribe(() => {\r\n      if (storage.upd.getState().UPD.update) {\r\n        this.setState({ developers: this.resortDevelopers() });\r\n      }\r\n    });\r\n\r\n    this.unsubscribeData = storage.data.subscribe(() => {\r\n      let redraw = storage.data.getState().DATA.redraw;\r\n      if (\r\n        redraw &&\r\n        filters.data.developer &&\r\n        filters.data.developer.length === 0 &&\r\n        this.state.checked.length > 0\r\n      ) {\r\n        this.setChecked([]);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribeUpd();\r\n    this.unsubscribeData();\r\n  }\r\n\r\n  render() {\r\n    let { developers } = this.state;\r\n    return (\r\n      <List dense className=\"checkbox-list-filter\">\r\n        {developers.map((key) => {\r\n          const developer = key !== 'divider' ? metaData.developerList[key] : null;\r\n          const labelId = key !== 'divider' ? `checkbox-list-label-${developer.id}` : null;\r\n\r\n          return key !== 'divider' ? (\r\n            <ListItem\r\n              key={developer.id}\r\n              role={undefined}\r\n              size=\"small\"\r\n              className=\"checkbox-list-filter__list-item\"\r\n              button\r\n              onClick={this.handleToggle(developer.id)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  className=\"checkbox-list-filter__checkbox\"\r\n                  edge=\"start\"\r\n                  checked={this.state.checked.indexOf(developer.id) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                id={labelId}\r\n                primary={`${developer.value}`}\r\n                className=\"checkbox-list-filter__text\"\r\n              />\r\n            </ListItem>\r\n          ) : (\r\n            <Divider key=\"divider\" />\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { Drawer } from '@material-ui/core';\n\nimport CustomIcon from '../../SharedComponents/CustomIcon';\nimport storage from '../../storages/commonStorage';\nimport { metaData } from '../../config/data';\nimport CheckboxListFilter from '../CheckboxListFilter/CheckboxListFilter';\nimport './MainLeftSide.css';\n\n/* *************************  Developers list  ******************************* */\nexport default class MainLeftSide extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { open: true }\n    this.setOpen = this.setOpen.bind(this)\n  }\n\n  setOpen = (open) => {\n    let root = document.documentElement;\n\n    let widthDefault = getComputedStyle(root).getPropertyValue('--width-left-side');\n    root.style.setProperty('--width-left-side-bottom', this.state.open ? \"0px\" : widthDefault);\n\n    this.setState({ open })\n  }\n\n  handleShow = () => { this.setOpen(true) }\n  handleHide = () => { this.setOpen(false) }\n\n  componentDidMount() {\n    this.unsubscribe = storage.state.subscribe(() => {\n      const dataLoading = storage.state.getState().STATE.dataLoading;\n      if (dataLoading && dataLoading === 'data') {\n        if (['discussion', 'calendar'].includes(metaData.dataTableName)) {\n          if (this.state.open) this.setOpen(false);\n        } else {\n          if (!this.state.open) this.setOpen(true);\n        }\n      }\n    });\n  }\n\n  componentWillUnmount () {\n    this.unsubscribe()\n  }\n\n  render() {\n    const list = Object.values(this.props.developers).map((d) => {\n      return { id: d.id, value: d.value }\n    });\n\n    return [\n      <Drawer\n        key=\"leftSideDrawer\"\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={this.state.open}\n        classes={{ paper: \"left-side-bar\" }}>\n\n        <CheckboxListFilter developer={this.props.developer} list={list} />\n      </Drawer>,\n      <div key=\"showHideButton\" className=\"divSpacingBottom\">\n        {this.state.open ?\n          <CustomIcon class=\"icn_arrow_left_fill\" tip=\"Свернуть\" fontSize=\"large\" action={this.handleHide} style={{ borderRadius: \"0px\" }} /> :\n          <CustomIcon class=\"icn_arrow_right_fill\" tip=\"Показать\" fontSize=\"large\" action={this.handleShow} style={{ borderRadius: \"0px\" }} />\n        }\n      </div>\n    ]\n  }\n};\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function LoadingComponent() {\r\n  return (\r\n    <div style={{textAlign: \"center\", paddingTop: \"200px\"}}>\r\n      <CircularProgress style={{ width: '100px', height: '100px' }} />;\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nimport { filters, filterTasks } from '../../config/data';\nimport CustomIcon from '../../SharedComponents/CustomIcon';\n\nexport default class TblHeaderBtnMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { anchorEl: null }\n    this.state[this.props.name] = filters.data[this.props.name] ? filters.data[this.props.name] : undefined;\n\n    this.setAnchorEl = this.setAnchorEl.bind(this)\n  }\n\n  setAnchorEl = (anchorEl) => { this.setState({ anchorEl }) };\n  handleClick = event => { this.setAnchorEl(event.currentTarget) };\n  handleClose = () => { this.setAnchorEl(null) };\n\n  handleClickItem = (field, value) => {\n    if (this.props.type === 'filter') {\n      if (typeof this.props.itemList !== 'object' && (this.props.itemList === 'datetime' || this.props.itemList === 'date')) {\n        let state = {};\n        state[field] = value;\n        this.setState(state);\n      }\n\n      if (value === 'all') {\n        filters.data = {}\n      }\n      else if (value === 'noClose') {\n        if (typeof this.props.itemList === 'object') {\n          filters.data[field] = [];\n          Object.values(this.props.itemList).filter(item => item.id !== 'done').forEach(item => filters.data[field].push(item.id))\n        }\n      }\n      else {\n        filters.data[field] = value\n      }\n      this.props.action(filterTasks());\n    }\n    else if (this.props.type === 'group') {\n      this.props.action(value);\n    }\n\n    this.setAnchorEl(null);\n  };\n\n  render() {\n    let itemList = this.props.itemList;\n\n    return (\n      <div>\n        {this.props.type === \"filter\" &&\n          <CustomIcon class='icn_filter' tip=\"фильтр\" action={this.handleClick} />}\n        {this.props.type === \"group\" &&\n          <CustomIcon class='icn_group' tip=\"группировать\" action={this.handleClick} />}\n\n        <Menu\n          id={`filter-menu-id-${this.props.name}`}\n          anchorEl={this.state.anchorEl}\n          keepMounted\n          open={Boolean(this.state.anchorEl)}\n          onClose={this.handleClose}\n          className=\"tbl-header-btn-menu\">\n\n          {this.props.all &&\n            <MenuItem onClick={() => this.handleClickItem(this.props.name, 'all')}>\n              Все\n            </MenuItem>}\n\n          {this.props.noClose && this.props.name === 'status' &&\n            <MenuItem onClick={() => this.handleClickItem(this.props.name, 'noClose')}>\n              Все открытые\n            </MenuItem>}\n\n          {typeof itemList === 'object' &&\n            Object.keys(itemList).map(item =>\n              <MenuItem key={`menu-${this.props.name}-${itemList[item].id}`}\n                style={{ backgroundColor: filters.data[this.props.name] === item ? 'var(--color-tasks-gray)' : '' }}\n                onClick={() => this.handleClickItem(this.props.name, itemList[item].id)}>\n                {itemList[item].value}\n              </MenuItem>\n            )\n          }\n\n          {typeof itemList !== 'object' && itemList === 'datetime' &&\n            <MenuItem>\n              <MuiPickersUtilsProvider utils={MomentUtils} style={{ width: \"0px\", margin: \"0px\", marginLeft: \"-18px\" }} className=\"tbl-header-btn-menu__datepicker\">\n                <KeyboardDatePicker\n                  format=\"YYYY-MM-DD\"\n                  margin=\"normal\"\n                  onChange={(property, value) => { this.handleClickItem(this.props.name, value) }}\n                  value={this.state[this.props.name]}\n                  style={{ width: \"0px\", margin: \"0px\", marginLeft: \"-18px\" }}\n                  className=\"tbl-header-btn-menu__datepicker\"\n                  inputRef={el => this[this.props.name] = el} />\n              </MuiPickersUtilsProvider>\n            </MenuItem>\n          }\n        </Menu>\n      </div>\n    );\n  }\n}\n","import React, {Fragment} from 'react';\nimport {\n  TableRow,\n  TableCell,\n  TableSortLabel,\n} from '@material-ui/core';\n\nimport TblHeaderBtnMenu from '../TblHeaderBtnMenu/TblHeaderBtnMenu';\nimport { metaData, filters, filterTasks } from '../../config/data';\n\nconst getAdditionalCellProps = (metaData) => {\n  let hasAdditionalCell = false;\n  if (\n    metaData &&\n    (metaData.hasSpecAction ||\n      metaData.hasSpecNotes ||\n      metaData.hasEditMenu ||\n      metaData.hasDeleteButton ||\n      metaData.hasDoneButton)\n  ) {\n    hasAdditionalCell = true;\n  }\n\n  return hasAdditionalCell;\n};\n\nexport default class TblHeadEnhanced extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { isHovered: '' };\n  }\n\n  setCoumnWidth = (headCells) => {\n    this.widths = {};\n    for (let property in headCells) {\n      if (headCells[property].showInTable) {\n        this.widths[property] = this.getColumnWidth(headCells[property]);\n      }\n    }\n\n    this.hasAdditionalCell = getAdditionalCellProps(metaData.specificParameters);\n  }\n\n  createSortHandler = (property) => (event) => {\n    this.props.onRequestSort(event, property);\n  };\n\n  createGroupHandler = (property) => {\n    this.props.onRequestGroup(undefined, this.props.groupBy === property ? '' : property);\n  };\n\n  handleDateFilter = (property, value) => {\n    let state = {};\n    state[property] = value;\n    this.setState(state);\n\n    filters.setValue('data', property, value);\n    this.props.onFilter(filterTasks());\n  };\n\n  getColumnWidth = (headCell) => {\n    let width = '';\n    let headCellWidth = headCell.value.length * (window.innerWidth <= 1400 ? 8 : 10) + 24;\n    if (headCell.isFilter && !metaData.mobile) headCellWidth += 30;\n    if (headCell.isGroup && !metaData.mobile) headCellWidth += 30;\n    switch (headCell.type) {\n      case 'int':\n        width = 45 < headCellWidth ? `${headCellWidth}px` : '45px';\n        break;\n\n      case 'string':\n        if (!headCell.isInlineEditable && headCell.id !== 'theme') {\n          window.innerWidth <= 1400\n            ? (width = 90 < headCellWidth ? `${headCellWidth}px` : '90px')\n            : (width = 110 < headCellWidth ? `${headCellWidth}px` : '110px');\n        }\n        break;\n\n      case 'select':\n        if (!headCell.isInlineEditable) {\n          window.innerWidth <= 1400\n            ? (width = 105 < headCellWidth ? `${headCellWidth}px` : '105px')\n            : (width = 120 < headCellWidth ? `${headCellWidth}px` : '120px');\n        }\n        break;\n\n      case 'multi-select':\n        if (!headCell.isInlineEditable) {\n          window.innerWidth <= 1400\n            ? (width = 155 < headCellWidth ? `${headCellWidth}px` : '155px')\n            : (width = 170 < headCellWidth ? `${headCellWidth}px` : '170px');\n        }\n        break;\n\n      case 'datetime':\n      case 'date':\n      case 'time':\n        if (!headCell.isInlineEditable) {\n          window.innerWidth <= 1400\n            ? (width = 80 < headCellWidth ? `${headCellWidth}px` : '80px')\n            : (width = 100 < headCellWidth ? `${headCellWidth}px` : '100px');\n        }\n        break;\n      default:\n        width = '';\n    }\n    return width;\n  };\n\n  render() {\n    this.setCoumnWidth(metaData.dataTable);\n\n    const { order, orderBy, groupBy, headCells } = this.props;\n    const { isHovered } = this.state;\n    const sort = {};\n    this.props.sort.map((f) => {\n      return (sort[f.field] = f);\n    });\n\n    return (\n      <TableRow className=\"data-table__header-row\">\n        {Object.values(headCells)\n          .filter((a) => a.showInTable)\n          .sort((a, b) => a.tableIndex >= b.tableIndex ? 1 : -1)\n          .map((headCell, index) => {\n            const filterVisibility =\n              isHovered === headCell.id ||\n              (filters.checkFilter(headCell.id) && filters.data[headCell.id] !== '')\n                ? 'visible'\n                : 'hidden';\n            const groupVisibility =\n              isHovered === headCell.id || (groupBy && groupBy === headCell.id)\n                ? 'visible'\n                : 'hidden';\n            const paddingLeft = index === 0 ? '10px' : '0px';\n            const minWidth = headCell.id === 'theme' ? '220px' : '';\n            const maxWidth = '';\n            const width = this.widths[headCell.id];\n            const filterList =\n              ['datetime', 'date'].indexOf(headCell.type) !== -1\n                ? 'datetime'\n                : metaData[`${headCell.id}List`];\n            let groupList = {};\n            if (headCell.isGroup) {\n              groupList[headCell.id] = { id: headCell.id, value: headCell.value };\n              if (headCell.type === 'date') {\n                groupList['week'] = { id: 'week', value: 'Неделя' };\n              }\n            }\n\n            return (\n              <Fragment key={headCell.id}>\n              <TableCell\n                align=\"left\"\n                padding=\"none\"\n                className=\"data-table__header-cell\"\n                style={{\n                  minWidth: minWidth,\n                  width: width,\n                  maxWidth: maxWidth,\n                  paddingLeft: paddingLeft,\n                }}\n                onMouseEnter={() => this.setState({ isHovered: headCell.id })}\n                onMouseLeave={() => this.setState({ isHovered: undefined })}\n                sortDirection={orderBy === headCell.id ? order : false}\n              >\n                <TableSortLabel\n                  active={sort[headCell.id] ? true : false}\n                  direction={sort[headCell.id] ? sort[headCell.id].order : 'asc'}\n                  onClick={this.createSortHandler(headCell.id)}\n                >\n                  {headCell.value}\n                  {sort[headCell.id] ? <span></span> : null}\n                </TableSortLabel>\n\n                {headCell.isGroup && !metaData.mobile && (\n                  <div\n                    className={`data-table__pagination-button ${\n                      groupVisibility === 'visible' ? 'visible' : 'invisible'\n                    }`}\n                  >\n                    <TblHeaderBtnMenu\n                      class=\"icn_filter\"\n                      name={headCell.id}\n                      action={this.createGroupHandler}\n                      type=\"group\"\n                      itemList={groupList}\n                    />\n                  </div>\n                )}\n\n                {headCell.isFilter && !metaData.mobile && (\n                  <div\n                    className={`data-table__pagination-button ${\n                      filterVisibility === 'visible' ? 'visible' : 'invisible'\n                    }`}\n                  >\n                    <TblHeaderBtnMenu\n                      class=\"icn_filter\"\n                      name={headCell.id}\n                      action={this.props.onFilter}\n                      all\n                      noClose\n                      type=\"filter\"\n                      itemList={filterList}\n                    />\n                  </div>\n                )}\n              </TableCell>\n              {\n                headCell.isInlineEditable && headCell.type === 'string' && (\n                <TableCell style={{width: \"10px\"}}></TableCell>\n              )}\n              </Fragment>\n            );\n          })}\n        {this.hasAdditionalCell && (\n          <TableCell\n            style={{ width: metaData.table ? '53px' : '1px', }}\n          />\n        )}\n      </TableRow>\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CustomIcon from '../../SharedComponents/CustomIcon';\n\nexport default function TblHeaderSearch(props) {\n  const [search, setSearch] = React.useState('');\n\n  const clearSearch = () => {\n    setSearch('')\n    props.setSearch('')\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Поиск\"\n      value={search}\n      inputProps={{ style: { fontSize: 'var(--font-size-table)', width: '200px' } }}\n      onChange={(e) => {setSearch(e.target.value)}}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') props.setSearch(search);\n        if (e.key === 'Escape') clearSearch();\n      }}\n      startAdornment={\n        <InputAdornment position=\"start\">\n          <CustomIcon class=\"icn_search\" tip=\"Найти\" action={() => { props.setSearch(search) }} />\n        </InputAdornment>\n      }\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <CustomIcon\n            class=\"icn_clear\"\n            tip=\"Сбросить поиск\"\n            action={clearSearch}\n          />\n        </InputAdornment>\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { TablePagination, Tooltip, IconButton } from '@material-ui/core';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nexport default function TblHeaderPagination(props) {\n  const TablePaginationActions = (props) => {\n    const { count, page, rowsPerPage, onChangePage } = props;\n    const countTotal = Math.ceil(count / rowsPerPage);\n\n    return (\n      <div className=\"data-table__pagination-actions\">\n        <Tooltip title=\"Первая страница\" placement=\"bottom\" enterDelay={300}>\n          <span>\n            <IconButton\n              onClick={(e) => onChangePage(e, 0)}\n              disabled={page === 0}\n              aria-label=\"Первая\"\n              className=\"data-table__pagination-select\"\n            >\n              <FirstPageIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Предыдущая\" placement=\"bottom\" enterDelay={300}>\n          <span>\n            <IconButton\n              onClick={(e) => onChangePage(e, page - 1)}\n              disabled={page === 0}\n              aria-label=\"Предыдущая\"\n              className=\"data-table__pagination-select\"\n            >\n              <KeyboardArrowLeftIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Следующая\" placement=\"bottom\" enterDelay={300}>\n          <span>\n            <IconButton\n              onClick={(e) => onChangePage(e, page + 1)}\n              disabled={page >= countTotal - 1}\n              aria-label=\"Следующая\"\n              className=\"data-table__pagination-select\"\n            >\n              <KeyboardArrowRightIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Последняя страница\" placement=\"bottom\" enterDelay={300}>\n          <span>\n            <IconButton\n              onClick={(e) => onChangePage(e, countTotal - 1)}\n              disabled={page >= countTotal - 1}\n              aria-label=\"Последняя\"\n              className=\"data-table__pagination-select\"\n            >\n              <LastPageIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </div>\n    );\n  };\n\n  return (\n    <TablePagination\n      rowsPerPageOptions={[50, 100, 200]}\n      component=\"div\"\n      count={props.count}\n      rowsPerPage={props.rowsPerPage}\n      page={props.page}\n      onChangePage={props.onChangePage}\n      onChangeRowsPerPage={props.onChangeRowsPerPage}\n      labelRowsPerPage=\"Выводить по\"\n      labelDisplayedRows={({ from, to, count }) => `${from}-${to} из ${count}`}\n      backIconButtonProps={{ style: { paddingTop: '0px', paddingBottom: '0px' } }}\n      nextIconButtonProps={{ style: { paddingTop: '0px', paddingBottom: '0px' } }}\n      classes={{\n        toolbar: 'data-table__pagination-toolbar',\n        select: 'data-table__pagination-select',\n      }}\n      className=\"data-table__pagination\"\n      ActionsComponent={TablePaginationActions}\n    />\n  );\n}\n\n","import React from 'react';\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport CustomIcon from '../../SharedComponents/CustomIcon';\nimport './PopupConfirmChoice.css';\n\n// Standart dialog: confirm with choice\nexport default function PopupConfirmChoice(props) {\n  const [open, setOpen] = React.useState(false);\n  const [choice, setChoice] = React.useState(0);\n  const [options, setOptions] = React.useState([]);\n\n  React.useEffect(() => {\n    if (open) {\n      setOptions(props.options());\n    }\n  }, [open, props]);\n\n  const handleOk = () => {\n    props.action(props.id, choice);\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    const value = /^\\d+$/.test(event.target.value) ? parseInt(event.target.value) : event.target.value;\n    setChoice(value)\n  }\n\n  return (\n    <>\n      <CustomIcon class={props.class} tip={props.actionName} action={() => setOpen(true)} />\n\n      <Dialog\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"dialog-title\"\n        fullWidth={true}>\n        <DialogTitle id=\"dialog-title\">Вы подтверждаете действие: {props.actionName} ?</DialogTitle>\n        <DialogContent>\n          <span className=\"popup-confirm-choice__content\">Действие невозможно отменить!</span>\n\n          <RadioGroup aria-label=\"choice\" name=\"choice\" value={choice} onChange={handleChange} className=\"popup-confirm-choice__radio-group\">\n            {options.map((item, i) => (\n              <FormControlLabel key={`modal-choice-${i}`} value={item.value} control={<Radio />} label={item.name} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions className=\"popup-confirm-choice__actions\">\n          <Button variant=\"outlined\" onClick={handleOk} color=\"primary\" className=\"MuiButton-outlinedOk\"\n            startIcon={<CheckIcon />}>\n            Да\n                </Button>\n          <Button variant=\"outlined\" onClick={() => setOpen(false)} color=\"secondary\"\n            startIcon={<CloseIcon />}>\n            Отмена\n                </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react';\nimport { MenuItem, ListItemIcon, Typography, TableRow, TableCell } from '@material-ui/core';\nimport moment from 'moment';\nimport PopupConfirmChoice from '../PopupConfirmChoice/PopupConfirmChoice';\nimport DateW from '../../utils/date';\nimport CustomIcon from '../../SharedComponents/CustomIcon';\n\nlet currentWeek = new DateW().getYearWeekStr();\n\nexport default function TblGroupRow(props) {\n  const weekOptionsChoice = () => {\n    const weekOptions = [];\n    for (let i = 0; i < 2; i++) {\n      const weekObj = { value: i };\n\n      let weekDate = new Date();\n      weekDate.setDate(weekDate.getDate() + 7 * i);\n      const weekStr = `${moment(weekDate, 'YYYY-MM-DD').startOf('week').format('DD MMMM')} - ${moment(\n        weekDate,\n        'YYYY-MM-DD'\n      )\n        .endOf('week')\n        .format('DD MMMM YYYY')} г`;\n\n      if (i === 0) {\n        weekObj.name = `Текущая неделя: ${weekStr}`;\n      } else if (i === 1) {\n        weekObj.name = `Следующая неделя: ${weekStr}`;\n      } else {\n        weekObj.name = `${i}-я неделя: ${weekStr}`;\n      }\n\n      weekOptions.push(weekObj);\n    }\n\n    return weekOptions;\n  }\n\n  const dayOptionsChoice = () => {\n    const dayOptions = [{value: 0, name: 'Вся неделя'}];\n    for (let data of props.weekData.sort((a, b) => a.date < b.date ? -1 : 1)) {\n      if (!dayOptions.map(e => e.value).includes(data.date)) {\n        const date = moment(data.date, 'YYYY-MM-DD');\n        dayOptions.push({value: data.date, name: date.format('dddd, DD MMMM YYYY')});\n      }\n    }\n    return dayOptions;\n  }\n\n  const { fullColsNum, getDateGroup, row, groupBy, groupValue } = props;\n  let { groupHide } = props;\n\n  return (\n    <TableRow>\n      <TableCell\n        colSpan={props.tableName === 'discussion' ? fullColsNum - 4 : fullColsNum}\n        className=\"data-table__row-title\"\n      >\n        <MenuItem\n          colSpan={fullColsNum}\n          style={{ paddingTop: '0px', paddingBottom: '0px' }}\n          onClick={() => {\n            groupHide[getDateGroup(row[groupBy])] = !groupHide[getDateGroup(row[groupBy])];\n            return props.setGroup(groupHide);\n          }}\n        >\n          <ListItemIcon>\n            {groupHide[getDateGroup(row[groupBy])] ? (\n              <CustomIcon\n                class=\"icn_arrow_right\"\n                tip=\"Показать\"\n                action={() => {\n                  groupHide[getDateGroup(row[groupBy])] = true;\n                  return props.setGroup(groupHide);\n                }}\n              />\n            ) : (\n              <CustomIcon\n                class=\"icn_arrow_down\"\n                tip=\"Свернуть\"\n                action={() => {\n                  groupHide[getDateGroup(row[groupBy])] = false;\n                  return props.setGroup(groupHide);\n                }}\n              />\n            )}\n          </ListItemIcon>\n\n          <Typography variant=\"inherit\" noWrap style={{ fontSize: 'var(--font-size-table)' }}>\n            {props.headCells[groupBy].value}: {groupValue}\n          </Typography>\n        </MenuItem>\n      </TableCell>\n      {props.tableName === 'discussion' && (\n        <>\n          <TableCell colSpan={3} className=\"data-table__row-title_right\">\n            {\n              currentWeek === row.week ?\n              <>\n                <PopupConfirmChoice\n                  class=\"icn_notification\"\n                  id={row.week}\n                  options={dayOptionsChoice}\n                  action={props.sendNotification}\n                  actionName=\"отправка уведомлений об обсуждениях\"\n                />\n\n                &emsp;&emsp;\n              </> :\n              <span style={{width:'50px', display: 'inline-block'}}>&nbsp;</span>\n            }\n\n\n            <CustomIcon\n              class=\"icn_description\"\n              tip=\"Показать все обсуждения недели\"\n              action={props.toggleDescription}\n            />\n\n            &emsp;&emsp;\n\n            <PopupConfirmChoice\n              class=\"icn_discussionCopy\"\n              id={row[groupBy]}\n              options={weekOptionsChoice}\n              action={props.copyPreviousWeekDiscussions}\n              actionName=\"копирование обсуждений недели\"\n            />\n          </TableCell>\n        </>\n      )}\n    </TableRow>\n  );\n}\n","import React, { Fragment, Suspense, lazy } from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Input } from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\nimport 'moment/locale/ru';\n\nimport { dataTable, metaData, filters, filterTasks } from '../../config/data';\nimport { doData, getData } from '../../utils/api';\nimport storage from '../../storages/commonStorage';\n// import TblActionMenu from '../TblActionMenu/TblActionMenu';\nimport TblHeadEnhanced from '../TblHeadEnhanced/TblHeadEnhanced';\n// import PopupEditFullText from '../PopupEditFullText/PopupEditFullText';\nimport CustomIcon from '../../SharedComponents/CustomIcon';\nimport TblHeaderSearch from '../TblHeaderSearch/TblHeaderSearch';\nimport TblHeaderPagination from '../TblHeaderPagination/TblHeaderPagination';\n// import TblFullTextRow from '../TblFullTextRow/TblFullTextRow';\n// import TblSecondaryList from '../TblSecondaryList/TblSecondaryList';\nimport TblGroupRow from '../TblGroupRow/TblGroupRow';\nimport getDefaultValues from '../../utils/defaultData';\nimport './DataTable.css';\n\nconst TblActionMenu = lazy(() => import('../TblActionMenu/TblActionMenu'));\nconst PopupEditFullText = lazy(() => import('../PopupEditFullText/PopupEditFullText'));\nconst TblSecondaryList = lazy(() => import('../TblSecondaryList/TblSecondaryList'));\nconst TblFullTextRow = lazy(() => import('../TblFullTextRow/TblFullTextRow'));\n\nconst desc = (a, b, sort) => {\n  let desc = 0;\n  for (let field of sort) {\n    let orderBy = field.field;\n    let val_a = Number.isInteger(a[orderBy]) ? a[orderBy] : a[orderBy] ? a[orderBy].toString() : '';\n    let val_b = Number.isInteger(b[orderBy]) ? b[orderBy] : b[orderBy] ? b[orderBy].toString() : '';\n\n    if (metaData.dataTable[orderBy].type === 'select') {\n      if (val_a !== '' && typeof val_a === 'string')\n        val_a = metaData[`${orderBy}List`][val_a].value;\n      if (val_b !== '' && typeof val_b === 'string')\n        val_b = metaData[`${orderBy}List`][val_b].value;\n      if (typeof val_a !== 'string') val_a = '';\n      if (typeof val_b !== 'string') val_b = '';\n    }\n\n    desc = 0;\n    if (val_b < val_a) desc = -1;\n    if (val_b > val_a) desc = 1;\n    if (field.order === 'asc') desc *= -1;\n    if (desc !== 0) break;\n  }\n  return desc;\n};\n\nconst stableSort = (array, cmp) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst getSorting = (sort) => {\n  return (a, b) => desc(a, b, sort);\n};\n\nconst getAdditionalCellProps = () => {\n  let hasAdditionalCell = false;\n  if (\n    metaData.specificParameters &&\n    (metaData.specificParameters.hasSpecAction ||\n      metaData.specificParameters.hasSpecNotes ||\n      metaData.specificParameters.hasEditMenu ||\n      metaData.specificParameters.hasDeleteButton ||\n      metaData.specificParameters.hasDoneButton)\n  ) {\n    hasAdditionalCell = true;\n  }\n\n  return hasAdditionalCell;\n};\n\nexport default class DataTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadData: false,\n      hasAddMenu: true,\n      page: 0,\n      rowsPerPage: 100,\n      search: '',\n      sort: [{ field: 'id', order: 'asc' }],\n      groupBy: '',\n      groupHide: {},\n      editID: -1,\n      editItem: '',\n      showFullTextID: -1,\n      showAddRows: -1,\n      data: dataTable,\n      headCells: metaData.dataTable,\n      titleRow: '',\n      secDataList: [],\n      weekDescription: undefined,\n\n      isOpenedPopupEdit: false,\n      taskPopupEdit: undefined,\n    };\n\n    this.setData = this.setData.bind(this);\n    this.setPage = this.setPage.bind(this);\n    this.setSearch = this.setSearch.bind(this);\n    this.setSort = this.setSort.bind(this);\n    this.setEditID = this.setEditID.bind(this);\n    this.setEditItem = this.setEditItem.bind(this);\n    this.setShowFullTextID = this.setShowFullTextID.bind(this);\n    this.setRowsPerPage = this.setRowsPerPage.bind(this);\n    this.setHeadCells = this.setHeadCells.bind(this);\n    this.setIsOpenedPopupEdit = this.setIsOpenedPopupEdit.bind(this);\n    this.setWeekDescription = this.setWeekDescription.bind(this);\n  }\n\n  setData = (data) => {\n    this.setEditID(-1);\n    this.setState({ data });\n  };\n  setPage = (page) => {\n    this.setEditID(-1);\n    this.setState({ page });\n  };\n  setOrder = (order) => {\n    this.setState({ order });\n  };\n  setOrderBy = (orderBy) => {\n    this.setState({ orderBy });\n  };\n  setEditID = (editID) => {\n    this.setState({ editID });\n  };\n  setEditItem = (editItem) => {\n    this.setState({ editItem });\n  };\n  setShowFullTextID = (showFullTextID) => {\n    this.setState({ showFullTextID });\n  };\n  setRowsPerPage = (rowsPerPage) => {\n    this.setState({ rowsPerPage });\n  };\n  setHeadCells = (headCells) => {\n    this.setState({ headCells });\n  };\n  setWeekDescription = (weekDescription) => {\n    this.setState({ weekDescription });\n  };\n  /* handle search */\n  setSearch = (search) => {\n    filters.data.commonFieldSearch = search;\n    this.setData(filterTasks());\n  };\n\n  /* handle change sort order */\n  setSort = (field) => {\n    let sort = this.state.sort;\n    let sortFieldIndex = sort\n      .map((f) => {\n        return f.field;\n      })\n      .indexOf(field);\n    if (sortFieldIndex !== -1) {\n      sort[sortFieldIndex].order === 'asc'\n        ? (sort[sortFieldIndex].order = 'desc')\n        : sort.splice(sortFieldIndex, 1);\n    } else {\n      sort.push({ field: field, order: 'asc' });\n    }\n    sessionStorage.setItem('sort', JSON.stringify(sort));\n    this.setState({ sort: sort });\n  };\n\n  /* handle sort click */\n  handleRequestSort = (event, field) => {\n    this.setSort(field);\n  };\n\n  /* handle group click */\n  handleRequestGroup = (event, field) => {\n    const sort = this.state.sort;\n    if (field && field !== '' && sort.field !== field) {\n      field === 'week'\n        ? this.setState({\n            sort: [\n              { field: field, order: 'desc' },\n              { field: 'date', order: 'asc' },\n              { field: 'time', order: 'asc' },\n            ],\n          })\n        : this.setState({ sort: [{ field: field, order: 'asc' }] });\n    }\n    this.setState({ groupBy: field, byWeek: false });\n  };\n\n  /* handle change page click */\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  /* handle change row per page click */\n  handleChangeRowsPerPage = (event) => {\n    this.setRowsPerPage(parseInt(event.target.value, 10));\n    this.setPage(0);\n  };\n\n  /* set sort/group to default options */\n  defaultSort = (order = 'desc', orderBy = 'id') => {\n    let sort = [];\n    const sortSString = sessionStorage.getItem('sort');\n    if (sortSString) {\n      const sortObj = JSON.parse(sortSString);\n      if (Array.isArray(sortObj)) sort = sortObj;\n    } else {\n      orderBy.split(',').map((field, i) => {\n        return sort.push({ field: field, order: order.split(',')[i] });\n      });\n    }\n\n    this.setState({ sort: sort, groupBy: '', search: '' });\n\n    if (metaData.specificParameters && metaData.specificParameters.defaultGroupField) {\n      this.setState({ groupBy: metaData.specificParameters.defaultGroupField });\n    }\n  };\n\n  /* get array index (main data table) from given main task/theme (etc) ID */\n  realID = (id) => {\n    return dataTable\n      .map((task) => {\n        return task.id;\n      })\n      .indexOf(id);\n  };\n\n  /* called after OK click in edit dialog */\n  editTableRow = (id, rowData) => {\n    let errorResult = false;\n    doData('patch', rowData, id, metaData.dataTableName)\n      .then(([error]) => {\n        if (error) {\n          errorResult = true;\n        } else {\n          let realID = this.realID(id);\n          Object.keys(rowData).map((key) => {\n            return (dataTable[realID][key] = rowData[key]);\n          });\n          this.setData(filterTasks());\n          storage.upd.dispatch({ type: 'UPDATE', update: true });\n        }\n      })\n      .then(() => {\n        errorResult\n          ? storage.alert.dispatch({\n              type: 'SHOW_ALERT',\n              status: 'fail',\n              message: 'Ошибка при изменении',\n            })\n          : storage.alert.dispatch({\n              type: 'SHOW_ALERT',\n              status: 'success',\n              message: 'Изменение успешно',\n            });\n      });\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n  };\n\n  /* called if you click 'SAVE AS NEW' button */\n  addTableRow = (rowData, updateTable = true) => {\n    this.addTableRowArray([rowData], updateTable);\n  };\n\n  addTableRowArray = (rowDataArray, updateTable = true) => {\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n\n    Promise.all(\n      rowDataArray.map((rowData) => doData('put', rowData, undefined, metaData.dataTableName))\n    ).then((returnDataArray) => {\n      let error = 0;\n      let jsonOk = 1;\n      for (let returnData of returnDataArray) {\n        const returnError = returnData[0];\n        const returnJson = returnData[1];\n        if (returnError) error = 1;\n        if (!returnJson || !returnJson.data || !returnJson.data.id) jsonOk = 0;\n      }\n\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при добавлении',\n        });\n      } else if (jsonOk) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Добавление успешно',\n        });\n\n        for (let i in rowDataArray) {\n          let rowData = rowDataArray[i];\n          let json = returnDataArray[i][1];\n\n          rowData.id = json.data.id;\n          rowData.value = rowData[metaData.specificParameters.mainValue];\n          if (metaData[`${metaData.dataTableName}List`]) {\n            metaData[`${metaData.dataTableName}List`][rowData.id] = rowData;\n          }\n          dataTable.push(rowData);\n        }\n\n        if (updateTable) this.setData(filterTasks());\n      }\n    });\n  };\n\n  //chosenWeek = 0 - this week, 1 - next week, 2 - ...\n  copyPreviousWeekDiscussions(selectedWeek, chosenWeek) {\n    let weekData = dataTable.filter((row) => row.week === selectedWeek);\n\n    const infoArray = [];\n    for (const data of weekData) {\n      const info = { ...data }; //Don't forget to create REALLY new object\n      info.result = '';\n      info.status = 'new';\n      info.videoConf = '';\n\n      const newWeekDate = moment()\n        .startOf('week')\n        .day(moment(info.date).day() + 7 * chosenWeek);\n\n      info.date = moment(newWeekDate).format('YYYY-MM-DD');\n      info.week = moment(newWeekDate).format('YYYY.WW');\n\n      infoArray.push(info);\n    }\n\n    this.addTableRowArray(infoArray);\n  }\n\n  /* called after OK click in DELETE dialog */\n  deleteTableRow = (id) => {\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    let errorResult = false;\n    doData('delete', {}, id, metaData.dataTableName)\n      .then(([error]) => {\n        if (error) {\n          errorResult = true;\n        } else {\n          this.setShowFullTextID(-1);\n          let realID = this.realID(id);\n          dataTable.splice(realID, 1);\n          this.setData(filterTasks());\n\n          storage.upd.dispatch({ type: 'UPDATE', update: true });\n        }\n      })\n      .then(() => {\n        errorResult\n          ? storage.alert.dispatch({\n              type: 'SHOW_ALERT',\n              status: 'fail',\n              message: 'Ошибка при изменении',\n            })\n          : storage.alert.dispatch({\n              type: 'SHOW_ALERT',\n              status: 'success',\n              message: 'Удаление успешно',\n            });\n      });\n  };\n\n  /* called after inline edit of something */\n  inlineEditOk = (id) => (event) => {\n    let editProperty = this.state.editItem;\n    let realID = this.realID(id);\n    let rowData = {};\n    Object.keys(dataTable[realID]).map((key) => {\n      return (rowData[key] = dataTable[realID][key]);\n    });\n    rowData[editProperty] = this[`edit-${editProperty}-${id}`].value;\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    doData('patch', rowData, id, metaData.dataTableName).then(([error]) => {\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при изменении',\n        });\n      } else {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Изменение успешно',\n        });\n\n        //dataTable[realID][editProperty] = this[`edit-${editProperty}-${id}`].value;\n        dataTable[realID][editProperty] = rowData[editProperty];\n        this.setData(filterTasks());\n      }\n    });\n  };\n\n  dialogEditOk = (id, editProperty, editPropertyValue) => {\n    let realID = this.realID(id);\n    let rowData = {};\n    Object.keys(dataTable[realID]).map((key) => {\n      return (rowData[key] = dataTable[realID][key]);\n    });\n    rowData[editProperty] = editPropertyValue;\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    doData('patch', rowData, id, metaData.dataTableName).then(([error]) => {\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при изменении',\n        });\n      } else {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Изменение успешно',\n        });\n\n        dataTable[realID][editProperty] = editPropertyValue;\n        this.setData(filterTasks());\n      }\n    });\n  };\n\n  /* called after set task/theme etc status as DONE */\n  completeTableRow = (id) => {\n    let realID = this.realID(id);\n    let task = {};\n    Object.keys(dataTable[realID]).map((key) => {\n      return (task[key] = dataTable[realID][key]);\n    });\n    task.status = 'done';\n\n    let today = new Date();\n    task.dateEnd = today.toISOString().replace(/(.+)T(.+)/, '$1');\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    doData('patch', task, id).then(([error]) => {\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при изменении',\n        });\n      } else {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Изменение успешно',\n        });\n\n        dataTable[realID].status = task.status;\n        dataTable[realID].dateEnd = task.dateEnd;\n        this.setData(filterTasks());\n      }\n    });\n  };\n\n  setStatusTableRow = (id, status) => {\n    let realID = this.realID(id);\n    let task = {};\n    Object.keys(dataTable[realID]).map((key) => {\n      return (task[key] = dataTable[realID][key]);\n    });\n    task.status = status;\n\n    if (status === 'done') {\n      let today = new Date();\n      task.dateEnd = today.toISOString().replace(/(.+)T(.+)/, '$1');\n    }\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    doData('patch', task, id, metaData.dataTableName).then(([error]) => {\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при изменении',\n        });\n      } else {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Изменение успешно',\n        });\n\n        dataTable[realID].status = task.status;\n        dataTable[realID].dateEnd = task.dateEnd;\n        this.setData(filterTasks());\n      }\n    });\n  };\n\n  /* handle show full text row */\n  showFullText = (id) => (event) => {\n    this.state.showFullTextID === id ? this.setShowFullTextID(-1) : this.setShowFullTextID(id);\n  };\n\n  /* go to linked table (questions, discussion) for given task */\n  loadLinked = async (id, loadTableName = 'spec_notes') => {\n    let mainTable = metaData.dataTableName;\n    storage.table.dispatch({ type: 'SET_TABLE', tableName: metaData.dataTableName });\n\n    let data = await getData(mainTable, 'direct', { id: id });\n\n    this.props.reloadDataTable(loadTableName, () => {\n      filters.data.idTask = id;\n      if (loadTableName === 'spec_notes') filters.perm.idTask = id;\n      filters.perm.mainTable = mainTable;\n\n      this.setState({ titleRow: `${data[0].id} - ${data[0].value}` });\n    });\n  };\n\n  /* show taskgroup results */\n  showResults = async (id, loadTableName = 'discussion') => {\n    let data = await getData(loadTableName, 'direct', {\n      idTask: id,\n      mainTable: metaData.dataTableName,\n    });\n\n    this.setState({\n      showAddRows: id,\n      secDataList: data\n        .sort((a, b) => (a.date.toString() > b.date.toString() ? -1 : 1))\n        .map((task) => {\n          const result = [];\n          result.push(moment(task.date).format('DD MMMM YYYY'));\n          result.push(\n            task.participants\n              .split(',')\n              .map((d) => (metaData.developerList[d]?.value ? metaData.developerList[d].value : d))\n              .join(', ')\n          );\n          result.push(task.result);\n          return { string: result.join('\\n') };\n        }),\n    });\n  };\n\n  /* add 'linked' data: question for tasks, discussion for theme, etc */\n  addLinkedData = (id, type, infoData) => {\n    let realID = this.realID(id);\n    let linkedData = {};\n    let metaTable = metaData.tables[`${type}_meta`];\n\n    for (let prop in metaTable.dataTable) {\n      if (metaTable.dataTable[prop].defaultValue) {\n        linkedData[prop] = getDefaultValues(realID, prop, metaTable.dataTable);\n      }\n    }\n\n    for (let prop in infoData) {\n      linkedData[prop] = infoData[prop];\n    }\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт обновление информации в БД...',\n    });\n    doData('put', linkedData, undefined, type).then(([error, json]) => {\n      if (error) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при добавлении',\n        });\n      } else if (json && json.data && json.data.id) {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'success',\n          message: 'Добавление успешно',\n        });\n      } else {\n        storage.alert.dispatch({\n          type: 'SHOW_ALERT',\n          status: 'fail',\n          message: 'Ошибка при добавлении записи в БД',\n        });\n      }\n    });\n\n    return false;\n  };\n\n  /* create and show sub list data (tasks for theme, etc) */\n  loadSecondaryList = async (id, field, dataListName) => {\n    if (this.state.showAddRows === id) {\n      this.setState({ showAddRows: -1, secDataList: [] });\n    } else {\n      this.setState({ showAddRows: id });\n\n      let secDataList = [];\n      field = 'taskgroup';\n\n      if (metaData.dataTableName === 'discussion') {\n        let realID = this.realID(id);\n        id = dataTable[realID].idTask;\n      }\n\n      let data = await getData(dataListName, 'direct', { [field]: id });\n      data\n        .filter((task) => {\n          return parseInt(task[field]) === parseInt(id) && task.status !== 'done';\n        })\n        .sort((a, b) => {\n          return a.value <= b.value ? -1 : 1;\n        })\n        .map((info) => {\n          return secDataList.push({ id: info.id, value: info.value });\n        });\n\n      this.setState({\n        secDataList: secDataList.map((task) => {\n          return { string: ` ${task.value}` };\n        }),\n      });\n    }\n  };\n\n  menuActionLoadQuestions = (id) => {\n    return this.loadLinked(id, 'spec_notes');\n  };\n\n  menuActionLoadDiscussions = (id) => {\n    return this.loadLinked(id, 'discussion');\n  };\n\n  menuActionLoadThemeTasks = (id) => {\n    return this.loadSecondaryList(id, metaData.dataTableName, 'task');\n  };\n\n  /* handle send notifiction */\n  sendNotification = (id) => {\n    let rowData = {\n      id: id,\n      mode: 'notify',\n      feature: metaData.dataTableName,\n    };\n\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт отправка уведомлений...',\n    });\n    doData('notify', rowData, id, 'notification').then(([error]) => {\n      error\n        ? storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'fail',\n            message: 'Ошибка при отправке уведомления',\n          })\n        : storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'success',\n            message: 'Уведомление послано успешно',\n          });\n    });\n  };\n\n  sendNotificationWeekDate = (notifyWeek, date) => {\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт отправка уведомлений...',\n    });\n    const data = {\n      week: notifyWeek,\n      mode: 'done',\n      feature: 'discussion',\n    };\n    if (date) data.date = date;\n    doData('notify', data, undefined, 'notification').then(([error]) => {\n      error\n        ? storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'fail',\n            message: 'Ошибка при отправке уведомления',\n          })\n        : storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'success',\n            message: 'Уведомление послано успешно',\n          });\n    });\n  };\n\n  /* create action menu list (edit/delete/done, etc) */\n  actionMenuList = () => {\n    let menuList = [];\n    if (metaData.specificParameters.hasQuestions) {\n      let action = {\n        id: 'spec_notes',\n        value: 'Связанные вопросы',\n        action: this.menuActionLoadQuestions,\n      };\n      menuList.push(action);\n      action = {\n        id: 'question',\n        value: 'Задать вопрос',\n        type: 'spec_notes',\n        action: this.addLinkedData,\n      };\n      menuList.push(action);\n      menuList.push({ id: 'divider' });\n    }\n    if (metaData.specificParameters.haveDiscussion) {\n      let action = {\n        id: 'discussion',\n        value: 'Добавить обсуждение',\n        type: 'discussion',\n        action: this.addLinkedData,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasGoToDiscussion) {\n      let action = {\n        id: 'goToDiscussion',\n        value: 'Связанные обсуждения',\n        type: 'discussion',\n        action: this.menuActionLoadDiscussions,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasSublistData) {\n      let action = {\n        id: 'secDataList',\n        value: 'Связанные задачи',\n        action: this.menuActionLoadThemeTasks,\n      };\n      menuList.push(action);\n      menuList.push({ id: 'divider' });\n    }\n    if (metaData.specificParameters.hasEditMenu) {\n      let action = {\n        id: 'tasks_edit',\n        value: 'Редактировать',\n        actionName: 'Редактирование',\n        action: this.editTableRow,\n        actionNew: this.addTableRow,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasSetStatusMenu) {\n      let action = {\n        id: 'tasks_status',\n        value: 'Изменить статус',\n        actionName: 'Изменить статус',\n        isListOfItems: true,\n        listItems: metaData.statusList,\n        action: this.setStatusTableRow,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasDeleteButton) {\n      let action = {\n        id: 'tasks_delete',\n        value: 'Удалить',\n        actionName: 'Удаление',\n        action: this.deleteTableRow,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasNotificationButton) {\n      menuList.push({ id: 'divider' });\n      let action = {\n        id: 'notification',\n        value: 'Отправить уведомление',\n        action: this.sendNotification,\n      };\n      menuList.push(action);\n    }\n    if (metaData.specificParameters.hasShowResults) {\n      let action = {\n        id: 'showThemeResults',\n        value: 'История обсуждений',\n        type: 'discussion',\n        action: this.showResults,\n      };\n      menuList.push(action);\n    }\n\n    return menuList;\n  };\n\n  setIsOpenedPopupEdit = (taskID, state = true) => {\n    console.log(taskID, state);\n\n    this.setState({ taskPopupEdit: taskID });\n    this.setState({ isOpenedPopupEdit: state });\n  };\n\n  getDateGroup = (date) => {\n    let weekNum = this.state.byWeek ? moment(date, 'YYYY-MM-DD').week() : date;\n    return weekNum;\n  };\n\n  toggleDescription = (week) => {\n    const { weekDescription } = this.state;\n    if (weekDescription && weekDescription === week) {\n      this.setWeekDescription(undefined);\n    } else {\n      this.setWeekDescription(week);\n    }\n  };\n\n  componentDidMount() {\n    this.unsubscribe = storage.state.subscribe(() => {\n      let dataLoading = storage.state.getState().STATE.dataLoading;\n      if (dataLoading && dataLoading === 'data') {\n        // default sort\n        const order = metaData.specificParameters.defaultSortDirection || 'desc';\n        const orderBy = metaData.specificParameters.defaultSortField || 'id';\n        let sort = [];\n        const sortSString = sessionStorage.getItem('sort');\n        if (sortSString) {\n          const sortObj = JSON.parse(sortSString);\n          if (Array.isArray(sortObj)) sort = sortObj;\n        } else {\n          orderBy.split(',').map((field, i) => {\n            return sort.push({ field: field, order: order.split(',')[i] });\n          });\n        }\n\n        let groupBy = '';\n        if (metaData.specificParameters && metaData.specificParameters.defaultGroupField) {\n          groupBy = metaData.specificParameters.defaultGroupField;\n        }\n\n        this.setState({\n          headCells: metaData.dataTable,\n          sort: sort,\n          search: '',\n          groupBy: groupBy,\n          editID: -1,\n          data: filterTasks(true),\n          loadData: true,\n        });\n      }\n    });\n\n    this.unsubscribeData = storage.data.subscribe(() => {\n      if (storage.data.getState().DATA.redraw) {\n        this.setData(filterTasks());\n        this.setPage(0);\n      }\n    });\n\n    this.unsubscribeTable = storage.table.subscribe(() => {\n      this.setState({ loadData: false, secDataList: [], titleRow: '' });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    this.unsubscribeData();\n    this.unsubscribeTable();\n  }\n\n  render() {\n    const { page, order, orderBy, sort, groupBy, headCells, weekDescription } = this.state;\n    let { rowsPerPage, data, secDataList } = this.state;\n    let groupList = {};\n    let { groupHide } = this.state;\n    let d = new Date();\n    d = d.toLocaleDateString().replace(/(\\d+).(\\d+).(\\d+)/, '$3-$2-$1');\n\n    // for `noPagination` parameter (print PDF click)\n    if (this.props.noPagination) {\n      data = filterTasks();\n      rowsPerPage = data.length;\n    }\n\n    const hasAdditionalCell = getAdditionalCellProps();\n    const fullColsNum =\n      Object.values(metaData.dataTable).filter((a) => {\n        return a.showInTable;\n      }).length + (hasAdditionalCell ? 1 : 0);\n\n    return this.state.loadData ? (\n      <Table size=\"small\" stickyHeader className=\"data-table__table\">\n        <TableHead>\n          {/* Table head */}\n          <TblHeadEnhanced\n            order={order}\n            sort={sort}\n            orderBy={orderBy}\n            groupBy={groupBy}\n            onRequestSort={this.handleRequestSort}\n            onRequestGroup={this.handleRequestGroup}\n            rowCount={data.length}\n            onFilter={(data) => {\n              this.setData(data);\n              this.setPage(0);\n            }}\n            headCells={headCells}\n          />\n          {/* Search & pagination options row */}\n          {!this.props.noPagination && (\n            <TableRow>\n              <TableCell\n                colSpan={hasAdditionalCell ? fullColsNum + 1 : fullColsNum}\n                className=\"data-table__pagination-cell\"\n              >\n                <TblHeaderSearch setSearch={this.setSearch} />\n\n                <TblHeaderPagination\n                  count={data.length}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n              </TableCell>\n            </TableRow>\n          )}\n          {/* Title row (for questions mode) */}\n          {metaData.specificParameters?.hasTitleRow && this.state.titleRow !== '' && (\n            <TableRow>\n              <TableCell colSpan={fullColsNum} className=\"data-table__row-title\">\n                {this.state.titleRow}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableHead>\n\n        <TableBody>\n          {data.length > 0 ? (\n            stableSort(data, getSorting(sort))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                let rowClass = '';\n                if (row.status === 'new') rowClass = 'task_alert';\n                if (\n                  metaData.dataTableName === 'discussion' &&\n                  row.status === 'new' &&\n                  row.date >= d\n                ) {\n                  rowClass = '';\n                }\n                if (row.priority === 'hard') rowClass = 'task_bad';\n                if (row.status === 'rejected') rowClass = 'task_bad';\n                if (row.status === 'done') rowClass = 'task_good';\n                if (\n                  metaData.dataTableName === 'discussion' &&\n                  !row.result &&\n                  row.status === 'done'\n                ) {\n                  rowClass = 'task_noresult';\n                }\n\n                let showGroupByRow = false;\n                let groupValue = '';\n                let dayName = '';\n\n                if (groupBy && groupBy !== '') {\n                  let date = '';\n                  if (headCells[groupBy].type === 'date') {\n                    date = moment(row[groupBy], 'YYYY-MM-DD');\n                  } else if (groupBy === 'week') {\n                    date = moment(row.date, 'YYYY-MM-DD');\n                  }\n\n                  let groupField = this.getDateGroup(row[groupBy]);\n                  if (!groupList[groupField]) {\n                    groupList[groupField] = 1;\n                    showGroupByRow = true;\n                  }\n\n                  if (headCells[groupBy].type === 'date') {\n                    dayName = `${date.format('dddd')}\n${date.format('DD MMMM')}`;\n                    //dayName = date.format('dddd') + '<br>' + date.format('DD MMMM');\n                    groupValue = date.format('DD MMMM YYYY');\n                  } else if (groupBy === 'week') {\n                    dayName = `${date.format('dddd')}\n${date.format('DD MMMM')}`;\n                    groupValue =\n                      date.startOf('week').format('DD MMMM YYYY') +\n                      ' - ' +\n                      date.endOf('week').format('DD MMMM YYYY');\n                  } else {\n                    groupValue = metaData[`${groupBy}List`]\n                      ? metaData[`${groupBy}List`][row[groupBy]].value\n                      : row[groupBy];\n                  }\n                }\n\n                //big text data, like description, change_all. get Index of cell where Icon for click, value && property name\n                let fullText = { display: false };\n                for (let property of Object.values(headCells)) {\n                  if (\n                    property.type === 'fulltext' &&\n                    row[property.id] !== '' &&\n                    typeof row[property.id] === 'string'\n                  ) {\n                    fullText.value = row[property.id];\n                    fullText.title = property.value;\n                    fullText.id = property.id;\n                    fullText.display = true;\n                    fullText.fullTextIndexCell = property.tableIndex;\n                  }\n                }\n\n                let ZoomLink = '';\n                if (\n                  row.videoConf &&\n                  /https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d+\\?pwd=.+/.test(row.videoConf)\n                ) {\n                  const url = row.videoConf.replace(\n                    /^[\\s\\S]*(https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d+\\?pwd=\\S+\\b)[\\s\\S]*/,\n                    '$1'\n                  );\n                  const tip = url.replace(/^https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d{7}(\\d{4}).+/, '$1');\n                  ZoomLink = <CustomIcon type=\"link\" class=\"icn_zoom\" tip={tip} href={url} />;\n                }\n\n                let YouTubeLink = '';\n                if (row.videoConf && /youtu\\.?be/.test(row.videoConf)) {\n                  const url = row.videoConf.replace(\n                    /^[\\s\\S]*(https:\\/\\/(www\\.)?youtu\\.?be.+\\b)[\\s\\S]*/,\n                    '$1'\n                  );\n                  YouTubeLink = <CustomIcon type=\"link\" class=\"icn_youtube\" href={url} />;\n                }\n\n                return (\n                  <Fragment key={`${row.id}`}>\n                    {/* Group row with show/hide icons */}\n                    {groupBy && groupBy !== '' && showGroupByRow && (\n                      <TblGroupRow\n                        tableName={metaData.dataTableName}\n                        fullColsNum={hasAdditionalCell ? fullColsNum + 2 : fullColsNum}\n                        headCells={headCells}\n                        groupBy={groupBy}\n                        groupValue={groupValue}\n                        groupHide={groupHide}\n                        setGroup={(groupHide) => {\n                          this.setState({ groupHide: groupHide });\n                        }}\n                        row={row}\n                        weekData={dataTable.filter((r) => r.week === row.week )}\n                        getDateGroup={this.getDateGroup}\n                        sendNotification={(id, day) => {\n                          this.sendNotificationWeekDate(id, day);\n                        }}\n                        toggleDescription={() => {\n                          this.toggleDescription(row.week);\n                        }}\n                        copyPreviousWeekDiscussions={(id, week) => {\n                          this.copyPreviousWeekDiscussions(id, week);\n                        }}\n                      />\n                    )}\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={`row-main-${row.id}`}\n                      className={`${rowClass} data-table__row`}\n                      style={{\n                        height: '31px',\n                        display:\n                          !groupBy ||\n                          (groupBy &&\n                            groupList[this.getDateGroup(row[groupBy])] &&\n                            !groupHide[this.getDateGroup(row[groupBy])])\n                            ? 'table-row'\n                            : 'none',\n                      }}\n                    >\n                      {Object.values(headCells)\n                        .filter((a) => a.showInTable)\n                        .sort((a, b) => {\n                          return a.tableIndex >= b.tableIndex ? 1 : -1;\n                        })\n                        .map((headCell, index) => {\n                          let property = headCell.id;\n                          let value =\n                            groupBy &&\n                            groupBy !== '' &&\n                            (headCell.id === groupBy ||\n                              (headCell.id === 'date' && groupBy === 'week'))\n                              ? dayName\n                              : row[headCell.id];\n                          if (headCell.type === 'time')\n                            value = value.replace(/(\\d\\d:\\d\\d):\\d\\d/, '$1');\n                          if (headCell.id === 'mainTable')\n                            value = metaData.tables[`${value}_meta`].specificParameters.tableName;\n                          let id = row.id;\n                          let whiteSpace = '';\n                          if (['datetime', 'date', 'time'].indexOf(headCell.type) !== -1) {\n                            whiteSpace = 'nowrap';\n                          }\n                          if (\n                            groupBy &&\n                            groupBy !== '' &&\n                            (headCell.id === groupBy ||\n                              (headCell.id === 'date' && groupBy === 'week'))\n                          ) {\n                            whiteSpace = 'pre';\n                          }\n\n                          const paddingLeft = index === 0 ? '10px' : '0px';\n\n                          return (\n                            <Fragment key={`td-${property}-${id}`}>\n                              <TableCell\n                                className=\"data-table__cell\"\n                                align=\"left\"\n                                padding=\"none\"\n                                style={{\n                                  whiteSpace: whiteSpace,\n                                  paddingLeft: paddingLeft,\n                                  fontSize: 'var(--font-size-table)',\n                                }}\n                              >\n                                {headCell.isInlineEditable &&\n                                  headCell.type === 'string' &&\n                                  (this.state.editID !== id ||\n                                    this.state.editItem !== property) && (\n                                    <>\n                                      {fullText.display &&\n                                        metaData.dataTable[property].hasFullTextLink && (\n                                          <CustomIcon\n                                            class=\"icn_description\"\n                                            tip={`Показать ${fullText.title}`}\n                                            action={this.showFullText(row.id)}\n                                          />\n                                        )}\n                                      {ZoomLink}\n                                      {YouTubeLink}\n                                      {value}\n                                    </>\n                                  )}\n\n                                {/* edit item textbox */}\n                                {this.state.editID === id && this.state.editItem === property && (\n                                  <Input\n                                    type=\"text\"\n                                    autoFocus\n                                    defaultValue={value}\n                                    ref={`edit-${property}-${id}`}\n                                    inputRef={(el) => (this[`edit-${property}-${id}`] = el)}\n                                    inputProps={{\n                                      style: { fontSize: 'var(--font-size-table)' },\n                                    }}\n                                    /*edit item ok / cancel buttons*/\n                                    endAdornment={\n                                      <InputAdornment position=\"end\">\n                                        <div className=\"data-table__cell-edit-buttons\">\n                                          <CustomIcon\n                                            class=\"icn_ok\"\n                                            action={this.inlineEditOk(id)}\n                                          />\n                                          <CustomIcon\n                                            class=\"icn_cancel\"\n                                            action={() => {\n                                              this.setEditID(-1);\n                                              this.setEditItem('');\n                                            }}\n                                          />\n                                        </div>\n                                      </InputAdornment>\n                                    }\n                                    fullWidth={true}\n                                  />\n                                )}\n\n                                {/* Fulltext editable cell value */}\n                                {headCell.isInlineEditable && headCell.type === 'fulltext' && (\n                                  <div\n                                    ref={`div-${property}-${id}`}\n                                    className=\"data-table__cell-fulltext\"\n                                  >\n                                    {/* text */}\n                                    <div className=\"data-table__cell-fulltext-value\">\n                                      {fullText.display &&\n                                        metaData.dataTable[property].hasFullTextLink && (\n                                          <CustomIcon\n                                            class=\"icn_description\"\n                                            action={this.showFullText(row.id)}\n                                          />\n                                        )}\n                                      {value}\n                                    </div>\n\n                                    {/* dialog to edit */}\n                                    {this.state.hoverID === id &&\n                                      (this.state.editID !== id ||\n                                        this.state.editItem !== property) && (\n                                        <Suspense fallback={<p>...</p>}>\n                                          <PopupEditFullText\n                                            class=\"icn_tasks_edit\"\n                                            id={row.id}\n                                            property={property}\n                                            text={value}\n                                            action={this.dialogEditOk}\n                                          />\n                                        </Suspense>\n                                      )}\n                                  </div>\n                                )}\n\n                                {/* None of the other cell values */}\n                                {!headCell.isInlineEditable &&\n                                  headCell.type !== 'multi-select' &&\n                                  (headCell.type !== 'select' ||\n                                    typeof metaData[`${property}List`][value] === 'undefined') && (\n                                    <>\n                                      {fullText.display &&\n                                        metaData.dataTable[property].hasFullTextLink && (\n                                          <CustomIcon\n                                            class=\"icn_description\"\n                                            action={this.showFullText(row.id)}\n                                          />\n                                        )}\n                                      {value}\n                                    </>\n                                  )}\n\n                                {/* Select non-editable cell value */}\n                                {!headCell.isInlineEditable &&\n                                  headCell.type === 'select' &&\n                                  typeof metaData[`${property}List`][value] !== 'undefined' && (\n                                    <>\n                                      {fullText.display &&\n                                        index + 1 === fullText.fullTextIndexCell &&\n                                        metaData.dataTable[property].hasFullTextLink && (\n                                          <CustomIcon\n                                            class=\"icn_description\"\n                                            action={this.showFullText(row.id)}\n                                          />\n                                        )}\n                                      {metaData[`${property}List`][value].value}\n                                    </>\n                                  )}\n\n                                {/* Multi-select non-editable cell value */}\n                                {!headCell.isInlineEditable && headCell.type === 'multi-select' && (\n                                  <div className=\"data-table__cell-multiselect\">\n                                    {fullText.display &&\n                                      index + 1 === fullText.fullTextIndexCell &&\n                                      metaData.dataTable[property].hasFullTextLink && (\n                                        <CustomIcon\n                                          class=\"icn_description\"\n                                          action={this.showFullText(row.id)}\n                                        />\n                                      )}\n                                    {/* <DescriptionIcon fontSize={fontSize}/>} */}\n                                    {value\n                                      .split(',')\n                                      .map((d) => metaData[`${property}List`][d]?.value || d)\n                                      .join(', ')}\n                                  </div>\n                                )}\n                              </TableCell>\n\n                              {headCell.isInlineEditable && headCell.type === 'string' && (\n                                <TableCell\n                                  className=\"data-table__cell\"\n                                  align=\"center\"\n                                  padding=\"none\"\n                                  style={{\n                                    width: '10px',\n                                    whiteSpace: whiteSpace,\n                                    paddingLeft: paddingLeft,\n                                    borderBottom:\n                                      (this.state.showFullTextID === row.id ||\n                                        (weekDescription && weekDescription === row.week)) &&\n                                      fullText.display &&\n                                      0,\n                                  }}\n                                >\n                                  {this.state.editID !== id && (\n                                    <div className=\"data-table__hover-icon data-table__cell-inline-edit\">\n                                      <CustomIcon\n                                        class=\"icn_tasks_edit\"\n                                        tip={`Изменить: ${metaData.dataTable[property].value}`}\n                                        action={() => {\n                                          this.setEditID(id);\n                                          this.setEditItem(property);\n                                        }}\n                                      />\n                                    </div>\n                                  )}\n                                </TableCell>\n                              )}\n                            </Fragment>\n                          );\n                        })}\n\n                      {/* Right column with actions menu */}\n                      {hasAdditionalCell && (\n                        <TableCell\n                          className=\"data-table__cell data-table__hover-icon\"\n                          padding=\"none\"\n                          style={{ paddingLeft: metaData.mobile ? '10px' : '' }}\n                        >\n                          <div className=\"data-table__hover-icon\">\n                            <Suspense fallback={<p>...</p>}>\n                              <TblActionMenu id={row.id} task={row} list={this.actionMenuList} />\n                            </Suspense>\n                          </div>\n                        </TableCell>\n                      )}\n                    </TableRow>\n\n                    {/* Full text row - if click to show */}\n                    {(this.state.showFullTextID === row.id ||\n                      (weekDescription && weekDescription === row.week)) &&\n                      fullText.display && (\n                        <Suspense fallback={<TableRow><TableCell>...</TableCell></TableRow>}>\n                          <TblFullTextRow data={fullText} headCells={headCells} id={row.id} />\n                        </Suspense>\n                      )}\n\n                    {/* Secondary List: show and hide */}\n                    {this.state.showAddRows === row.id && !groupHide[row[groupBy]] && (\n                      <Suspense fallback={<TableRow><TableCell>...</TableCell></TableRow>}>\n                        <TblSecondaryList\n                          secDataList={secDataList}\n                          fullColsNum={fullColsNum}\n                          loadSecondaryList={() => this.loadSecondaryList(row.id, 'task')}\n                        />\n                      </Suspense>\n                    )}\n                  </Fragment>\n                );\n              })\n          ) : (\n            <TableRow>\n              <TableCell colSpan={fullColsNum}>\n                {metaData.specificParameters?.tableName\n                  ? `${metaData.specificParameters?.tableName}: отсутствуют}`\n                  : 'Данные загружаются...'}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    ) : (\n      <div className=\"data-table__loading\">\n        <CircularProgress style={{ width: '100px', height: '100px' }} />\n      </div>\n    );\n  }\n}\n","import React, { Suspense, lazy} from \"react\";\r\n// import Loadable from 'react-loadable';\r\nimport LoadingComponent from '../LoadingComponent/LoadingComponent';\r\n\r\nimport { dataTable, metaData } from \"../../config/data\";\r\nimport storage from \"../../storages/commonStorage\";\r\n// import MainCalendar from \"../MainCalendar/MainCalendar\";\r\nimport DataTable from \"../DataTable/DataTable\";\r\n// import DataAdd from \"../DataAdd/DataAdd\";\r\nimport \"./Content.css\";\r\n\r\n// const MainCalendar = Loadable({\r\n//   loader: () => import('../MainCalendar/MainCalendar'),\r\n//   loading: LoadingComponent\r\n// });\r\n\r\nconst MainCalendar = lazy(() => import('../MainCalendar/MainCalendar'));\r\nconst DataAdd = lazy(() => import('../DataAdd/DataAdd'));\r\n\r\nexport default function Content (props) {\r\n  const [tableName, setTableName] = React.useState(metaData.dataTableName);\r\n\r\n  const subscribe = () => storage.table.subscribe(() => {\r\n    const storageTableName = storage.table.getState().TABLE.tableName;\r\n    if (storageTableName) {\r\n      setTableName(storageTableName);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    subscribe();\r\n    return subscribe();\r\n  }, [tableName]);\r\n\r\n  return (\r\n    <section className=\"content\">\r\n      {\r\n        tableName !== \"calendar\" ? (\r\n        <div className=\"content__table\">\r\n          <Suspense fallback={<LoadingComponent />}>\r\n            <DataTable reloadDataTable={props.reloadDataTable} ref={props.dataRef}/>\r\n          </Suspense>\r\n        </div>\r\n        ) : (\r\n        <div className=\"content__calendar\">\r\n          <Suspense fallback={<LoadingComponent />}>\r\n            <MainCalendar dates={dataTable} />\r\n          </Suspense>\r\n        </div>\r\n      )}\r\n\r\n      <Suspense fallback={<LoadingComponent />}>\r\n        <DataAdd />\r\n      </Suspense>\r\n    </section>\r\n  );\r\n}\r\n","import React, {Suspense, lazy} from 'react';\n\nimport { metaData, filters, mainModes } from './config/data';\nimport { getData } from './utils/api';\nimport storage from './storages/commonStorage';\nimport Header from './Components/Header/Header';\nimport HeaderLogin from './Components/HeaderLogin/HeaderLogin';\nimport MainLeftSide from './Components/MainLeftSide/MainLeftSide';\nimport Content from './Components/Content/Content';\nimport './App.css';\n\nconst Hint = lazy(() => import('./SharedComponents/Hint'));\n\nexport default function App() {\n  const [developers, setDevelopers] = React.useState([]);\n  const _divDataTable = React.useRef(null);\n\n  const reloadDataTable = (dataTableName, func, resetFilter = true) => {\n    metaData.dataTableName = dataTableName;\n    storage.table.dispatch({ type: 'SET_TABLENAME', tableName: dataTableName });\n\n    if (resetFilter) filters.clear();\n    if (resetFilter) sessionStorage.removeItem('sort');\n\n    Promise.all([getData(`${dataTableName}_meta`), getData(metaData.dataTableName)])\n      .then(() => { if (typeof func === 'function') func(); })\n      .then(() => { storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'data' }); });\n  };\n\n  const pathname = document.location.pathname;\n  const hostpath = window.location.href.search(/localhost:3000/) !== -1 ? '' : 'smisplan';\n  const pathArray = pathname.split('/').slice(1);\n  if (pathArray[0] === hostpath) {\n    pathArray.shift();\n  }\n\n  const tableName = pathArray[0];\n  const inputFilter = { data: {} };\n  if (pathArray[1] !== '') {\n    inputFilter.developer = pathArray[1];\n  }\n\n  if (mainModes.includes(tableName)) metaData.dataTableName = tableName;\n\n  if (\n    navigator.userAgent.match(/Android/i) ||\n    navigator.userAgent.match(/webOS/i) ||\n    navigator.userAgent.match(/iPhone/i) ||\n    navigator.userAgent.match(/iPad/i) ||\n    navigator.userAgent.match(/iPod/i) ||\n    navigator.userAgent.match(/BlackBerry/i) ||\n    navigator.userAgent.match(/Windows Phone/i)\n  ) {\n    metaData.mobile = true;\n\n    let root = document.documentElement;\n    root.style.setProperty('--font-size-table-title', '16px');\n    root.style.setProperty('--font-size-table', '14px');\n  }\n\n  React.useEffect(() => {\n    getData('developer').then(() => {\n      setDevelopers(metaData.developerList)\n      Promise.all([ ...mainModes.map((mode) => getData(`${mode}_meta`)), getData(metaData.dataTableName) ])\n        .then(() => { storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'data' }); })\n    });\n  }, []);\n\n  return (\n    <div id=\"mainTable\" style={{ width: '100%', height: '100%' }}>\n      <header style={{ display: 'flex' }}>\n        <HeaderLogin reloadDataTable={reloadDataTable} dataRef={_divDataTable} />\n        <div className=\"divSpacingUp\" />\n        <Header reloadDataTable={reloadDataTable} />\n      </header>\n\n      <main style={{ display: 'flex' }} className=\"divBottom\">\n        <MainLeftSide developer={inputFilter.developer} developers={developers}/>\n        <Content dataRef={_divDataTable} reloadDataTable={reloadDataTable} />\n\n        <Suspense fallback={<p>...</p>}>\n          <Hint />\n        </Suspense>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.querySelector('#root'));\r\n","import { createStore, combineReducers } from 'redux';\n\n// reducers\nfunction ALERT(state = {}, action) {\n  switch (action.type) {\n    case 'SHOW_ALERT':\n      state.alert = { status: action.status, message: action.message };\n      return state;\n    case 'HIDE_ALERT':\n      delete state.alert;\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction STATE(state = {}, action) {\n  switch (action.type) {\n    case 'SET_DATALOADING':\n      state.dataLoading = action.stage; //chain: root, meta, data => clear\n      return state;\n    case 'UNSET_DATALOADING':\n      delete state.dataLoading;\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction TABLE(state = {}, action) {\n  switch (action.type) {\n    case 'SET_TABLENAME':\n      state.tableName = action.tableName;\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction META(state = {}, action) {\n  switch (action.type) {\n    case 'INCREASE':\n      state.count = state.count + 1;\n      return state;\n    case 'ZERO':\n      state.count = 0;\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction DATA(state = {}, action) {\n  switch (action.type) {\n    case 'REDRAW':\n      state.redraw = action.redraw;\n      return state;\n    default:\n      return state;\n  }\n}\n\nfunction UPD(state = {}, action) {\n  switch (action.type) {\n    case 'UPDATE':\n      state.update = action.update;\n      return state;\n    default:\n      return state;\n  }\n}\n\nconst storage = {\n  state: createStore(combineReducers({ STATE })),\n  alert: createStore(combineReducers({ ALERT })),\n  data: createStore(combineReducers({ DATA })),\n  upd: createStore(combineReducers({ UPD })),\n  meta: createStore(combineReducers({ META }), { META: { count: 0 } }),\n  table: createStore(combineReducers({ TABLE })),\n};\n\nexport default storage;\n","// import MomentUtils from '@date-io/moment';\n\nexport default class DateW extends Date {\n  constructor(...props){\n    if (props.length === 0) props[0] = new Date();\n    super(props);\n  }\n\n  getWeek = (dowOffset = 1) => {\n    dowOffset = dowOffset && typeof dowOffset === 'number' ? dowOffset : 0; //default dowOffset to zero\n    const newYear = new Date(this.getFullYear(), 0, 1);\n    let day = newYear.getDay() - dowOffset; //the day of week the year begins on\n    day = day >= 0 ? day : day + 7;\n    const daynum =\n      Math.floor(\n        (this.getTime() -\n          newYear.getTime() -\n          (this.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) /\n          86400000\n      ) + 1;\n    let weeknum;\n    //if the year starts before the middle of a week\n    if (day < 4) {\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n      if (weeknum > 52) {\n        const nYear = new Date(this.getFullYear() + 1, 0, 1);\n        let nday = nYear.getDay() - dowOffset;\n        nday = nday >= 0 ? nday : nday + 7;\n        /*if the next year starts before the middle of\n                  the week, it is week #1 of that year*/\n        weeknum = nday < 4 ? 1 : 53;\n      }\n    } else {\n      weeknum = Math.floor((daynum + day - 1) / 7);\n    }\n    return weeknum;\n  }\n\n  getWeekStr = (dayOffset = 1) => {\n    const week = this.getWeek(dayOffset);\n    return week < 10 ? `0${week}` : week;\n  };\n\n  getYearWeekStr = (dayOffset = 1) => `${this.getFullYear()}.${this.getWeekStr(dayOffset)}`;\n\n  static toDateTimeStr = (mode, value) => {\n    let date = undefined;\n    if (typeof value === 'string') {\n      date = value;\n      if (mode === 'time') date = value.split('T')[1];\n    } else if (typeof value === 'object' && value && value._isAMomentObject) {\n      switch (mode) {\n        case 'date':\n          date = value.format('YYYY-MM-DD');\n          break;\n        case 'time':\n          date = value.format('HH:mm:00');\n          break;\n        case 'datetime':\n          date = value.format('YYYY-MM-DD HH:mm:00');\n          break;\n        default:\n          date = undefined;\n      }\n    }\n    return date;\n  };\n\n  static\n}\n"],"sourceRoot":""}