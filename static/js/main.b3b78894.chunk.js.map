{"version":3,"sources":["utils/filters.js","utils/defaultData.js","config/constants.js","SharedComponents/CustomIcon.js","utils/apiMockAdapter.js","utils/api.js","Components/Header/HeaderModes.js","Components/Header/HeaderProjects.js","Components/Header/Header.js","SharedComponents/MenuItemsList.js","Components/MenuItemSettings/MenuItemSettings.js","Components/MenuItemChief/MenuItemChief.js","Components/HeaderLogin/HeaderLogin.js","SharedComponents/CheckboxListFilter/CheckboxListFilter.js","Components/DevelopersFilter/DevelopersFilter.js","Components/MainLeftSide/MainLeftSide.js","Components/LoadingComponent/LoadingComponent.js","Components/TblHeaderBtnMenu/TblHeaderBtnMenu.js","Components/TblHeadEnhanced/TblHeadEnhanced.js","Components/TblHeaderSearch/TblHeaderSearch.js","Components/TblHeaderPagination/TblHeaderPagination.js","Components/PopupConfirmChoice/PopupConfirmChoice.js","Components/TblGroupRow/TblGroupRow.js","Components/DataTable/DataTable.js","Components/Content/Content.js","App.js","index.js","config/data.js","storages/commonStorage.js","utils/date.js"],"names":["filters","clear","getKeys","forEach","key","startsWith","data","clearAll","perm","setKeys","tbl","Object","values","filter","a","isFilter","value","id","setValue","mode","field","vocFilter","keys","metaData","dataTable","f","vocabulary","push","length","join","checkFilter","includes","checkValue","task","filterData","filterDataKeys","i","search","fieldsArray","j","specificParameters","mainValue","compare","replace","split","type","fieldsList","k","propertyValue","taskValue","asRegexp","date","RegExp","parseInt","this","developer","project","filterTasks","dataTableShow","getDefaultValues","property","metaTable","today","Date","moment","format","undefined","inputData","objectKey","objectValue","modes","realData","mainModes","e","map","urlApi","TEST","CustomIcon","props","size","fontSize","style","padding","class","left","color","title","tip","className","onClick","action","href","target","rel","width","height","display","onKeyPress","role","tabIndex","React","memo","user","require","developers","projects","discussion","calendar","event","mock","MockAdapter","axios","delayResponse","onGet","reply","onPut","status","error","onPatch","onDelete","onPost","defaults","headers","get","post","put","patch","delete","Api","then","_handleApiResult","bind","body","fnName","res","console","log","storage","alert","dispatch","message","statusText","Error","getData","getUser","result","login","getProject","getDeveloper","info","m","tables","getMetaData","infoR","infoKey","mobile","showInTableMobile","showInTable","validValues","dataTableName","resetDataTable","prop","propInfo","doData","feature","json","putData","patchData","deleteData","postData","method","fileUpload","file","formData","FormData","append","fetch","response","ok","HeaderModes","reloadDataTable","hostpath","window","location","getMode","pathname","pathArray","slice","shift","tableName","document","useState","handleChange","newValue","useEffect","subscribe","table","storageTableName","getState","TABLE","AppBar","position","path","render","Tabs","onChange","indicatorColor","textColor","variant","scrollButtons","index","Tab","label","a11yProps","disabled","to","component","Link","HeaderProjects","projectList","setProjects","reloadActiveProjects","projectsHash","projectsActive","projectsOther","projectInfo","showAsDisabled","projectsReloaded","sort","b","unsubscribe","state","dataLoading","STATE","unsubscribeUpd","upd","UPD","update","unsubscribeData","DATA","redraw","list","classes","root","tabStyles","Header","MenuItemsList","itemsList","name","hasStartCheckbox","checkFunction","item","handleItemClick","MenuItem","backgroundColor","Checkbox","edge","checked","disableRipple","MenuItemSettings","menuEl","setMenuEl","menuElColors","setMenuElColors","menuElColumns","setMenuElColumns","checkedElSubList","setCheckedElSubList","openMenuItem","cb","currentTarget","closeMenuItem","columnsList","Menu","anchorEl","keepMounted","open","onClose","documentElement","colorIcons","getComputedStyle","getPropertyValue","setProperty","colorHover","checkedElSubListNew","concat","stage","MenuItemChief","currentDate","DateW","currentWeek","getWeek","handleClickItem","menuItem","week","getFullYear","getDay","sendNotification","Boolean","ListItemIcon","Typography","noWrap","HeaderLogin","dataRef","username","setUsername","_columnsListRef","useRef","trigger","Tooltip","IconButton","content","current","ref","CheckboxListFilter","setChecked","List","dense","options","option","optionsMap","labelId","ListItem","button","currentIndex","indexOf","newChecked","splice","filterType","updateData","inputProps","ListItemText","primary","Divider","DevelopersFilter","inputFilter","developersList","setDevelopers","resortActive","developerList","activeDevsList","row","author","activeDevs","nonActiveDevs","dev","resortDevelopers","inputDevelopers","sortedDevelopers","outputDevelopers","MainLeftSide","setOpen","handleOpen","isOpened","widthDefault","d","Drawer","anchor","paper","borderRadius","LoadingComponent","textAlign","paddingTop","CircularProgress","TblHeaderBtnMenu","itemList","all","noClosed","setAnchorEl","filterField","setFilterField","handleClick","utils","MomentUtils","margin","marginLeft","TblHeadEnhanced","setCoumnWidth","headCells","widths","getColumnWidth","hasAdditionalCell","hasSpecAction","hasSpecNotes","hasEditMenu","hasDeleteButton","hasDoneButton","getAdditionalCellProps","createSortHandler","onRequestSort","createGroupHandler","onRequestGroup","groupBy","handleDateFilter","onFilter","setState","headCell","headCellWidth","innerWidth","isGroup","isInlineEditable","isHovered","order","orderBy","TableRow","tableIndex","filterVisibility","groupVisibility","paddingLeft","minWidth","filterList","groupList","TableCell","align","maxWidth","onMouseEnter","onMouseLeave","sortDirection","TableSortLabel","active","direction","PureComponent","TblHeaderSearch","setSearch","clearSearch","handleSearch","Input","placeholder","onKeyDown","startAdornment","InputAdornment","endAdornment","TblHeaderPagination","countPages","count","page","rowsPerPage","onChangePage","onChangeRowsPerPage","countTotal","Math","ceil","goToFirstPage","goToPrevPage","goToNextPage","goToLastPage","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","from","backIconButtonProps","paddingBottom","nextIconButtonProps","toolbar","select","ActionsComponent","placement","enterDelay","PopupConfirmChoice","actionName","choice","setChoice","setOptions","Dialog","fullWidth","DialogTitle","DialogContent","RadioGroup","test","FormControlLabel","control","Radio","DialogActions","Button","startIcon","getYearWeekStr","TblGroupRow","fullColsNum","getDateGroup","groupValue","groupHide","showGrouped","colSpan","setGroup","dayOptions","weekData","foreEach","toggleDescription","weekOptions","weekObj","weekDate","setDate","getDate","weekStr","startOf","endOf","copyPreviousWeekDiscussions","TblActionMenu","lazy","TblSecondaryList","TblFullTextRow","stableSort","array","cmp","stabilizedThis","el","getSorting","desc","valA","Number","isInteger","toString","valB","descSort","DataTable","setData","setEditID","setPage","setOrder","setOrderBy","editID","setEditItem","editItem","setShowFullTextID","showFullTextID","setRowsPerPage","setHeadCells","setWeekDescription","weekDescription","commonFieldSearch","setSort","sortFieldIndex","handleRequestSort","handleRequestGroup","byWeek","handleChangePage","newPage","handleChangeRowsPerPage","defaultSort","defaultGroupField","realID","editTableRow","rowData","errorResult","addTableRow","updateTable","addTableRowArray","rowDataArray","Promise","returnDataArray","jsonOk","returnData","returnError","returnJson","deleteTableRow","inlineEditOk","editProperty","dialogEditOk","editPropertyValue","completeTableRow","dateEnd","toISOString","setStatusTableRow","showFullText","loadLinked","loadTableName","mainTable","idTask","titleRow","showResults","showAddRows","secDataList","participants","string","addLinkedData","infoData","linkedData","defaultValue","loadSecondaryList","dataListName","menuActionLoadDiscussions","menuActionLoadThemeTasks","sendNotificationWeekDate","notifyWeek","actionMenuList","menuList","haveDiscussion","hasGoToDiscussion","hasSublistData","actionNew","hasSetStatusMenu","isListOfItems","listItems","statusList","hasNotificationButton","hasShowResults","loadData","defaultSortDirection","defaultSortField","unsubscribeTable","selectedWeek","chosenWeek","infoArray","videoConf","newWeekDate","day","toLocaleDateString","noPagination","Table","stickyHeader","TableHead","rowCount","_data","hasTitleRow","TableBody","rowClass","priority","showGroupByRow","dayName","groupField","fullText","fullTextIndexCell","ZoomLink","url","YouTubeLink","_groupHide","r","hover","whiteSpace","hasFullTextLink","autoFocus","inputRef","_d","borderBottom","fallback","Component","MainCalendar","DataAdd","Content","setTableName","Suspense","dates","Hint","App","_divDataTable","resetFilter","navigator","userAgent","match","ReactDOM","querySelector","createStore","combineReducers","ALERT","meta","META","dowOffset","newYear","weeknum","daynum","floor","getTime","getTimezoneOffset","nYear","nday","getWeekStr","dayOffset","toDateTimeStr","_isAMomentObject","toLocaleTimeString"],"mappings":"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","file":"static/js/main.b3b78894.chunk.js","sourcesContent":["import { metaData, dataTable } from '../config/data';\r\n\r\nclass Filters {\r\n  constructor() {\r\n    this.data = { developer: [], project: '' };\r\n    this.perm = {};\r\n  }\r\n\r\n  // clear all data\r\n  clear = () => {\r\n    this.getKeys().forEach((key) => {\r\n      if (key.startsWith('_')) {\r\n        delete this.data[key];\r\n      } else if (typeof this.data[key] === 'string') {\r\n        this.data[key] = '';\r\n      } else {\r\n        this.data[key] = [];\r\n      }\r\n    });\r\n  };\r\n\r\n  // clear all data\r\n  clearAll = () => {\r\n    this.clear();\r\n    this.perm = {};\r\n  };\r\n\r\n  setKeys = (tbl) => {\r\n    Object.values(tbl)\r\n      .filter((a) => a.isFilter)\r\n      .forEach((value) => {\r\n        if (typeof this.data[value.id] === 'undefined') this.data[value.id] = '';\r\n      });\r\n  };\r\n\r\n  // set single filter field + all fields where this one is as Vocabulary\r\n  setValue = (mode = 'data', field, value) => {\r\n    this[mode][field] = value;\r\n\r\n    const vocFilter = [];\r\n    Object.keys(metaData.dataTable).forEach((f) => {\r\n      if (metaData.dataTable[f].vocabulary === field) vocFilter.push(f);\r\n    });\r\n\r\n    if (vocFilter.length > 0) {\r\n      if (vocFilter.length === 1) {\r\n        this[mode][vocFilter[0]] = value;\r\n      } else {\r\n        this[mode][`_${vocFilter.join('OR')}`] = value;\r\n      }\r\n    }\r\n  };\r\n\r\n  // get all keys\r\n  getKeys = (mode = 'data') => Object.keys(this[mode]);\r\n\r\n  // check if field is filter\r\n  checkFilter = (f) => this.getKeys().includes(f);\r\n\r\n  // check if row data is ok for filter\r\n  checkValue = (task) => {\r\n    let filter = true;\r\n    const filterData = {};\r\n\r\n    this.getKeys('data').forEach((key) => {\r\n      filterData[key] = this.data[key];\r\n    });\r\n    this.getKeys('perm').forEach((key) => {\r\n      filterData[key] = this.perm[key];\r\n    });\r\n\r\n    const filterDataKeys = Object.keys(filterData);\r\n    for (let i = 0; i < filterDataKeys.length; i++) {\r\n      const f = filterDataKeys[i];\r\n      if (!filterData[f] || filterData[f] === '') continue;\r\n      if (!metaData.dataTable[f] && f.search(/^_.+OR.+$/) === -1 && f !== 'commonFieldSearch')\r\n        continue;\r\n\r\n      // filter for SEARCH\r\n      if (f === 'commonFieldSearch') {\r\n        const fieldsArray = Object.keys(task);\r\n        for (let j = 0; j < fieldsArray.length; j++) {\r\n          const field = fieldsArray[j];\r\n          if (field === 'value') continue;\r\n          if (\r\n            field !== metaData.specificParameters.mainValue // && metaData.dataTable[field]?.type !== 'fulltext'\r\n          )\r\n            continue;\r\n          if (typeof task[field] !== 'string') continue;\r\n          filter = this.compare(filterData[f], task[field], true);\r\n          if (filter) break;\r\n        }\r\n      } else if (f.search(/^_(.+OR.+)$/) !== -1) {\r\n        const fieldsString = f.replace(/^_(.+OR.+)/, '$1');\r\n        const fieldsArray = fieldsString.split('OR');\r\n        for (let j = 0; j < fieldsArray.length; j++) {\r\n          const field = fieldsArray[j];\r\n          if (!metaData.dataTable[field]) continue;\r\n\r\n          if (metaData.dataTable[field].type === 'multi-select') {\r\n            const fieldsList = task[field].split(',');\r\n            for (let k = 0; k < fieldsList.length; k++) {\r\n              filter = this.compare(filterData[f], fieldsList[k]);\r\n              if (filter) break;\r\n            }\r\n          } else {\r\n            filter = this.compare(filterData[f], task[field]);\r\n          }\r\n          if (filter) break;\r\n        }\r\n      } else if (metaData.dataTable[f].type === 'multi-select') {\r\n        const fieldsList = task[f].split(',');\r\n        for (let k = 0; k < fieldsList.length; k++) {\r\n          filter = this.compare(filterData[f], fieldsList[k]);\r\n          if (filter) break;\r\n        }\r\n      } else {\r\n        filter = this.compare(filterData[f], task[f]);\r\n      }\r\n      if (!filter) break;\r\n    }\r\n    return filter;\r\n  };\r\n\r\n  // compare two direct values: filter and row data value\r\n  compare = (propertyValue, taskValue, asRegexp = 'false') => {\r\n    let filter = true;\r\n    if (typeof propertyValue === 'string') {\r\n      if (\r\n        propertyValue !== '' &&\r\n        taskValue &&\r\n        taskValue !== '' &&\r\n        taskValue.search(/\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/) !== -1\r\n      ) {\r\n        const date = taskValue.replace(/(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}/, '$1');\r\n\r\n        if (propertyValue !== date) filter = false;\r\n      } else if (taskValue && propertyValue !== '' && !asRegexp) {\r\n        if (propertyValue !== taskValue) filter = false;\r\n      } else if (taskValue && propertyValue !== '' && asRegexp) {\r\n        if (taskValue.search(new RegExp(propertyValue, 'i')) === -1) filter = false;\r\n      } else if ((!taskValue || taskValue === '') && propertyValue !== '') {\r\n        filter = false;\r\n      }\r\n    } else if (typeof propertyValue === 'number') {\r\n      if (propertyValue && propertyValue > 0 && propertyValue !== parseInt(taskValue, 10))\r\n        filter = false;\r\n    } else if (propertyValue && propertyValue.length > 0 && !propertyValue.includes(taskValue)) {\r\n      filter = false;\r\n    }\r\n\r\n    return filter;\r\n  };\r\n}\r\n\r\nexport const filters = new Filters({});\r\n\r\n/* universal filter function */\r\nexport function filterTasks() {\r\n  const dataTableShow = [];\r\n  dataTable.forEach((task) => {\r\n    const filter = filters.checkValue(task);\r\n    if (filter) dataTableShow.push(task);\r\n  });\r\n\r\n  return dataTableShow;\r\n}\r\n","import moment from 'moment';\r\nimport { metaData, dataTable } from '../config/data';\r\n\r\nexport default function getDefaultValues(id, property, metaTable, mode = 'defaultValue') {\r\n  const today = new Date();\r\n  let value;\r\n  switch (metaTable[property][mode]) {\r\n    case 'date':\r\n      value = moment(today, 'YYYY-MM-DD').format('YYYY-MM-DD');\r\n      break;\r\n    case 'time':\r\n      value = moment(today, 'YYYY-MM-DD').format('HH:mm:00');\r\n      break;\r\n    case 'datetime':\r\n      value = moment(today, 'YYYY-MM-DD').format('YYYY-MM-DD HH:mm:00');\r\n      break;\r\n    case 'empty':\r\n      value = undefined;\r\n      break;\r\n    default:\r\n      if (metaTable[property][mode].search(/object:/) !== -1) {\r\n        const inputData = metaTable[property][mode].split(',');\r\n        const objectKey = inputData[0].split(':')[1];\r\n        const objectValue = inputData[1].split(':')[1];\r\n        if (objectKey === 'data') {\r\n          value = dataTable[id][objectValue];\r\n        } else if (objectKey === 'meta') {\r\n          value = metaData[objectValue];\r\n        }\r\n      } else {\r\n        value = metaTable[property][mode];\r\n      }\r\n\r\n      break;\r\n  }\r\n\r\n  return value;\r\n}\r\n","export const modes = [\r\n  { id: 'task', value: 'Задачи', realData: true },\r\n  { id: 'discussion', value: 'Совещания', realData: true },\r\n  { id: 'calendar', value: 'Календарь', realData: true },\r\n  { id: 'event', value: 'Изменения', realData: true },\r\n];\r\n\r\nexport const mainModes = modes.filter((e) => e.realData).map((e) => e.id);\r\n\r\nexport const urlApi = '/smisplan/cgi/api-smisplan-getInfo.pl';\r\nexport const TEST = true;\r\n","import React from 'react';\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\n\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FormatIndentDecreaseIcon from '@material-ui/icons/FormatIndentDecrease';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\n\r\nfunction CustomIcon(props) {\r\n  const size = props.size || '30px';\r\n  const fontSize = props.fontSize || 'medium';\r\n  const type = props.type ? props.type : 'material-ui';\r\n\r\n  const style = props.style || {};\r\n  style.padding = '0';\r\n  if (props.class === 'icn_arrow_left_fill') style.left = '-30px';\r\n\r\n  let color = 'default';\r\n  // if (props.class === 'icn_ok') { }\r\n  if (props.class === 'icn_cancel') {\r\n    color = 'secondary';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {type === 'material-ui' && (\r\n        <Tooltip title={props.tip ? props.tip : ''}>\r\n          <IconButton\r\n            className=\"icn\"\r\n            style={style}\r\n            color={color}\r\n            onClick={typeof props.action === 'function' ? props.action : null}\r\n          >\r\n            {props.class === 'icn_filter' && <FilterListIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_tasks_add' && <PlaylistAddIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_tasks_edit' && <EditIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_tasks_delete' && <DeleteIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_tasks_complete' && <CheckIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_ok' && (\r\n              <CheckCircleIcon style={{ color: 'green' }} fontSize={fontSize} />\r\n            )}\r\n            {props.class === 'icn_cancel' && <CancelIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_filterOff' && <VisibilityIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_print' && <PrintIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_right' && <ArrowRightIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_left' && <ArrowLeftIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_down' && <ArrowDropDownIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_up' && <ArrowDropUpIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_right_fill' && <DoubleArrowIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_arrow_left_fill' && <ChevronLeftIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_description' && <DescriptionIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_comment' && <CommentIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_settings' && <SettingsIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_menu' && <MenuIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_group' && <FormatIndentDecreaseIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_secDataList' && <AccountTreeIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_secDataListCollapse' && <ArrowDropUpIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_question' && <ContactSupportIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_moreH' && <MoreHorizIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_moreV' && <MoreVertIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_meeeting' && <GroupAddIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_discussion' && <HowToRegIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_notification' && <NotificationsActiveIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_search' && <SearchIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_clear' && <ClearIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_download' && <CloudUploadIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_save' && <SaveIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_save_doc' && <AssignmentIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_attachment' && <AttachmentIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_chief' && <RecordVoiceOverIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_discussionList' && <ViewListIcon fontSize={fontSize} />}\r\n            {props.class === 'icn_discussionCopy' && <AddToPhotosIcon fontSize={fontSize} />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      {type === 'link' && (\r\n        <a\r\n          href={props.href}\r\n          target=\"_blank\"\r\n          title={props.tip ? props.tip : ''}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div\r\n            style={{ width: size, height: size, display: 'inline-block' }}\r\n            onClick={props.action}\r\n            onKeyPress={() => {}}\r\n            className={props.class}\r\n            role=\"link\"\r\n            aria-label=\"link\"\r\n            tabIndex={0}\r\n          />\r\n        </a>\r\n      )}\r\n      {type !== 'link' && type !== 'material-ui' && (\r\n        <div\r\n          style={{ width: size, height: size, display: 'inline-block' }}\r\n          onClick={props.action}\r\n          onKeyPress={() => {}}\r\n          className={props.class}\r\n          role=\"button\"\r\n          aria-label=\"button\"\r\n          tabIndex={0}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(CustomIcon);\r\n","import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport { urlApi } from '../config/constants';\r\n\r\nconst user = require('../config/dummyData/user.json');\r\nconst developers = require('../config/dummyData/developers.json');\r\nconst projects = require('../config/dummyData/projects.json');\r\n\r\nconst metaData = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\nmetaData.task = require('../config/dummyData/task_meta.json');\r\nmetaData.discussion = require('../config/dummyData/discussion_meta.json');\r\nmetaData.calendar = require('../config/dummyData/calendar_meta.json');\r\nmetaData.event = require('../config/dummyData/event_meta.json');\r\n\r\nconst data = {\r\n  task: null,\r\n  discussion: null,\r\n  calendar: null,\r\n  event: null,\r\n};\r\n\r\ndata.task = require('../config/dummyData/task.json');\r\ndata.discussion = require('../config/dummyData/discussion.json');\r\ndata.calendar = require('../config/dummyData/calendar.json');\r\ndata.event = require('../config/dummyData/event.json');\r\n\r\nconst mock = new MockAdapter(axios, { delayResponse: 100 });\r\n\r\nexport default function setMockAdapter() {\r\n  // get basic information\r\n  mock.onGet(`${urlApi}/user/`).reply(200, user);\r\n\r\n  mock.onGet(`${urlApi}/developer/`).reply(200, developers);\r\n\r\n  mock.onGet(`${urlApi}/project/`).reply(200, projects);\r\n\r\n  // get meta data information\r\n  mock.onGet(`${urlApi}/task-meta/`).reply(200, metaData.task);\r\n\r\n  mock.onGet(`${urlApi}/discussion-meta/`).reply(200, metaData.discussion);\r\n\r\n  mock.onGet(`${urlApi}/calendar-meta/`).reply(200, metaData.calendar);\r\n\r\n  mock.onGet(`${urlApi}/event-meta/`).reply(200, metaData.event);\r\n\r\n  // get data\r\n  mock.onGet(`${urlApi}/task/`).reply(200, data.task);\r\n\r\n  mock.onGet(`${urlApi}/discussion/`).reply(200, data.discussion);\r\n\r\n  mock.onGet(`${urlApi}/calendar/`).reply(200, data.calendar);\r\n\r\n  mock.onGet(`${urlApi}/event/`).reply(200, data.event);\r\n\r\n  // put data\r\n  mock.onPut(`${urlApi}/task/`).reply(200, { status: 'OK', error: '', data: { id: 777 } });\r\n\r\n  mock.onPut(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '', data: { id: 777 } });\r\n\r\n  // patch data\r\n  mock.onPatch(`${urlApi}/task/`).reply(200, { status: 'OK', error: '', data: {} });\r\n\r\n  mock.onPatch(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '', data: {} });\r\n\r\n  // delete data\r\n  mock.onDelete(`${urlApi}/task/`).reply(200, { status: 'OK', error: '' });\r\n\r\n  mock.onDelete(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '' });\r\n\r\n  // post data\r\n  mock.onPost(`${urlApi}/task/`).reply(200, { status: 'OK', error: '' });\r\n\r\n  mock.onPost(`${urlApi}/discussion/`).reply(200, { status: 'OK', error: '' });\r\n}\r\n","import axios from 'axios';\r\nimport storage from '../storages/commonStorage';\r\nimport { metaData, dataTable, resetDataTable } from '../config/data';\r\nimport { filters } from './filters';\r\nimport { urlApi, TEST, mainModes } from '../config/constants';\r\nimport setMockAdapter from './apiMockAdapter';\r\n\r\nsetMockAdapter();\r\n\r\naxios.defaults.headers.get['Content-Type'] = 'application/json';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.headers.put['Content-Type'] = 'application/json';\r\naxios.defaults.headers.patch['Content-Type'] = 'application/json';\r\naxios.defaults.headers.delete['Content-Type'] = 'application/json';\r\n\r\nclass Api {\r\n  static async getUser() {\r\n    return axios.get(`${urlApi}/user/`).then(Api._handleApiResult.bind(null, 'getUser'));\r\n  }\r\n\r\n  static async getProject() {\r\n    return axios.get(`${urlApi}/project/`).then(Api._handleApiResult.bind(null, 'getProject'));\r\n  }\r\n\r\n  static async getDeveloper() {\r\n    return axios.get(`${urlApi}/developer/`).then(Api._handleApiResult.bind(null, 'getDeveloper'));\r\n  }\r\n\r\n  static async getMetaData(mode) {\r\n    return axios\r\n      .get(`${urlApi}/${mode.replace('_', '-')}/`)\r\n      .then(Api._handleApiResult.bind(null, 'getMetaData'));\r\n  }\r\n\r\n  static async getData(mode) {\r\n    return axios.get(`${urlApi}/${mode}/`).then(Api._handleApiResult.bind(null, 'getData'));\r\n  }\r\n\r\n  static async putData(mode, body) {\r\n    return axios.put(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'putData'));\r\n  }\r\n\r\n  static async patchData(mode, body) {\r\n    return axios\r\n      .patch(`${urlApi}/${mode}/`, body)\r\n      .then(Api._handleApiResult.bind(null, 'patchData'));\r\n  }\r\n\r\n  static async deleteData(mode, body) {\r\n    return axios\r\n      .delete(`${urlApi}/${mode}/`, body)\r\n      .then(Api._handleApiResult.bind(null, 'deleteData'));\r\n  }\r\n\r\n  static async postData(mode, body) {\r\n    return axios.post(`${urlApi}/${mode}/`, body).then(Api._handleApiResult.bind(null, 'postData'));\r\n  }\r\n\r\n  static _handleApiResult(fnName, res) {\r\n    console.log(res);\r\n    if (TEST) {\r\n      return res.data.data;\r\n    }\r\n\r\n    if (res.data.status !== 'OK') {\r\n      storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'fail', message: 'Ошибка' });\r\n      console.error(`Ошибка запроса: ${res.data.error}`);\r\n    }\r\n\r\n    if (!['OK', 'Created', 'No Content'].includes(res.statusText)) {\r\n      storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'fail', message: 'Ошибка' });\r\n      console.error(`Ошибка HTTP:  + ${res.statusText}`);\r\n    }\r\n\r\n    return ['OK', 'Created', 'No Content'].includes(res.statusText)\r\n      ? res.data\r\n      : Error(`Ошибка получения результата в ${fnName}: ${res.status} ${res.statusText}`);\r\n  }\r\n}\r\n\r\n/* get meta/data etc function */\r\n// eslint-disable-next-line consistent-return\r\nexport const getData = async (mode, type = 'initialize') => {\r\n  if (mode === 'user') {\r\n    const result = await Api.getUser();\r\n\r\n    if (result !== 'ERROR') {\r\n      metaData.user = result;\r\n      metaData.login = result.login;\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  if (mode === 'project' || mode === 'developer') {\r\n    let result;\r\n    if (mode === 'project') result = await Api.getProject();\r\n    if (mode === 'developer') result = await Api.getDeveloper();\r\n\r\n    if (result !== 'ERROR') {\r\n      metaData[`${mode}List`] = {};\r\n      result.forEach((info) => {\r\n        metaData[`${mode}List`][info.id] = { id: info.id, value: info.value };\r\n      });\r\n\r\n      return metaData[`${mode}List`];\r\n    }\r\n\r\n    if (!metaData[`${mode}List`] || Object.keys(metaData[`${mode}List`]).length === 0) {\r\n      throw new Error('Data not uploaded');\r\n    }\r\n  }\r\n\r\n  if (mainModes.map((m) => `${m}_meta`).includes(mode)) {\r\n    if (!metaData.tables[mode]) {\r\n      const result = await Api.getMetaData(mode);\r\n\r\n      if (result !== 'ERROR') {\r\n        metaData.tables[mode] = {};\r\n        metaData.tables[mode].dataTable = {};\r\n\r\n        result.forEach((infoR) => {\r\n          const infoKey = Object.keys(infoR)[0];\r\n          const info = Object.values(infoR)[0];\r\n\r\n          Object.keys(info).forEach((key) => {\r\n            if (metaData.mobile && typeof info.showInTableMobile !== 'undefined')\r\n              info.showInTable = info.showInTableMobile;\r\n\r\n            if (info[key] === 'true') info[key] = true;\r\n            if (info[key] === 'false') info[key] = false;\r\n          });\r\n\r\n          if (infoKey === 'specificParameters') {\r\n            metaData.tables[mode][infoKey] = info;\r\n          } else if (typeof info.validValues !== 'undefined' && info.validValues !== '') {\r\n            metaData.tables[mode][`${info.id}List`] = info.validValues;\r\n          } else if (\r\n            (typeof info.validValues === 'undefined' || info.validValues === '') &&\r\n            (info.type === 'select' || info.type === 'multi-select') &&\r\n            info.vocabulary &&\r\n            metaData[`${info.vocabulary}List`]\r\n          ) {\r\n            metaData.tables[mode][`${info.id}List`] = metaData[`${info.vocabulary}List`];\r\n          }\r\n\r\n          if (infoKey !== 'specificParameters') {\r\n            metaData.tables[mode].dataTable[info.id] = info;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (metaData.tables[mode] && mode === `${metaData.dataTableName}_meta`) {\r\n      Object.keys(metaData.tables[mode]).forEach((key) => {\r\n        metaData[key] = metaData.tables[mode][key];\r\n      });\r\n      resetDataTable();\r\n    }\r\n\r\n    Object.keys(metaData.dataTable).forEach((prop) => {\r\n      const propInfo = metaData.dataTable[prop];\r\n      if (\r\n        (propInfo.type === 'select' || propInfo.type === 'multi-select') &&\r\n        !metaData[`${prop}List`] &&\r\n        propInfo.vocabulary &&\r\n        metaData[`${propInfo.vocabulary}List`]\r\n      ) {\r\n        metaData[`${prop}List`] = metaData[`${propInfo.vocabulary}List`];\r\n      }\r\n    });\r\n\r\n    filters.setKeys(metaData.dataTable);\r\n  }\r\n\r\n  const data = [];\r\n  if (mainModes.includes(mode)) {\r\n    const result = await Api.getData(mode);\r\n\r\n    if (result !== 'ERROR') {\r\n      if (type === 'initialize') resetDataTable();\r\n\r\n      for (let i = 0; i < result.length; i++) {\r\n        const info = result[i];\r\n\r\n        try {\r\n          info.id = parseInt(info.id, 10);\r\n        } catch (e) {\r\n          console.error('Ошибка: невозможно поле id сделать integer');\r\n        }\r\n\r\n        if (type === 'meta') {\r\n          if (!metaData[`${mode}List`]) metaData[`${mode}List`] = {};\r\n          metaData[`${mode}List`][info.id] = info;\r\n        } else if (type === 'initialize') {\r\n          dataTable.push(info);\r\n        } else if (type === 'direct') {\r\n          data.push(info);\r\n        }\r\n      }\r\n\r\n      if (type === 'direct') {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/* put/delete/patch data */\r\nexport const doData = async (mode, data, id, feature = 'task') => {\r\n  let json = {};\r\n  let error = true;\r\n\r\n  if (!['put', 'delete', 'patch', 'notify'].includes(mode)) {\r\n    console.error(`Mode [${mode}] is not available`);\r\n  } else {\r\n    try {\r\n      const body = {\r\n        feature,\r\n        data: { data, id },\r\n      };\r\n\r\n      let result;\r\n      if (mode === 'put') result = await Api.putData(feature, body);\r\n      if (mode === 'patch') result = await Api.patchData(feature, body);\r\n      if (mode === 'delete') result = await Api.deleteData(feature, body);\r\n      if (mode === 'notify') result = await Api.postData(feature, { ...body, method: mode });\r\n\r\n      json = result;\r\n      if (result !== 'ERROR') {\r\n        error = false;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Unexpected error ${err}`); // Failed to fetch\r\n    }\r\n  }\r\n\r\n  return [error, json];\r\n};\r\n\r\n/* file uploader function */\r\nexport async function fileUpload(file) {\r\n  const urlUploadApi = '/smisplan/cgi/upload.pl';\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  let json = {};\r\n  let error = true;\r\n  try {\r\n    const response = await fetch(urlUploadApi, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (response && response.ok) {\r\n      json = await response.json();\r\n\r\n      if (json.status === 'OK') {\r\n        error = false;\r\n      } else if (json.error) {\r\n        console.log(`Ошибка запроса: ${json.error}`);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(`Unexpected error ${err}`); // Failed to fetch\r\n  }\r\n\r\n  return [json, error];\r\n}\r\n","import React from 'react';\r\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\r\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\r\n\r\nimport storage from '../../storages/commonStorage';\r\nimport { modes, mainModes } from '../../config/constants';\r\nimport { filters } from '../../utils/filters';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `modes-tab-${index}`,\r\n    'aria-controls': `modes-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction HeaderModes({ reloadDataTable }) {\r\n  const hostpath = window.location.href.search(/localhost:3000/) !== -1 ? '' : 'smisplan';\r\n\r\n  const getMode = (pathname) => {\r\n    const pathArray = pathname.split('/').slice(1);\r\n    if (pathArray[0] === hostpath) pathArray.shift();\r\n\r\n    return pathArray[0];\r\n  };\r\n\r\n  const tableName = getMode(document.location.pathname);\r\n\r\n  const [value, setValue] = React.useState(\r\n    `${hostpath && `/${hostpath}`}/${mainModes.includes(tableName) ? tableName : 'task'}`\r\n  );\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    const mode = getMode(newValue);\r\n\r\n    filters.clearAll();\r\n    reloadDataTable(mode);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscribe = () => {\r\n      storage.table.subscribe(() => {\r\n        const storageTableName = storage.table.getState().TABLE.tableName;\r\n        if (storageTableName) {\r\n          setValue(`${hostpath && `/${hostpath}`}/${storageTableName}`);\r\n        }\r\n      });\r\n    };\r\n\r\n    subscribe();\r\n    return subscribe();\r\n  }, [hostpath]);\r\n\r\n  return (\r\n    <AppBar position=\"static\" className=\"header-modes-projects__bar\" color=\"default\">\r\n      <Route\r\n        path=\"/\"\r\n        render={() => (\r\n          <>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"on\"\r\n              aria-label=\"scrollable auto tabs example\"\r\n            >\r\n              {modes.map((mode, index) => (\r\n                <Tab\r\n                  className=\"header-modes-projects__modes-item\"\r\n                  label={mode.value}\r\n                  {...a11yProps(index)}\r\n                  key={mode.id}\r\n                  disabled={mode.disabled}\r\n                  value={`${hostpath && `/${hostpath}`}/${mode.id}`}\r\n                  to={`${hostpath && `/${hostpath}`}/${mode.id}`}\r\n                  component={Link}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n            <Switch>\r\n              {modes.map((mode) => (\r\n                <Route path={`${hostpath && `/${hostpath}`}/${mode.id}`} key={`Link-${mode.id}`} />\r\n              ))}\r\n              <Redirect to={`${hostpath && `/${hostpath}`}/${tableName}`} />\r\n            </Switch>\r\n          </>\r\n        )}\r\n      />\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default React.memo(HeaderModes);\r\n","import React from 'react';\r\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\r\n\r\nimport { filters } from '../../utils/filters';\r\nimport { getData } from '../../utils/api';\r\nimport storage from '../../storages/commonStorage';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `projects-tab-${index}`,\r\n    'aria-controls': `projects-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction HeaderProjects({ dataTable, projectList }) {\r\n  const [value, setValue] = React.useState(0);\r\n  const [projects, setProjects] = React.useState(Object.values(projectList || {}));\r\n\r\n  const reloadActiveProjects = () => {\r\n    const projectsHash = {};\r\n\r\n    dataTable.forEach((data) => {\r\n      projectsHash[data.project] = true;\r\n    });\r\n    const projectsActive = {};\r\n    const projectsOther = {};\r\n\r\n    Object.keys(projectList).forEach((project) => {\r\n      const projectInfo = { ...projectList[project] };\r\n\r\n      if (projectsHash[project] && !projectsActive[project]) {\r\n        projectInfo.showAsDisabled = false;\r\n        projectsActive[project] = projectInfo;\r\n      }\r\n\r\n      if (!projectsHash[project] && !projectsOther[project]) {\r\n        projectInfo.showAsDisabled = true;\r\n        projectsOther[project] = projectInfo;\r\n      }\r\n    });\r\n\r\n    const projectsReloaded = [];\r\n    Object.values(projectsActive)\r\n      .sort((a, b) => (a.value >= b.value ? 1 : -1))\r\n      .map((project) => projectsReloaded.push(project));\r\n    Object.values(projectsOther)\r\n      .sort((a, b) => (a.value >= b.value ? 1 : -1))\r\n      .map((project) => projectsReloaded.push(project));\r\n\r\n    setProjects(projectsReloaded);\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    filters.setValue('data', 'project', newValue === 0 ? '' : projects[newValue - 1].id);\r\n\r\n    storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n    setValue(newValue);\r\n  };\r\n\r\n  const unsubscribe = storage.state.subscribe(() => {\r\n    const { dataLoading } = storage.state.getState().STATE;\r\n\r\n    if (dataLoading && dataLoading === 'data') {\r\n      setValue(0);\r\n      reloadActiveProjects();\r\n    }\r\n  });\r\n\r\n  const unsubscribeUpd = storage.upd.subscribe(() => {\r\n    if (storage.upd.getState().UPD.update) {\r\n      reloadActiveProjects();\r\n    }\r\n  });\r\n\r\n  const unsubscribeData = storage.data.subscribe(() => {\r\n    const { redraw } = storage.data.getState().DATA;\r\n    if (redraw && (!filters.data.project || filters.data.project === '') && value > 0) {\r\n      setValue(0);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    getData('project').then((list) => setProjects(Object.values(list)));\r\n\r\n    unsubscribe();\r\n    unsubscribeUpd();\r\n    unsubscribeData();\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      unsubscribeUpd();\r\n      unsubscribeData();\r\n    };\r\n  }, []);\r\n\r\n  const classes = {};\r\n\r\n  return (\r\n    <AppBar position=\"static\" className=\"header-modes-projects__bar\" color=\"default\">\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"on\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab\r\n          label=\"Все\"\r\n          {...a11yProps(0)}\r\n          key=\"all\"\r\n          classes={{ root: classes.tabStyles }}\r\n          className=\"header-modes-projects__modes-item\"\r\n        />\r\n\r\n        {projects.map((project, index) => (\r\n          <Tab\r\n            label={project.value}\r\n            {...a11yProps(index + 1)}\r\n            key={project.id}\r\n            disabled={project.showAsDisabled}\r\n            classes={{ root: classes.tabStyles }}\r\n            className=\"header-modes-projects__modes-item\"\r\n          />\r\n        ))}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default React.memo(HeaderProjects);\r\n","import React from 'react';\r\n\r\nimport HeaderModes from './HeaderModes';\r\nimport HeaderProjects from './HeaderProjects';\r\nimport './Header.css';\r\n\r\nfunction Header({ dataTable, projectList, reloadDataTable }) {\r\n  return (\r\n    <div className=\"header-modes-projects\">\r\n      <HeaderModes reloadDataTable={reloadDataTable} />\r\n      <HeaderProjects className=\"divProjectList\" dataTable={dataTable} projectList={projectList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import React from 'react';\r\nimport { MenuItem, Checkbox } from '@material-ui/core';\r\nimport { filters } from '../utils/filters';\r\n\r\nfunction MenuItemsList({ itemsList, name, onChange, hasStartCheckbox, checkFunction }) {\r\n  return itemsList.map((item) => {\r\n    const handleItemClick = onChange.bind(null, item.id);\r\n    return (\r\n      <MenuItem\r\n        key={`menu-${name}-${item.id}`}\r\n        style={{ backgroundColor: filters.data[name] === item.id ? 'var(--color-active)' : '' }}\r\n        onClick={handleItemClick}\r\n      >\r\n        {hasStartCheckbox && (\r\n          <Checkbox\r\n            className=\"menu-item-settings__menu-checkbox\"\r\n            edge=\"start\"\r\n            checked={checkFunction(item.id)}\r\n            tabIndex={-1}\r\n            disableRipple\r\n          />\r\n        )}\r\n        {item.value}\r\n      </MenuItem>\r\n    );\r\n  });\r\n}\r\n\r\nexport default React.memo(MenuItemsList);\r\n","import React from 'react';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\n\r\nimport { metaData } from '../../config/data';\r\nimport storage from '../../storages/commonStorage';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport MenuItemsList from '../../SharedComponents/MenuItemsList';\r\nimport './MenuItemSettings.css';\r\n\r\nfunction MenuItemSettings(props) {\r\n  const [menuEl, setMenuEl] = React.useState(null);\r\n  const [menuElColors, setMenuElColors] = React.useState(null);\r\n  const [menuElColumns, setMenuElColumns] = React.useState(null);\r\n  const [checkedElSubList, setCheckedElSubList] = React.useState([]);\r\n\r\n  const unsubscribe = storage.state.subscribe(() => {\r\n    const { dataLoading } = storage.state.getState().STATE;\r\n    if (dataLoading && dataLoading === 'data') {\r\n      setCheckedElSubList(\r\n        Object.keys(metaData.dataTable).filter((k) => metaData.dataTable[k].showInTable)\r\n      );\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    unsubscribe();\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleChangeColor = (filter) => {\r\n    const root = document.documentElement;\r\n\r\n    const colorIcons = getComputedStyle(root).getPropertyValue(`--icons-filter-${filter}`);\r\n    root.style.setProperty('--icons-filter', colorIcons);\r\n    const colorHover = getComputedStyle(root).getPropertyValue(`--hover-filter-${filter}`);\r\n    root.style.setProperty('--hover-filter', colorHover);\r\n\r\n    setMenuElColors(null);\r\n    setMenuEl(null);\r\n  };\r\n\r\n  // const handleChangeColumns = (id) => () => {\r\n  const handleChangeColumns = (id) => {\r\n    let checkedElSubListNew = [];\r\n    if (checkedElSubList.includes(id)) {\r\n      metaData.dataTable[id].showInTable = false;\r\n      checkedElSubListNew = checkedElSubList.filter((a) => a !== id);\r\n    } else {\r\n      metaData.dataTable[id].showInTable = true;\r\n      checkedElSubListNew = checkedElSubList.concat(id);\r\n    }\r\n\r\n    storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'meta' });\r\n\r\n    setCheckedElSubList(checkedElSubListNew);\r\n    setMenuElColumns(null);\r\n    setMenuEl(null);\r\n  };\r\n\r\n  const openMenuItem = (cb) => (e) => cb(e.currentTarget);\r\n  const closeMenuItem = (cb, item) => () => cb(item);\r\n\r\n  const colorsList = [\r\n    { id: 'standart', value: 'Стандaртная схема' },\r\n    { id: 'red', value: 'Красная схема' },\r\n    { id: 'blue', value: 'Синяя схема' },\r\n  ];\r\n  const columnsList = Object.values(metaData.dataTable)\r\n    .filter((a) => a.value && a.value !== '')\r\n    .sort((a, b) => (a.value >= b.value ? 1 : -1));\r\n\r\n  return (\r\n    <div>\r\n      <CustomIcon\r\n        class=\"icn_settings\"\r\n        tip=\"Опции и настройки\"\r\n        fontSize=\"large\"\r\n        action={openMenuItem(setMenuEl)}\r\n      />\r\n      <Menu\r\n        anchorEl={menuEl}\r\n        keepMounted\r\n        open={!!menuEl}\r\n        onClose={closeMenuItem(setMenuEl, null)}\r\n        className=\"menu-item-settings\"\r\n      >\r\n        {/* Colors menu - START */}\r\n        <MenuItem className=\"menu-item-settings__item\" onClick={openMenuItem(setMenuElColors)}>\r\n          <div>Цветовая схема</div>\r\n          <ArrowRight fontSize=\"medium\" />\r\n        </MenuItem>\r\n        <Menu\r\n          anchorEl={menuElColors}\r\n          keepMounted\r\n          open={!!menuElColors}\r\n          onClose={closeMenuItem(setMenuElColors, null)}\r\n          className=\"menu-item-settings__item-menu\"\r\n        >\r\n          <MenuItemsList itemsList={colorsList} name={props.name} onChange={handleChangeColor} />\r\n        </Menu>\r\n\r\n        {/* Columns menu - START */}\r\n        <MenuItem className=\"menu-item-settings__item\" onClick={openMenuItem(setMenuElColumns)}>\r\n          <div>Колонки</div>\r\n          <ArrowRight fontSize=\"medium\" />\r\n        </MenuItem>\r\n        <Menu\r\n          anchorEl={menuElColumns}\r\n          keepMounted\r\n          open={!!menuElColumns}\r\n          onClose={closeMenuItem(setMenuElColumns, null)}\r\n          className=\"menu-item-settings__item-menu\"\r\n        >\r\n          <MenuItemsList\r\n            itemsList={columnsList}\r\n            name={props.name}\r\n            onChange={handleChangeColumns}\r\n            hasStartCheckbox\r\n            checkFunction={(e) => checkedElSubList.includes(e)}\r\n          />\r\n        </Menu>\r\n\r\n        <MenuItem key=\"manual\" onClick={closeMenuItem(setMenuEl, null)}>\r\n          <div className=\"menu-item-settings__item\">Инструкция</div>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuItemSettings;\r\n","import React from 'react';\r\nimport { Menu, MenuItem, ListItemIcon, Typography } from '@material-ui/core';\r\n\r\nimport { filters } from '../../utils/filters';\r\nimport { doData } from '../../utils/api';\r\nimport storage from '../../storages/commonStorage';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport DateW from '../../utils/date';\r\nimport './MenuItemChief.css';\r\n\r\nfunction MenuItemChief(props) {\r\n  const [menuEl, setMenuEl] = React.useState(null);\r\n\r\n  const currentDate = new DateW();\r\n  const currentWeek = currentDate.getWeek();\r\n\r\n  const handleOpenMenuEl = (e) => setMenuEl(e.currentTarget);\r\n  const handleCloseMenuEl = () => setMenuEl(null);\r\n\r\n  const sendNotification = () => {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт отправка уведомлений...',\r\n    });\r\n    const data = {\r\n      week: `${currentDate.getFullYear()}.${currentWeek + (currentDate.getDay() >= 5 ? 1 : 0)}`,\r\n      mode: 'done',\r\n      feature: 'discussion',\r\n    };\r\n    doData('notify', data, undefined, 'notification').then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при отправке уведомления',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Уведомление послано успешно',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const goToCurrentWeekDiscussion = () => {\r\n    const loadTableName = 'discussion';\r\n\r\n    props.reloadDataTable(loadTableName, () => {\r\n      filters.data.week = `${currentDate.getFullYear()}.${\r\n        currentWeek + (currentDate.getDay() >= 5 ? 1 : 0)\r\n      }`;\r\n    });\r\n  };\r\n\r\n  const handleClickItem = (menuItem) => () => {\r\n    if (menuItem === 'notification') {\r\n      sendNotification();\r\n    } else if (menuItem === 'discussion') {\r\n      goToCurrentWeekDiscussion();\r\n    }\r\n    setMenuEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CustomIcon\r\n        class={props.class}\r\n        tip=\"Для начальника\"\r\n        fontSize=\"large\"\r\n        action={handleOpenMenuEl}\r\n      />\r\n\r\n      <Menu\r\n        id={`filter-menu-id-${props.name}`}\r\n        anchorEl={menuEl}\r\n        keepMounted\r\n        open={Boolean(menuEl)}\r\n        onClose={handleCloseMenuEl}\r\n        className=\"menu-item-chief\"\r\n      >\r\n        <MenuItem key={`menu-${props.name}-discussion`} onClick={handleClickItem('discussion')}>\r\n          <ListItemIcon>\r\n            <CustomIcon class=\"icn_discussionList\" tip=\"Перейти к списку расписаний на неделю\" />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\" noWrap>\r\n            Расписание обсуждений\r\n          </Typography>\r\n        </MenuItem>\r\n\r\n        <MenuItem key={`menu-${props.name}-notification`} onClick={handleClickItem('notification')}>\r\n          <ListItemIcon>\r\n            <CustomIcon\r\n              class=\"icn_notification\"\r\n              tip=\"Отправить оповещения об обсуждениях на текущей неделе\"\r\n            />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\" noWrap>\r\n            Уведомление об обсуждениях\r\n          </Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MenuItemChief);\r\n","import React from 'react';\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nimport { filters } from '../../utils/filters';\r\nimport { getData } from '../../utils/api';\r\nimport MenuItemSettings from '../MenuItemSettings/MenuItemSettings';\r\nimport MenuItemChief from '../MenuItemChief/MenuItemChief';\r\nimport storage from '../../storages/commonStorage';\r\nimport './HeaderLogin.css';\r\n\r\nfunction HeaderLogin({ reloadDataTable, dataRef }) {\r\n  const [username, setUsername] = React.useState('');\r\n  const _columnsListRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    getData('user').then((user) => setUsername(user.username));\r\n  }, []);\r\n\r\n  const filtersOff = () => {\r\n    filters.clear();\r\n    storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-login\">\r\n      <div className=\"header-login__menu\">\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Tooltip title=\"Распечатать\">\r\n              <IconButton className=\"icn\" style={{ padding: '0px' }}>\r\n                <PrintIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n          content={() => dataRef.current}\r\n        />\r\n\r\n        <MenuItemSettings ref={_columnsListRef} class=\"icn_filter\" name=\"MenuSettings\" />\r\n\r\n        <MenuItemChief class=\"icn_chief\" name=\"MenuChief\" reloadDataTable={reloadDataTable} />\r\n\r\n        <Tooltip title=\"Сбросить фильтры\">\r\n          <IconButton className=\"icn\" style={{ padding: '0px' }} onClick={filtersOff}>\r\n            <VisibilityIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n      <div className=\"header-login__login\">\r\n        <b>Логин</b>: {username}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(HeaderLogin);\r\n","import React from 'react';\r\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { filters } from '../../utils/filters';\r\nimport storage from '../../storages/commonStorage';\r\nimport './CheckboxListFilter.css';\r\n\r\nfunction CheckboxListFilter(props) {\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    if (value !== '') {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      filters.setValue('data', props.filterType, [...newChecked]);\r\n\r\n      storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n      setChecked(newChecked);\r\n    } else {\r\n      storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n      props.updateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <List dense className=\"checkbox-list-filter\">\r\n      {props.options.map((key) => {\r\n        const option = key !== 'divider' ? props.optionsMap[key] : null;\r\n        const labelId = key !== 'divider' ? `checkbox-list-label-${option.id}` : null;\r\n\r\n        return key !== 'divider' ? (\r\n          <ListItem\r\n            key={option.id}\r\n            role={undefined}\r\n            size=\"small\"\r\n            className=\"checkbox-list-filter__list-item\"\r\n            button\r\n            onClick={handleToggle(option.id)}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                className=\"checkbox-list-filter__checkbox\"\r\n                edge=\"start\"\r\n                checked={checked.includes(option.id)}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              id={labelId}\r\n              primary={`${option.value}`}\r\n              className=\"checkbox-list-filter__text\"\r\n            />\r\n          </ListItem>\r\n        ) : (\r\n          <Divider key=\"divider\" />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default React.memo(CheckboxListFilter);\r\n","import React from 'react';\r\nimport CheckboxListFilter from '../../SharedComponents/CheckboxListFilter/CheckboxListFilter';\r\n\r\nimport { filters } from '../../utils/filters';\r\nimport storage from '../../storages/commonStorage';\r\n\r\nexport default function DevelopersFilter({ inputFilter, developersList, metaData, dataTable }) {\r\n  const [developers, setDevelopers] = React.useState(developersList);\r\n\r\n  const resortActive = (developerList) => {\r\n    const activeDevsList = [];\r\n    if (dataTable) {\r\n      dataTable.forEach((row) => {\r\n        if (row.author && row.author !== '' && !activeDevsList.includes(row.author)) {\r\n          activeDevsList.push(row.author);\r\n        }\r\n        if (row.developer && row.developer !== '' && !activeDevsList.includes(row.developer)) {\r\n          activeDevsList.push(row.developer);\r\n        }\r\n      });\r\n    }\r\n\r\n    const activeDevs = {};\r\n    const nonActiveDevs = {};\r\n    if (Object.keys(developerList).length > 0) {\r\n      Object.keys(developerList).forEach((dev) => {\r\n        if (activeDevsList.includes(dev)) {\r\n          activeDevs[dev] = developerList[dev];\r\n        } else {\r\n          nonActiveDevs[dev] = developerList[dev];\r\n        }\r\n      });\r\n    }\r\n\r\n    return [activeDevs, nonActiveDevs];\r\n  };\r\n\r\n  const resortDevelopers = (inputDevelopers = metaData.developerList) => {\r\n    const sortedDevelopers = resortActive(inputDevelopers);\r\n\r\n    const outputDevelopers = [];\r\n    if (Object.keys(sortedDevelopers[0]).length > 0) {\r\n      Object.keys(sortedDevelopers[0])\r\n        .sort((a, b) => (sortedDevelopers[0][a].value >= sortedDevelopers[0][b].value ? 1 : -1))\r\n        .map((key) => outputDevelopers.push(key));\r\n      outputDevelopers.push('divider');\r\n      Object.keys(sortedDevelopers[1])\r\n        .sort((a, b) => (sortedDevelopers[1][a].value >= sortedDevelopers[1][b].value ? 1 : -1))\r\n        .map((key) => outputDevelopers.push(key));\r\n    } else if (Object.keys(sortedDevelopers[1]).length > 0) {\r\n      Object.keys(sortedDevelopers[1])\r\n        .sort((a, b) => (sortedDevelopers[1][a].value >= sortedDevelopers[1][b].value ? 1 : -1))\r\n        .map((key) => outputDevelopers.push(key));\r\n    } else {\r\n      Object.keys(inputDevelopers)\r\n        .sort((a, b) => (inputDevelopers[a].value >= inputDevelopers[b].value ? 1 : -1))\r\n        .map((key) => outputDevelopers.push(key));\r\n    }\r\n\r\n    return outputDevelopers;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = storage.state.subscribe(() => {\r\n      const { dataLoading } = storage.state.getState().STATE;\r\n      if (dataLoading && dataLoading === 'data') {\r\n        setDevelopers(resortDevelopers());\r\n      }\r\n\r\n      if (inputFilter) {\r\n        filters.setValue('data', 'developer', [inputFilter]);\r\n        storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n      }\r\n    });\r\n\r\n    const unsubscribeUpd = storage.upd.subscribe(() => {\r\n      if (storage.upd.getState().UPD.update) {\r\n        setDevelopers(resortDevelopers());\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      unsubscribeUpd();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <CheckboxListFilter\r\n      options={developers}\r\n      optionsMap={metaData.developerList}\r\n      inputFilter={inputFilter}\r\n      filterType=\"developer\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Drawer } from '@material-ui/core';\r\n\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport storage from '../../storages/commonStorage';\r\nimport DevelopersFilter from '../DevelopersFilter/DevelopersFilter';\r\nimport './MainLeftSide.css';\r\n\r\nfunction MainLeftSide({ developers, developer, metaData, dataTable }) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleOpen = (isOpened) => {\r\n    const root = document.documentElement;\r\n\r\n    const widthDefault = getComputedStyle(root).getPropertyValue('--width-left-side');\r\n    root.style.setProperty('--width-left-side-bottom', !isOpened ? '0px' : widthDefault);\r\n\r\n    setOpen(isOpened);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = storage.state.subscribe(() => {\r\n      const { dataLoading } = storage.state.getState().STATE;\r\n      if (dataLoading && dataLoading === 'data') {\r\n        if (['discussion', 'calendar'].includes(metaData.dataTableName)) {\r\n          handleOpen(false);\r\n        } else {\r\n          handleOpen(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleToggle = () => handleOpen(!open);\r\n\r\n  const developersList = Object.values(developers).map((d) => ({ id: d.id, value: d.value }));\r\n\r\n  return [\r\n    <Drawer\r\n      key=\"leftSideDrawer\"\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={open}\r\n      classes={{ paper: 'left-side-bar' }}\r\n    >\r\n      <DevelopersFilter\r\n        inputFilter={developer}\r\n        developersList={developersList}\r\n        metaData={metaData}\r\n        dataTable={dataTable}\r\n      />\r\n    </Drawer>,\r\n    <div key=\"showHideButton\" className=\"divSpacingBottom\">\r\n      <CustomIcon\r\n        class={`${open ? 'icn_arrow_left_fill' : 'icn_arrow_right_fill'}`}\r\n        tip={`${open ? 'Свернуть' : 'Показать'}`}\r\n        fontSize=\"large\"\r\n        action={handleToggle}\r\n        style={{ borderRadius: '0px' }}\r\n      />\r\n    </div>,\r\n  ];\r\n}\r\n\r\nexport default React.memo(MainLeftSide);\r\n","import CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function LoadingComponent() {\r\n  return (\r\n    <div style={{ textAlign: 'center', paddingTop: '200px' }}>\r\n      <CircularProgress style={{ width: '100px', height: '100px' }} />;\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nimport { filters, filterTasks } from '../../utils/filters';\r\nimport MenuItemsList from '../../SharedComponents/MenuItemsList';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\n\r\nfunction TblHeaderBtnMenu({ type, name, itemList, action, all, noClosed }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [filterField, setFilterField] = React.useState(filters.data[name]);\r\n\r\n  const handleClick = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n\r\n  const handleClickItem = (field, value) => {\r\n    if (type === 'filter') {\r\n      if (typeof itemList !== 'object' && ['datetime', 'date'].includes(itemList)) {\r\n        setFilterField(value);\r\n      }\r\n\r\n      if (value === 'all') {\r\n        filters.data = {};\r\n      } else if (value === 'noClosed' && typeof itemList === 'object') {\r\n        filters.data[field] = [];\r\n        Object.values(itemList)\r\n          .filter((item) => item.id !== 'done')\r\n          .forEach((item) => filters.data[field].push(item.id));\r\n      } else {\r\n        filters.data[field] = value;\r\n      }\r\n      action(filterTasks());\r\n    } else if (type === 'group') {\r\n      action(value);\r\n    }\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {type === 'filter' && <CustomIcon class=\"icn_filter\" tip=\"фильтр\" action={handleClick} />}\r\n      {type === 'group' && <CustomIcon class=\"icn_group\" tip=\"группировать\" action={handleClick} />}\r\n\r\n      <Menu\r\n        id={`filter-menu-id-${name}`}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        className=\"tbl-header-btn-menu\"\r\n      >\r\n        {all && <MenuItem onClick={() => handleClickItem(name, 'all')}>Все</MenuItem>}\r\n\r\n        {noClosed && name === 'status' && (\r\n          <MenuItem onClick={() => handleClickItem(name, 'noClosed')}>Все открытые</MenuItem>\r\n        )}\r\n\r\n        {typeof itemList === 'object' && (\r\n          <MenuItemsList\r\n            // itemsList={itemList}\r\n            itemsList={Object.values(itemList)}\r\n            name={name}\r\n            onChange={(item) => handleClickItem(name, itemList[item].id)}\r\n          />\r\n        )}\r\n\r\n        {typeof itemList !== 'object' && itemList === 'datetime' && (\r\n          <MenuItem>\r\n            <MuiPickersUtilsProvider\r\n              utils={MomentUtils}\r\n              style={{ width: '0px', margin: '0px', marginLeft: '-18px' }}\r\n              className=\"tbl-header-btn-menu__datepicker\"\r\n            >\r\n              <KeyboardDatePicker\r\n                format=\"YYYY-MM-DD\"\r\n                margin=\"normal\"\r\n                onChange={(property, value) => {\r\n                  handleClickItem(name, value);\r\n                }}\r\n                value={filterField}\r\n                style={{ width: '0px', margin: '0px', marginLeft: '-18px' }}\r\n                className=\"tbl-header-btn-menu__datepicker\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </MenuItem>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TblHeaderBtnMenu);\r\n","import React, { Fragment } from 'react';\r\nimport { TableRow, TableCell, TableSortLabel } from '@material-ui/core';\r\n\r\nimport TblHeaderBtnMenu from '../TblHeaderBtnMenu/TblHeaderBtnMenu';\r\nimport { metaData } from '../../config/data';\r\nimport { filters, filterTasks } from '../../utils/filters';\r\n\r\nconst getAdditionalCellProps = (props) => {\r\n  let hasAdditionalCell = false;\r\n  if (\r\n    props &&\r\n    (props.hasSpecAction ||\r\n      props.hasSpecNotes ||\r\n      props.hasEditMenu ||\r\n      props.hasDeleteButton ||\r\n      props.hasDoneButton)\r\n  ) {\r\n    hasAdditionalCell = true;\r\n  }\r\n\r\n  return hasAdditionalCell;\r\n};\r\n\r\nexport default class TblHeadEnhanced extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isHovered: '' };\r\n  }\r\n\r\n  setCoumnWidth = (headCells) => {\r\n    this.widths = {};\r\n    Object.keys(headCells).forEach((property) => {\r\n      if (headCells[property].showInTable) {\r\n        this.widths[property] = this.getColumnWidth(headCells[property]);\r\n      }\r\n    });\r\n\r\n    this.hasAdditionalCell = getAdditionalCellProps(metaData.specificParameters);\r\n  };\r\n\r\n  createSortHandler = (property) => (event) => {\r\n    const { onRequestSort } = this.props;\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  createGroupHandler = (property) => {\r\n    const { onRequestGroup, groupBy } = this.props;\r\n    onRequestGroup(undefined, groupBy === property ? '' : property);\r\n  };\r\n\r\n  handleDateFilter = (property, value) => {\r\n    const { onFilter } = this.props;\r\n    const state = {};\r\n    state[property] = value;\r\n    this.setState(state);\r\n\r\n    filters.setValue('data', property, value);\r\n    onFilter(filterTasks());\r\n  };\r\n\r\n  getColumnWidth = (headCell) => {\r\n    let width = '';\r\n    let headCellWidth = headCell.value.length * (window.innerWidth <= 1400 ? 8 : 10) + 24;\r\n    if (headCell.isFilter && !metaData.mobile) headCellWidth += 30;\r\n    if (headCell.isGroup && !metaData.mobile) headCellWidth += 30;\r\n    switch (headCell.type) {\r\n      case 'int':\r\n        width = headCellWidth > 45 ? `${headCellWidth}px` : '45px';\r\n        break;\r\n\r\n      case 'string':\r\n        if (!headCell.isInlineEditable && headCell.id !== 'theme') {\r\n          if (window.innerWidth <= 1400) {\r\n            width = headCellWidth > 90 ? `${headCellWidth}px` : '90px';\r\n          } else {\r\n            width = headCellWidth > 110 ? `${headCellWidth}px` : '110px';\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'select':\r\n        if (!headCell.isInlineEditable) {\r\n          if (window.innerWidth <= 1400) {\r\n            width = headCellWidth > 105 ? `${headCellWidth}px` : '105px';\r\n          } else {\r\n            width = headCellWidth > 120 ? `${headCellWidth}px` : '120px';\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'multi-select':\r\n        if (!headCell.isInlineEditable) {\r\n          if (window.innerWidth <= 1400) {\r\n            width = headCellWidth > 155 ? `${headCellWidth}px` : '155px';\r\n          } else {\r\n            width = headCellWidth > 170 ? `${headCellWidth}px` : '170px';\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'datetime':\r\n      case 'date':\r\n      case 'time':\r\n        if (!headCell.isInlineEditable) {\r\n          if (window.innerWidth <= 1400) {\r\n            width = headCellWidth > 80 ? `${headCellWidth}px` : '80px';\r\n          } else {\r\n            width = headCellWidth > 100 ? `${headCellWidth}px` : '100px';\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        width = '';\r\n    }\r\n    return width;\r\n  };\r\n\r\n  render() {\r\n    this.setCoumnWidth(metaData.dataTable);\r\n\r\n    const { order, orderBy, groupBy, headCells } = this.props;\r\n    const { isHovered } = this.state;\r\n    const sort = {};\r\n    this.props.sort.forEach((f) => {\r\n      sort[f.field] = f;\r\n    });\r\n\r\n    return (\r\n      <TableRow className=\"data-table__header-row\">\r\n        {Object.values(headCells)\r\n          .filter((a) => a.showInTable)\r\n          .sort((a, b) => (a.tableIndex >= b.tableIndex ? 1 : -1))\r\n          .map((headCell, index) => {\r\n            const filterVisibility =\r\n              isHovered === headCell.id ||\r\n              (filters.checkFilter(headCell.id) && filters.data[headCell.id] !== '')\r\n                ? 'visible'\r\n                : 'hidden';\r\n            const groupVisibility =\r\n              isHovered === headCell.id || (groupBy && groupBy === headCell.id)\r\n                ? 'visible'\r\n                : 'hidden';\r\n            const paddingLeft = index === 0 ? '10px' : '0px';\r\n            const minWidth = headCell.id === 'theme' ? '220px' : '';\r\n            const maxWidth = '';\r\n            const width = this.widths[headCell.id];\r\n            const filterList =\r\n              ['datetime', 'date'].indexOf(headCell.type) !== -1\r\n                ? 'datetime'\r\n                : metaData[`${headCell.id}List`];\r\n            const groupList = {};\r\n            if (headCell.isGroup) {\r\n              groupList[headCell.id] = { id: headCell.id, value: headCell.value };\r\n              if (headCell.type === 'date') {\r\n                groupList.week = { id: 'week', value: 'Неделя' };\r\n              }\r\n            }\r\n\r\n            return (\r\n              <Fragment key={headCell.id}>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  padding=\"none\"\r\n                  className=\"data-table__header-cell\"\r\n                  style={{ minWidth, width, maxWidth, paddingLeft }}\r\n                  onMouseEnter={() => this.setState({ isHovered: headCell.id })}\r\n                  onMouseLeave={() => this.setState({ isHovered: undefined })}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n                >\r\n                  <TableSortLabel\r\n                    active={!!sort[headCell.id]}\r\n                    direction={sort[headCell.id] ? sort[headCell.id].order : 'asc'}\r\n                    onClick={this.createSortHandler(headCell.id)}\r\n                  >\r\n                    {headCell.value}\r\n                    {sort[headCell.id] ? <span /> : null}\r\n                  </TableSortLabel>\r\n\r\n                  {headCell.isGroup && !metaData.mobile && (\r\n                    <div\r\n                      className={`data-table__pagination-button ${\r\n                        groupVisibility === 'visible' ? 'visible' : 'invisible'\r\n                      }`}\r\n                    >\r\n                      <TblHeaderBtnMenu\r\n                        class=\"icn_filter\"\r\n                        name={headCell.id}\r\n                        action={this.createGroupHandler}\r\n                        type=\"group\"\r\n                        itemList={groupList}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {headCell.isFilter && !metaData.mobile && (\r\n                    <div\r\n                      className={`data-table__pagination-button ${\r\n                        filterVisibility === 'visible' ? 'visible' : 'invisible'\r\n                      }`}\r\n                    >\r\n                      <TblHeaderBtnMenu\r\n                        class=\"icn_filter\"\r\n                        name={headCell.id}\r\n                        action={this.props.onFilter}\r\n                        all\r\n                        noClosed\r\n                        type=\"filter\"\r\n                        itemList={filterList}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </TableCell>\r\n                {headCell.isInlineEditable && headCell.type === 'string' && (\r\n                  <TableCell style={{ width: '10px' }} />\r\n                )}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        {this.hasAdditionalCell && <TableCell style={{ width: metaData.table ? '53px' : '1px' }} />}\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\n\r\nfunction TblHeaderSearch(props) {\r\n  const [search, setSearch] = React.useState('');\r\n\r\n  const clearSearch = () => {\r\n    setSearch('');\r\n    props.setSearch('');\r\n  };\r\n\r\n  const handleSearch = () => props.setSearch(search);\r\n  const handleChange = (e) => setSearch(e.target.value);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') handleSearch();\r\n    if (e.key === 'Escape') clearSearch();\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"Поиск\"\r\n      value={search}\r\n      inputProps={{ style: { fontSize: 'var(--font-size-table)', width: '200px' } }}\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <CustomIcon class=\"icn_search\" tip=\"Найти\" action={handleSearch} />\r\n        </InputAdornment>\r\n      }\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <CustomIcon class=\"icn_clear\" tip=\"Сбросить поиск\" action={clearSearch} />\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(TblHeaderSearch);\r\n","import { TablePagination, Tooltip, IconButton } from '@material-ui/core';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nexport default function TblHeaderPagination(props) {\r\n  const { count: countPages, page, rowsPerPage, onChangePage, onChangeRowsPerPage } = props;\r\n\r\n  const countTotal = Math.ceil(countPages / rowsPerPage);\r\n\r\n  const goToFirstPage = (e) => onChangePage(e, 0);\r\n  const goToPrevPage = (e) => onChangePage(e, page - 1);\r\n  const goToNextPage = (e) => onChangePage(e, page + 1);\r\n  const goToLastPage = (e) => onChangePage(e, countTotal - 1);\r\n\r\n  const TablePaginationActions = () => (\r\n    <div className=\"data-table__pagination-actions\">\r\n      <Tooltip title=\"Первая страница\" placement=\"bottom\" enterDelay={300}>\r\n        <IconButton\r\n          onClick={goToFirstPage}\r\n          disabled={page === 0}\r\n          aria-label=\"Первая\"\r\n          className=\"data-table__pagination-select\"\r\n        >\r\n          <FirstPageIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Предыдущая\" placement=\"bottom\" enterDelay={300}>\r\n        <IconButton\r\n          onClick={goToPrevPage}\r\n          disabled={page === 0}\r\n          aria-label=\"Предыдущая\"\r\n          className=\"data-table__pagination-select\"\r\n        >\r\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Следующая\" placement=\"bottom\" enterDelay={300}>\r\n        <IconButton\r\n          onClick={goToNextPage}\r\n          disabled={page >= countTotal - 1}\r\n          aria-label=\"Следующая\"\r\n          className=\"data-table__pagination-select\"\r\n        >\r\n          <KeyboardArrowRightIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Последняя страница\" placement=\"bottom\" enterDelay={300}>\r\n        <IconButton\r\n          onClick={goToLastPage}\r\n          disabled={page >= countTotal - 1}\r\n          aria-label=\"Последняя\"\r\n          className=\"data-table__pagination-select\"\r\n        >\r\n          <LastPageIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[50, 100, 200]}\r\n      component=\"div\"\r\n      count={countPages}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      // onChangePage={onChangePage}\r\n      // onChangeRowsPerPage={onChangeRowsPerPage}\r\n      onPageChange={onChangePage}\r\n      onRowsPerPageChange={onChangeRowsPerPage}\r\n      labelRowsPerPage=\"Выводить по\"\r\n      labelDisplayedRows={({ from, to, count }) => `${from}-${to} из ${count}`}\r\n      backIconButtonProps={{ style: { paddingTop: '0px', paddingBottom: '0px' } }}\r\n      nextIconButtonProps={{ style: { paddingTop: '0px', paddingBottom: '0px' } }}\r\n      classes={{\r\n        toolbar: 'data-table__pagination-toolbar',\r\n        select: 'data-table__pagination-select',\r\n      }}\r\n      className=\"data-table__pagination\"\r\n      ActionsComponent={TablePaginationActions}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport './PopupConfirmChoice.css';\r\n\r\n// Standart dialog: confirm with choice\r\nfunction PopupConfirmChoice(props) {\r\n  const { id, action, actionName, class: className } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [choice, setChoice] = React.useState(0);\r\n  const [options, setOptions] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (open) setOptions(props.options());\r\n  }, [open, props]);\r\n\r\n  const handleOk = () => {\r\n    action(id, choice);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleChange = (event) => {\r\n    const value = /^\\d+$/.test(event.target.value)\r\n      ? parseInt(event.target.value, 10)\r\n      : event.target.value;\r\n    setChoice(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomIcon class={className} tip={actionName} action={handleOpen} />\r\n\r\n      <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"dialog-title\" fullWidth>\r\n        <DialogTitle id=\"dialog-title\">Вы подтверждаете действие: {actionName} ?</DialogTitle>\r\n        <DialogContent>\r\n          <span className=\"popup-confirm-choice__content\">Действие невозможно отменить!</span>\r\n\r\n          <RadioGroup\r\n            aria-label=\"choice\"\r\n            name=\"choice\"\r\n            value={choice}\r\n            onChange={handleChange}\r\n            className=\"popup-confirm-choice__radio-group\"\r\n          >\r\n            {options.map((item) => (\r\n              <FormControlLabel\r\n                key={`modal-choice-${item.value}`}\r\n                value={item.value}\r\n                control={<Radio />}\r\n                label={item.name}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions className=\"popup-confirm-choice__actions\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={handleOk}\r\n            color=\"primary\"\r\n            className=\"MuiButton-outlinedOk\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Да\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={handleClose}\r\n            color=\"secondary\"\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Отмена\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(PopupConfirmChoice);\r\n","import { MenuItem, ListItemIcon, Typography, TableRow, TableCell } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport PopupConfirmChoice from '../PopupConfirmChoice/PopupConfirmChoice';\r\nimport DateW from '../../utils/date';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\n\r\nconst currentWeek = new DateW().getYearWeekStr();\r\n\r\nexport default function TblGroupRow(props) {\r\n  const weekOptionsChoice = () => {\r\n    const weekOptions = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      const weekObj = { value: i };\r\n\r\n      const weekDate = new Date();\r\n      weekDate.setDate(weekDate.getDate() + 7 * i);\r\n      const weekStr = `${moment(weekDate, 'YYYY-MM-DD')\r\n        .startOf('week')\r\n        .format('DD MMMM')} - ${moment(weekDate, 'YYYY-MM-DD')\r\n        .endOf('week')\r\n        .format('DD MMMM YYYY')} г`;\r\n\r\n      if (i === 0) {\r\n        weekObj.name = `Текущая неделя: ${weekStr}`;\r\n      } else if (i === 1) {\r\n        weekObj.name = `Следующая неделя: ${weekStr}`;\r\n      } else {\r\n        weekObj.name = `${i}-я неделя: ${weekStr}`;\r\n      }\r\n\r\n      weekOptions.push(weekObj);\r\n    }\r\n\r\n    return weekOptions;\r\n  };\r\n\r\n  const dayOptionsChoice = () => {\r\n    const dayOptions = [{ value: 0, name: 'Вся неделя' }];\r\n\r\n    props.weekData\r\n      .sort((a, b) => (a.date < b.date ? -1 : 1))\r\n      .foreEach((data) => {\r\n        if (!dayOptions.map((e) => e.value).includes(data.date)) {\r\n          const date = moment(data.date, 'YYYY-MM-DD');\r\n          dayOptions.push({ value: data.date, name: date.format('dddd, DD MMMM YYYY') });\r\n        }\r\n      });\r\n    return dayOptions;\r\n  };\r\n\r\n  const { fullColsNum, getDateGroup, row, groupBy, groupValue, groupHide } = props;\r\n  const showGrouped = groupHide[getDateGroup(row[groupBy])];\r\n  console.log(fullColsNum);\r\n  return (\r\n    <TableRow>\r\n      <TableCell\r\n        colSpan={props.tableName === 'discussion' ? fullColsNum - 4 : fullColsNum - 1}\r\n        className=\"data-table__row-title\"\r\n      >\r\n        <MenuItem\r\n          colSpan={fullColsNum}\r\n          style={{ paddingTop: '0px', paddingBottom: '0px' }}\r\n          onClick={() => {\r\n            groupHide[getDateGroup(row[groupBy])] = !showGrouped;\r\n            return props.setGroup(groupHide);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <CustomIcon\r\n              class={`${showGrouped ? 'icn_arrow_right' : 'icn_arrow_down'}`}\r\n              tip={`${showGrouped ? 'Показать' : 'Свернуть'}`}\r\n              action={() => props.setGroup(groupHide)}\r\n            />\r\n          </ListItemIcon>\r\n\r\n          <Typography variant=\"inherit\" noWrap style={{ fontSize: 'var(--font-size-table)' }}>\r\n            {props.headCells[groupBy].value}: {groupValue}\r\n          </Typography>\r\n        </MenuItem>\r\n      </TableCell>\r\n      {props.tableName === 'discussion' && (\r\n        <>\r\n          <TableCell colSpan={3} className=\"data-table__row-title_right\">\r\n            {currentWeek === row.week ? (\r\n              <>\r\n                <PopupConfirmChoice\r\n                  class=\"icn_notification\"\r\n                  id={row.week}\r\n                  options={dayOptionsChoice}\r\n                  action={props.sendNotification}\r\n                  actionName=\"отправка уведомлений об обсуждениях\"\r\n                />\r\n                &emsp;&emsp;\r\n              </>\r\n            ) : (\r\n              <span style={{ width: '50px', display: 'inline-block' }}>&nbsp;</span>\r\n            )}\r\n            <CustomIcon\r\n              class=\"icn_description\"\r\n              tip=\"Показать все обсуждения недели\"\r\n              action={props.toggleDescription}\r\n            />\r\n            &emsp;&emsp;\r\n            <PopupConfirmChoice\r\n              class=\"icn_discussionCopy\"\r\n              id={row[groupBy]}\r\n              options={weekOptionsChoice}\r\n              action={props.copyPreviousWeekDiscussions}\r\n              actionName=\"копирование обсуждений недели\"\r\n            />\r\n          </TableCell>\r\n        </>\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n","import React, { Fragment, Suspense, lazy } from 'react';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Input } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport { dataTable, metaData } from '../../config/data';\r\nimport { filters, filterTasks } from '../../utils/filters';\r\nimport { doData, getData } from '../../utils/api';\r\nimport storage from '../../storages/commonStorage';\r\nimport TblHeadEnhanced from '../TblHeadEnhanced/TblHeadEnhanced';\r\nimport CustomIcon from '../../SharedComponents/CustomIcon';\r\nimport TblHeaderSearch from '../TblHeaderSearch/TblHeaderSearch';\r\nimport TblHeaderPagination from '../TblHeaderPagination/TblHeaderPagination';\r\nimport TblGroupRow from '../TblGroupRow/TblGroupRow';\r\nimport getDefaultValues from '../../utils/defaultData';\r\nimport './DataTable.css';\r\n\r\nconst TblActionMenu = lazy(() => import('../TblActionMenu/TblActionMenu'));\r\nconst TblSecondaryList = lazy(() => import('../TblSecondaryList/TblSecondaryList'));\r\nconst TblFullTextRow = lazy(() => import('../TblFullTextRow/TblFullTextRow'));\r\n\r\nconst descSort = (a, b, sort) => {\r\n  let desc = 0;\r\n\r\n  for (let i = 0; i < sort.length; i++) {\r\n    const field = sort[i];\r\n    const orderBy = field.field;\r\n    let valA = Number.isInteger(a[orderBy]) ? a[orderBy] : a[orderBy] ? a[orderBy].toString() : '';\r\n    let valB = Number.isInteger(b[orderBy]) ? b[orderBy] : b[orderBy] ? b[orderBy].toString() : '';\r\n\r\n    if (metaData.dataTable[orderBy].type === 'select') {\r\n      if (valA !== '' && typeof valA === 'string') {\r\n        valA = metaData[`${orderBy}List`][valA].value;\r\n      }\r\n      if (valB !== '' && typeof valB === 'string') {\r\n        valB = metaData[`${orderBy}List`][valB].value;\r\n      }\r\n\r\n      if (typeof valA !== 'string') valA = '';\r\n      if (typeof valB !== 'string') valB = '';\r\n    }\r\n\r\n    desc = 0;\r\n    if (valB < valA) desc = -1;\r\n    if (valB > valA) desc = 1;\r\n    if (field.order === 'asc') desc *= -1;\r\n    if (desc !== 0) break;\r\n  }\r\n  return desc;\r\n};\r\n\r\nconst stableSort = (array, cmp) => {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  return stabilizedThis.map((el) => el[0]);\r\n};\r\n\r\nconst getSorting = (sort) => (a, b) => descSort(a, b, sort);\r\n\r\nconst getAdditionalCellProps = () => {\r\n  let hasAdditionalCell = false;\r\n  if (\r\n    metaData.specificParameters &&\r\n    (metaData.specificParameters.hasSpecAction ||\r\n      metaData.specificParameters.hasSpecNotes ||\r\n      metaData.specificParameters.hasEditMenu ||\r\n      metaData.specificParameters.hasDeleteButton ||\r\n      metaData.specificParameters.hasDoneButton)\r\n  ) {\r\n    hasAdditionalCell = true;\r\n  }\r\n\r\n  return hasAdditionalCell;\r\n};\r\n\r\nexport default class DataTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadData: false,\r\n      page: 0,\r\n      rowsPerPage: 100,\r\n      sort: [{ field: 'id', order: 'asc' }],\r\n      groupBy: '',\r\n      groupHide: {},\r\n      editID: -1,\r\n      editItem: '',\r\n      showFullTextID: -1,\r\n      showAddRows: -1,\r\n      data: dataTable,\r\n      headCells: metaData.dataTable,\r\n      titleRow: '',\r\n      secDataList: [],\r\n      weekDescription: undefined,\r\n    };\r\n\r\n    this.setSearch = this.setSearch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      const { dataLoading } = storage.state.getState().STATE;\r\n      if (dataLoading && dataLoading === 'data') {\r\n        // default sort\r\n        const order = metaData.specificParameters.defaultSortDirection || 'desc';\r\n        const orderBy = metaData.specificParameters.defaultSortField || 'id';\r\n        const sort = [];\r\n        orderBy.split(',').map((field, i) => sort.push({ field, order: order.split(',')[i] }));\r\n\r\n        let groupBy = '';\r\n        if (metaData.specificParameters && metaData.specificParameters.defaultGroupField) {\r\n          groupBy = metaData.specificParameters.defaultGroupField;\r\n        }\r\n\r\n        this.setState({\r\n          headCells: metaData.dataTable,\r\n          sort,\r\n          // search: '',\r\n          groupBy,\r\n          editID: -1,\r\n          data: filterTasks(true),\r\n          loadData: true,\r\n        });\r\n      } else if (dataLoading && dataLoading === 'meta') {\r\n        this.setState({\r\n          headCells: metaData.dataTable,\r\n          loadData: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    this.unsubscribeData = storage.data.subscribe(() => {\r\n      if (storage.data.getState().DATA.redraw) {\r\n        this.setData(filterTasks());\r\n        this.setPage(0);\r\n      }\r\n    });\r\n\r\n    this.unsubscribeTable = storage.table.subscribe(() => {\r\n      this.setState({ loadData: false, secDataList: [], titleRow: '' });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribeData();\r\n    this.unsubscribeTable();\r\n  }\r\n\r\n  setData = (data) => {\r\n    this.setEditID(-1);\r\n    this.setState({ data });\r\n  };\r\n\r\n  setPage = (page) => {\r\n    this.setEditID(-1);\r\n    this.setState({ page });\r\n  };\r\n\r\n  setOrder = (order) => this.setState({ order });\r\n\r\n  setOrderBy = (orderBy) => this.setState({ orderBy });\r\n\r\n  setEditID = (editID) => this.setState({ editID });\r\n\r\n  setEditItem = (editItem) => this.setState({ editItem });\r\n\r\n  setShowFullTextID = (showFullTextID) => this.setState({ showFullTextID });\r\n\r\n  setRowsPerPage = (rowsPerPage) => this.setState({ rowsPerPage });\r\n\r\n  setHeadCells = (headCells) => this.setState({ headCells });\r\n\r\n  setWeekDescription = (weekDescription) => this.setState({ weekDescription });\r\n\r\n  /* handle search */\r\n  setSearch = (search) => {\r\n    filters.data.commonFieldSearch = search;\r\n    this.setData(filterTasks());\r\n  };\r\n\r\n  /* handle change sort order */\r\n  setSort = (field) => {\r\n    const { sort } = this.state;\r\n    const sortFieldIndex = sort.map((f) => f.field).indexOf(field);\r\n    if (sortFieldIndex !== -1) {\r\n      if (sort[sortFieldIndex].order === 'asc') {\r\n        sort[sortFieldIndex].order = 'desc';\r\n      } else {\r\n        sort.splice(sortFieldIndex, 1);\r\n      }\r\n    } else {\r\n      sort.push({ field, order: 'asc' });\r\n    }\r\n    this.setState({ sort });\r\n  };\r\n\r\n  /* handle sort click */\r\n  handleRequestSort = (event, field) => this.setSort(field);\r\n\r\n  /* handle group click */\r\n  handleRequestGroup = (event, field) => {\r\n    const { sort } = this.state;\r\n    if (field && field !== '' && sort.field !== field) {\r\n      if (field === 'week') {\r\n        this.setState({\r\n          sort: [\r\n            { field, order: 'desc' },\r\n            { field: 'date', order: 'asc' },\r\n            { field: 'time', order: 'asc' },\r\n          ],\r\n        });\r\n      } else {\r\n        this.setState({ sort: [{ field, order: 'asc' }] });\r\n      }\r\n    }\r\n    this.setState({ groupBy: field, byWeek: false });\r\n  };\r\n\r\n  /* handle change page click */\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  /* handle change row per page click */\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setRowsPerPage(parseInt(event.target.value, 10));\r\n    this.setPage(0);\r\n  };\r\n\r\n  /* set sort/group to default options */\r\n  defaultSort = (order = 'desc', orderBy = 'id') => {\r\n    const sort = [];\r\n    orderBy.split(',').forEach((field, i) => {\r\n      sort.push({ field, order: order.split(',')[i] });\r\n    });\r\n\r\n    this.setState({\r\n      sort,\r\n      groupBy: '',\r\n      // search: ''\r\n    });\r\n\r\n    if (metaData.specificParameters && metaData.specificParameters.defaultGroupField) {\r\n      this.setState({ groupBy: metaData.specificParameters.defaultGroupField });\r\n    }\r\n  };\r\n\r\n  /* get array index (main data table) from given main task/theme (etc) ID */\r\n  realID = (id) => dataTable.map((task) => task.id).indexOf(id);\r\n\r\n  /* called after OK click in edit dialog */\r\n  editTableRow = (id, rowData) => {\r\n    let errorResult = false;\r\n    doData('patch', rowData, id, metaData.dataTableName)\r\n      .then(([error]) => {\r\n        if (error) {\r\n          errorResult = true;\r\n        } else {\r\n          const realID = this.realID(id);\r\n          Object.keys(rowData).forEach((key) => {\r\n            dataTable[realID][key] = rowData[key];\r\n          });\r\n          this.setData(filterTasks());\r\n          storage.upd.dispatch({ type: 'UPDATE', update: true });\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (errorResult) {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'fail',\r\n            message: 'Ошибка при изменении',\r\n          });\r\n        } else {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'success',\r\n            message: 'Изменение успешно',\r\n          });\r\n        }\r\n      });\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n  };\r\n\r\n  /* called if you click 'SAVE AS NEW' button */\r\n  addTableRow = (rowData, updateTable = true) => {\r\n    this.addTableRowArray([rowData], updateTable);\r\n  };\r\n\r\n  addTableRowArray = (rowDataArray, updateTable = true) => {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n\r\n    Promise.all(\r\n      rowDataArray.map((rowData) => doData('put', rowData, undefined, metaData.dataTableName))\r\n    ).then((returnDataArray) => {\r\n      let error = 0;\r\n      let jsonOk = 1;\r\n      returnDataArray.forEach((returnData) => {\r\n        const returnError = returnData[0];\r\n        const returnJson = returnData[1];\r\n        if (returnError) error = 1;\r\n        if (!returnJson || !returnJson.data || !returnJson.data.id) jsonOk = 0;\r\n      });\r\n\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при добавлении',\r\n        });\r\n      } else if (jsonOk) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Добавление успешно',\r\n        });\r\n\r\n        for (let i = 0; i < rowDataArray.length; i++) {\r\n          const rowData = rowDataArray[i];\r\n          const json = returnDataArray[i][1];\r\n\r\n          rowData.id = json.data.id;\r\n          rowData.value = rowData[metaData.specificParameters.mainValue];\r\n          if (metaData[`${metaData.dataTableName}List`]) {\r\n            metaData[`${metaData.dataTableName}List`][rowData.id] = rowData;\r\n          }\r\n          dataTable.push(rowData);\r\n        }\r\n\r\n        if (updateTable) this.setData(filterTasks());\r\n      }\r\n    });\r\n  };\r\n\r\n  /* called after OK click in DELETE dialog */\r\n  deleteTableRow = (id) => {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    let errorResult = false;\r\n    doData('delete', {}, id, metaData.dataTableName)\r\n      .then(([error]) => {\r\n        if (error) {\r\n          errorResult = true;\r\n        } else {\r\n          this.setShowFullTextID(-1);\r\n          const realID = this.realID(id);\r\n          dataTable.splice(realID, 1);\r\n          this.setData(filterTasks());\r\n\r\n          storage.upd.dispatch({ type: 'UPDATE', update: true });\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (errorResult) {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'fail',\r\n            message: 'Ошибка при изменении',\r\n          });\r\n        } else {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'success',\r\n            message: 'Удаление успешно',\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  /* called after inline edit of something */\r\n  inlineEditOk = (id) => () => {\r\n    const editProperty = this.state.editItem;\r\n    const realID = this.realID(id);\r\n    const rowData = {};\r\n    Object.keys(dataTable[realID]).forEach((key) => {\r\n      rowData[key] = dataTable[realID][key];\r\n    });\r\n    rowData[editProperty] = this[`edit-${editProperty}-${id}`].value;\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    doData('patch', rowData, id, metaData.dataTableName).then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при изменении',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Изменение успешно',\r\n        });\r\n\r\n        // dataTable[realID][editProperty] = this[`edit-${editProperty}-${id}`].value;\r\n        dataTable[realID][editProperty] = rowData[editProperty];\r\n        this.setData(filterTasks());\r\n      }\r\n    });\r\n  };\r\n\r\n  dialogEditOk = (id, editProperty, editPropertyValue) => {\r\n    const realID = this.realID(id);\r\n    const rowData = {};\r\n    Object.keys(dataTable[realID]).forEach((key) => {\r\n      rowData[key] = dataTable[realID][key];\r\n    });\r\n    rowData[editProperty] = editPropertyValue;\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    doData('patch', rowData, id, metaData.dataTableName).then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при изменении',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Изменение успешно',\r\n        });\r\n\r\n        dataTable[realID][editProperty] = editPropertyValue;\r\n        this.setData(filterTasks());\r\n      }\r\n    });\r\n  };\r\n\r\n  /* called after set task/theme etc status as DONE */\r\n  completeTableRow = (id) => {\r\n    const realID = this.realID(id);\r\n    const task = {};\r\n    Object.keys(dataTable[realID]).forEach((key) => {\r\n      task[key] = dataTable[realID][key];\r\n    });\r\n    task.status = 'done';\r\n\r\n    const today = new Date();\r\n    task.dateEnd = today.toISOString().replace(/(.+)T(.+)/, '$1');\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    doData('patch', task, id).then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при изменении',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Изменение успешно',\r\n        });\r\n\r\n        dataTable[realID].status = task.status;\r\n        dataTable[realID].dateEnd = task.dateEnd;\r\n        this.setData(filterTasks());\r\n      }\r\n    });\r\n  };\r\n\r\n  setStatusTableRow = (id, status) => {\r\n    const realID = this.realID(id);\r\n    const task = {};\r\n    Object.keys(dataTable[realID]).forEach((key) => {\r\n      task[key] = dataTable[realID][key];\r\n    });\r\n    task.status = status;\r\n\r\n    if (status === 'done') {\r\n      const today = new Date();\r\n      task.dateEnd = today.toISOString().replace(/(.+)T(.+)/, '$1');\r\n    }\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    doData('patch', task, id, metaData.dataTableName).then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при изменении',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Изменение успешно',\r\n        });\r\n\r\n        dataTable[realID].status = task.status;\r\n        dataTable[realID].dateEnd = task.dateEnd;\r\n        this.setData(filterTasks());\r\n      }\r\n    });\r\n  };\r\n\r\n  /* handle show full text row */\r\n  showFullText = (id) => () => {\r\n    if (this.state.showFullTextID === id) {\r\n      return this.setShowFullTextID(-1);\r\n    }\r\n    return this.setShowFullTextID(id);\r\n  };\r\n\r\n  /* go to linked table (questions, discussion) for given task */\r\n  loadLinked = async (id, loadTableName) => {\r\n    const mainTable = metaData.dataTableName;\r\n    storage.table.dispatch({ type: 'SET_TABLE', tableName: metaData.dataTableName });\r\n\r\n    const data = await getData(mainTable, 'direct', { id });\r\n\r\n    this.props.reloadDataTable(loadTableName, () => {\r\n      filters.data.idTask = id;\r\n      filters.perm.mainTable = mainTable;\r\n\r\n      this.setState({ titleRow: `${data[0].id} - ${data[0].value}` });\r\n    });\r\n  };\r\n\r\n  /* show results */\r\n  showResults = async (id, loadTableName = 'discussion') => {\r\n    const data = await getData(loadTableName, 'direct', {\r\n      idTask: id,\r\n      mainTable: metaData.dataTableName,\r\n    });\r\n\r\n    this.setState({\r\n      showAddRows: id,\r\n      secDataList: data\r\n        .sort((a, b) => (a.date.toString() > b.date.toString() ? -1 : 1))\r\n        .map((task) => {\r\n          const result = [];\r\n          result.push(moment(task.date).format('DD MMMM YYYY'));\r\n          result.push(\r\n            task.participants\r\n              .split(',')\r\n              .map((d) => (metaData.developerList[d]?.value ? metaData.developerList[d].value : d))\r\n              .join(', ')\r\n          );\r\n          result.push(task.result);\r\n          return { string: result.join('\\n') };\r\n        }),\r\n    });\r\n  };\r\n\r\n  /* add 'linked' data: question for tasks, discussion for theme, etc */\r\n  addLinkedData = (id, type, infoData) => {\r\n    const realID = this.realID(id);\r\n    const linkedData = {};\r\n    const metaTable = metaData.tables[`${type}_meta`];\r\n\r\n    Object.keys(metaTable.dataTable).forEach((prop) => {\r\n      if (metaTable.dataTable[prop].defaultValue) {\r\n        linkedData[prop] = getDefaultValues(realID, prop, metaTable.dataTable);\r\n      }\r\n    });\r\n\r\n    Object.keys(infoData).forEach((prop) => {\r\n      linkedData[prop] = infoData[prop];\r\n    });\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт обновление информации в БД...',\r\n    });\r\n    doData('put', linkedData, undefined, type).then(([error, json]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при добавлении',\r\n        });\r\n      } else if (json && json.id) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Добавление успешно',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при добавлении записи в БД',\r\n        });\r\n      }\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  /* create and show sub list data (tasks for theme, etc) */\r\n  loadSecondaryList = async (id, field, dataListName) => {\r\n    if (this.state.showAddRows === id) {\r\n      this.setState({ showAddRows: -1, secDataList: [] });\r\n    } else {\r\n      this.setState({ showAddRows: id });\r\n\r\n      const secDataList = [];\r\n      field = 'taskgroup';\r\n\r\n      if (metaData.dataTableName === 'discussion') {\r\n        const realID = this.realID(id);\r\n        id = dataTable[realID].idTask;\r\n      }\r\n\r\n      const data = await getData(dataListName, 'direct', { [field]: id });\r\n      data\r\n        .filter((task) => parseInt(task[field], 10) === parseInt(id, 10) && task.status !== 'done')\r\n        .sort((a, b) => (a.value <= b.value ? -1 : 1))\r\n        .forEach((info) => {\r\n          secDataList.push({ id: info.id, value: info.value });\r\n        });\r\n\r\n      this.setState({ secDataList: secDataList.map((task) => ({ string: ` ${task.value}` })) });\r\n    }\r\n  };\r\n\r\n  menuActionLoadDiscussions = (id) => this.loadLinked(id, 'discussion');\r\n\r\n  menuActionLoadThemeTasks = (id) => this.loadSecondaryList(id, metaData.dataTableName, 'task');\r\n\r\n  /* handle send notifiction */\r\n  sendNotification = (id) => {\r\n    const rowData = {\r\n      id,\r\n      mode: 'notify',\r\n      feature: metaData.dataTableName,\r\n    };\r\n\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт отправка уведомлений...',\r\n    });\r\n    doData('notify', rowData, id, 'notification').then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при отправке уведомления',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Уведомление послано успешно',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  sendNotificationWeekDate = (notifyWeek, date) => {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт отправка уведомлений...',\r\n    });\r\n    const data = {\r\n      week: notifyWeek,\r\n      mode: 'done',\r\n      feature: 'discussion',\r\n    };\r\n    if (date) data.date = date;\r\n    doData('notify', data, undefined, 'notification').then(([error]) => {\r\n      if (error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при отправке уведомления',\r\n        });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Уведомление послано успешно',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  /* create action menu list (edit/delete/done, etc) */\r\n  actionMenuList = () => {\r\n    const menuList = [];\r\n    // if (metaData.specificParameters.hasQuestions) {\r\n    // }\r\n    if (metaData.specificParameters.haveDiscussion) {\r\n      const action = {\r\n        id: 'discussion',\r\n        value: 'Добавить обсуждение',\r\n        type: 'discussion',\r\n        action: this.addLinkedData,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasGoToDiscussion) {\r\n      const action = {\r\n        id: 'goToDiscussion',\r\n        value: 'Связанные обсуждения',\r\n        type: 'discussion',\r\n        action: this.menuActionLoadDiscussions,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasSublistData) {\r\n      const action = {\r\n        id: 'secDataList',\r\n        value: 'Связанные задачи',\r\n        action: this.menuActionLoadThemeTasks,\r\n      };\r\n      menuList.push(action);\r\n      menuList.push({ id: 'divider' });\r\n    }\r\n    if (metaData.specificParameters.hasEditMenu) {\r\n      const action = {\r\n        id: 'tasks_edit',\r\n        value: 'Редактировать',\r\n        actionName: 'Редактирование',\r\n        action: this.editTableRow,\r\n        actionNew: this.addTableRow,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasSetStatusMenu) {\r\n      const action = {\r\n        id: 'tasks_status',\r\n        value: 'Изменить статус',\r\n        actionName: 'Изменить статус',\r\n        isListOfItems: true,\r\n        listItems: metaData.statusList,\r\n        action: this.setStatusTableRow,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasDeleteButton) {\r\n      const action = {\r\n        id: 'tasks_delete',\r\n        value: 'Удалить',\r\n        actionName: 'Удаление',\r\n        action: this.deleteTableRow,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasNotificationButton) {\r\n      menuList.push({ id: 'divider' });\r\n      const action = {\r\n        id: 'notification',\r\n        value: 'Отправить уведомление',\r\n        action: this.sendNotification,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n    if (metaData.specificParameters.hasShowResults) {\r\n      const action = {\r\n        id: 'showThemeResults',\r\n        value: 'История обсуждений',\r\n        type: 'discussion',\r\n        action: this.showResults,\r\n      };\r\n      menuList.push(action);\r\n    }\r\n\r\n    return menuList;\r\n  };\r\n\r\n  getDateGroup = (date) => {\r\n    const weekNum = this.state.byWeek ? moment(date, 'YYYY-MM-DD').week() : date;\r\n    return weekNum;\r\n  };\r\n\r\n  toggleDescription = (week) => {\r\n    const { weekDescription } = this.state;\r\n    if (weekDescription && weekDescription === week) {\r\n      this.setWeekDescription(undefined);\r\n    } else {\r\n      this.setWeekDescription(week);\r\n    }\r\n  };\r\n\r\n  // chosenWeek = 0 - this week, 1 - next week, 2 - ...\r\n  copyPreviousWeekDiscussions(selectedWeek, chosenWeek) {\r\n    const weekData = dataTable.filter((row) => row.week === selectedWeek);\r\n\r\n    const infoArray = [];\r\n    weekData.forEach((data) => {\r\n      const info = { ...data };\r\n      info.result = '';\r\n      info.status = 'new';\r\n      info.videoConf = '';\r\n\r\n      const newWeekDate = moment()\r\n        .startOf('week')\r\n        .day(moment(info.date).day() + 7 * chosenWeek);\r\n\r\n      info.date = moment(newWeekDate).format('YYYY-MM-DD');\r\n      info.week = moment(newWeekDate).format('YYYY.WW');\r\n\r\n      infoArray.push(info);\r\n    });\r\n\r\n    this.addTableRowArray(infoArray);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      page,\r\n      order,\r\n      orderBy,\r\n      sort,\r\n      groupBy,\r\n      headCells,\r\n      weekDescription,\r\n      secDataList,\r\n      groupHide,\r\n    } = this.state;\r\n    let { rowsPerPage, data } = this.state;\r\n    const groupList = {};\r\n    let d = new Date();\r\n    d = d.toLocaleDateString().replace(/(\\d+).(\\d+).(\\d+)/, '$3-$2-$1');\r\n\r\n    // for `noPagination` parameter (print PDF click)\r\n    if (this.props.noPagination) {\r\n      data = filterTasks();\r\n      rowsPerPage = data.length;\r\n    }\r\n\r\n    const hasAdditionalCell = getAdditionalCellProps();\r\n    const fullColsNum =\r\n      Object.values(metaData.dataTable).filter((a) => a.showInTable).length +\r\n      (hasAdditionalCell ? 1 : 0);\r\n\r\n    return this.state.loadData ? (\r\n      <Table size=\"small\" stickyHeader className=\"data-table__table\">\r\n        <TableHead>\r\n          {/* Table head */}\r\n          <TblHeadEnhanced\r\n            order={order}\r\n            sort={sort}\r\n            orderBy={orderBy}\r\n            groupBy={groupBy}\r\n            onRequestSort={this.handleRequestSort}\r\n            onRequestGroup={this.handleRequestGroup}\r\n            rowCount={data.length}\r\n            onFilter={(_data) => {\r\n              this.setData(_data);\r\n              this.setPage(0);\r\n            }}\r\n            headCells={headCells}\r\n          />\r\n          {/* Search & pagination options row */}\r\n          {!this.props.noPagination && (\r\n            <TableRow>\r\n              <TableCell\r\n                colSpan={hasAdditionalCell ? fullColsNum + 1 : fullColsNum}\r\n                className=\"data-table__pagination-cell\"\r\n              >\r\n                <TblHeaderSearch setSearch={this.setSearch} />\r\n\r\n                <TblHeaderPagination\r\n                  count={data.length}\r\n                  page={page}\r\n                  rowsPerPage={rowsPerPage}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n          {/* Title row (for questions mode) */}\r\n          {metaData.specificParameters?.hasTitleRow && this.state.titleRow !== '' && (\r\n            <TableRow>\r\n              <TableCell colSpan={fullColsNum} className=\"data-table__row-title\">\r\n                {this.state.titleRow}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {data.length > 0 ? (\r\n            stableSort(data, getSorting(sort))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                let rowClass = '';\r\n                if (row.status === 'new') rowClass = 'task_alert';\r\n                if (\r\n                  metaData.dataTableName === 'discussion' &&\r\n                  row.status === 'new' &&\r\n                  row.date >= d\r\n                ) {\r\n                  rowClass = '';\r\n                }\r\n                if (row.priority === 'hard') rowClass = 'task_bad';\r\n                if (row.status === 'rejected') rowClass = 'task_bad';\r\n                if (row.status === 'done') rowClass = 'task_good';\r\n                if (\r\n                  metaData.dataTableName === 'discussion' &&\r\n                  !row.result &&\r\n                  row.status === 'done'\r\n                ) {\r\n                  rowClass = 'task_noresult';\r\n                }\r\n\r\n                let showGroupByRow = false;\r\n                let groupValue = '';\r\n                let dayName = '';\r\n\r\n                if (groupBy && groupBy !== '') {\r\n                  let date = '';\r\n                  if (headCells[groupBy].type === 'date') {\r\n                    date = moment(row[groupBy], 'YYYY-MM-DD');\r\n                  } else if (groupBy === 'week') {\r\n                    date = moment(row.date, 'YYYY-MM-DD');\r\n                  }\r\n\r\n                  const groupField = this.getDateGroup(row[groupBy]);\r\n                  if (!groupList[groupField]) {\r\n                    groupList[groupField] = 1;\r\n                    showGroupByRow = true;\r\n                  }\r\n\r\n                  if (headCells[groupBy].type === 'date') {\r\n                    dayName = `${date.format('dddd')}\r\n${date.format('DD MMMM')}`;\r\n                    // dayName = date.format('dddd') + '<br>' + date.format('DD MMMM');\r\n                    groupValue = date.format('DD MMMM YYYY');\r\n                  } else if (groupBy === 'week') {\r\n                    dayName = `${date.format('dddd')}\r\n${date.format('DD MMMM')}`;\r\n                    groupValue = `${date.startOf('week').format('DD MMMM YYYY')} - ${date\r\n                      .endOf('week')\r\n                      .format('DD MMMM YYYY')}`;\r\n                  } else {\r\n                    groupValue = metaData[`${groupBy}List`]\r\n                      ? metaData[`${groupBy}List`][row[groupBy]].value\r\n                      : row[groupBy];\r\n                  }\r\n                }\r\n\r\n                // big text data, like description, change_all. get Index of cell where Icon for click, value && property name\r\n                const fullText = { display: false };\r\n                Object.values(headCells).forEach((property) => {\r\n                  if (\r\n                    property.type === 'fulltext' &&\r\n                    row[property.id] !== '' &&\r\n                    typeof row[property.id] === 'string'\r\n                  ) {\r\n                    fullText.value = row[property.id];\r\n                    fullText.title = property.value;\r\n                    fullText.id = property.id;\r\n                    fullText.display = true;\r\n                    fullText.fullTextIndexCell = property.tableIndex;\r\n                  }\r\n                });\r\n\r\n                let ZoomLink = '';\r\n                if (\r\n                  row.videoConf &&\r\n                  /https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d+\\?pwd=.+/.test(row.videoConf)\r\n                ) {\r\n                  const url = row.videoConf.replace(\r\n                    /^[\\s\\S]*(https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d+\\?pwd=\\S+\\b)[\\s\\S]*/,\r\n                    '$1'\r\n                  );\r\n                  const tip = url.replace(/^https:\\/\\/us02web\\.zoom\\.us\\/j\\/\\d{7}(\\d{4}).+/, '$1');\r\n                  ZoomLink = <CustomIcon type=\"link\" class=\"icn_zoom\" tip={tip} href={url} />;\r\n                }\r\n\r\n                let YouTubeLink = '';\r\n                if (row.videoConf && /youtu\\.?be/.test(row.videoConf)) {\r\n                  const url = row.videoConf.replace(\r\n                    /^[\\s\\S]*(https:\\/\\/(www\\.)?youtu\\.?be.+\\b)[\\s\\S]*/,\r\n                    '$1'\r\n                  );\r\n                  YouTubeLink = <CustomIcon type=\"link\" class=\"icn_youtube\" href={url} />;\r\n                }\r\n\r\n                return (\r\n                  <Fragment key={`${row.id}`}>\r\n                    {/* Group row with show/hide icons */}\r\n                    {groupBy && groupBy !== '' && showGroupByRow && (\r\n                      <TblGroupRow\r\n                        tableName={metaData.dataTableName}\r\n                        fullColsNum={hasAdditionalCell ? fullColsNum + 2 : fullColsNum}\r\n                        headCells={headCells}\r\n                        groupBy={groupBy}\r\n                        groupValue={groupValue}\r\n                        groupHide={groupHide}\r\n                        setGroup={(_groupHide) => {\r\n                          this.setState({ groupHide: _groupHide });\r\n                        }}\r\n                        row={row}\r\n                        weekData={dataTable.filter((r) => r.week === row.week)}\r\n                        getDateGroup={this.getDateGroup}\r\n                        sendNotification={(id, day) => {\r\n                          this.sendNotificationWeekDate(id, day);\r\n                        }}\r\n                        toggleDescription={() => {\r\n                          this.toggleDescription(row.week);\r\n                        }}\r\n                        copyPreviousWeekDiscussions={(id, week) => {\r\n                          this.copyPreviousWeekDiscussions(id, week);\r\n                        }}\r\n                      />\r\n                    )}\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={`row-main-${row.id}`}\r\n                      className={`${rowClass} data-table__row`}\r\n                      style={{\r\n                        height: '31px',\r\n                        display:\r\n                          !groupBy ||\r\n                          (groupBy &&\r\n                            groupList[this.getDateGroup(row[groupBy])] &&\r\n                            !groupHide[this.getDateGroup(row[groupBy])])\r\n                            ? 'table-row'\r\n                            : 'none',\r\n                      }}\r\n                    >\r\n                      {Object.values(headCells)\r\n                        .filter((a) => a.showInTable)\r\n                        .sort((a, b) => (a.tableIndex >= b.tableIndex ? 1 : -1))\r\n                        .map((headCell, index) => {\r\n                          const property = headCell.id;\r\n                          let value =\r\n                            groupBy &&\r\n                            (headCell.id === groupBy ||\r\n                              (headCell.id === 'date' && groupBy === 'week'))\r\n                              ? dayName\r\n                              : row[headCell.id];\r\n                          if (headCell.type === 'time')\r\n                            value = value.replace(/(\\d\\d:\\d\\d):\\d\\d/, '$1');\r\n                          if (headCell.id === 'mainTable')\r\n                            value = metaData.tables[`${value}_meta`].specificParameters.tableName;\r\n                          const { id } = row;\r\n                          let whiteSpace = '';\r\n                          if (['datetime', 'date', 'time'].includes(headCell.type)) {\r\n                            whiteSpace = 'nowrap';\r\n                          }\r\n                          if (\r\n                            groupBy &&\r\n                            groupBy !== '' &&\r\n                            (headCell.id === groupBy ||\r\n                              (headCell.id === 'date' && groupBy === 'week'))\r\n                          ) {\r\n                            whiteSpace = 'pre';\r\n                          }\r\n\r\n                          const paddingLeft = index === 0 ? '10px' : '0px';\r\n\r\n                          return (\r\n                            <Fragment key={`td-${property}-${id}`}>\r\n                              <TableCell\r\n                                className=\"data-table__cell\"\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                                style={{\r\n                                  whiteSpace,\r\n                                  paddingLeft,\r\n                                  fontSize: 'var(--font-size-table)',\r\n                                }}\r\n                              >\r\n                                {headCell.isInlineEditable &&\r\n                                  headCell.type === 'string' &&\r\n                                  (this.state.editID !== id ||\r\n                                    this.state.editItem !== property) && (\r\n                                    <>\r\n                                      {fullText.display &&\r\n                                        metaData.dataTable[property].hasFullTextLink && (\r\n                                          <CustomIcon\r\n                                            class=\"icn_description\"\r\n                                            tip={`Показать ${fullText.title}`}\r\n                                            action={this.showFullText(row.id)}\r\n                                          />\r\n                                        )}\r\n                                      {ZoomLink}\r\n                                      {YouTubeLink}\r\n                                      {value}\r\n                                    </>\r\n                                  )}\r\n\r\n                                {/* edit item textbox */}\r\n                                {this.state.editID === id && this.state.editItem === property && (\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    autoFocus\r\n                                    defaultValue={value}\r\n                                    ref={`edit-${property}-${id}`}\r\n                                    inputRef={(el) => {\r\n                                      this[`edit-${property}-${id}`] = el;\r\n                                    }}\r\n                                    inputProps={{\r\n                                      style: { fontSize: 'var(--font-size-table)' },\r\n                                    }}\r\n                                    /* edit item ok / cancel buttons */\r\n                                    endAdornment={\r\n                                      <InputAdornment position=\"end\">\r\n                                        <div className=\"data-table__cell-edit-buttons\">\r\n                                          <CustomIcon\r\n                                            class=\"icn_ok\"\r\n                                            action={this.inlineEditOk(id)}\r\n                                          />\r\n                                          <CustomIcon\r\n                                            class=\"icn_cancel\"\r\n                                            action={() => {\r\n                                              this.setEditID(-1);\r\n                                              this.setEditItem('');\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                      </InputAdornment>\r\n                                    }\r\n                                    fullWidth\r\n                                  />\r\n                                )}\r\n\r\n                                {/* Fulltext editable cell value */}\r\n                                {headCell.isInlineEditable && headCell.type === 'fulltext' && (\r\n                                  <div\r\n                                    ref={`div-${property}-${id}`}\r\n                                    className=\"data-table__cell-fulltext\"\r\n                                  >\r\n                                    {/* text */}\r\n                                    <div className=\"data-table__cell-fulltext-value\">\r\n                                      {fullText.display &&\r\n                                        metaData.dataTable[property].hasFullTextLink && (\r\n                                          <CustomIcon\r\n                                            class=\"icn_description\"\r\n                                            action={this.showFullText(row.id)}\r\n                                          />\r\n                                        )}\r\n                                      {value}\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n\r\n                                {/* None of the other cell values */}\r\n                                {!headCell.isInlineEditable &&\r\n                                  headCell.type !== 'multi-select' &&\r\n                                  (headCell.type !== 'select' ||\r\n                                    typeof metaData[`${property}List`][value] === 'undefined') && (\r\n                                    <>\r\n                                      {fullText.display &&\r\n                                        metaData.dataTable[property].hasFullTextLink && (\r\n                                          <CustomIcon\r\n                                            class=\"icn_description\"\r\n                                            action={this.showFullText(row.id)}\r\n                                          />\r\n                                        )}\r\n                                      {value}\r\n                                    </>\r\n                                  )}\r\n\r\n                                {/* Select non-editable cell value */}\r\n                                {!headCell.isInlineEditable &&\r\n                                  headCell.type === 'select' &&\r\n                                  typeof metaData[`${property}List`][value] !== 'undefined' && (\r\n                                    <>\r\n                                      {fullText.display &&\r\n                                        index + 1 === fullText.fullTextIndexCell &&\r\n                                        metaData.dataTable[property].hasFullTextLink && (\r\n                                          <CustomIcon\r\n                                            class=\"icn_description\"\r\n                                            action={this.showFullText(row.id)}\r\n                                          />\r\n                                        )}\r\n                                      {metaData[`${property}List`][value].value}\r\n                                    </>\r\n                                  )}\r\n\r\n                                {/* Multi-select non-editable cell value */}\r\n                                {!headCell.isInlineEditable && headCell.type === 'multi-select' && (\r\n                                  <div className=\"data-table__cell-multiselect\">\r\n                                    {fullText.display &&\r\n                                      index + 1 === fullText.fullTextIndexCell &&\r\n                                      metaData.dataTable[property].hasFullTextLink && (\r\n                                        <CustomIcon\r\n                                          class=\"icn_description\"\r\n                                          action={this.showFullText(row.id)}\r\n                                        />\r\n                                      )}\r\n                                    {/* <DescriptionIcon fontSize={fontSize}/>} */}\r\n                                    {value\r\n                                      .split(',')\r\n                                      .map((_d) => metaData[`${property}List`][_d]?.value || _d)\r\n                                      .join(', ')}\r\n                                  </div>\r\n                                )}\r\n                              </TableCell>\r\n\r\n                              {headCell.isInlineEditable && headCell.type === 'string' && (\r\n                                <TableCell\r\n                                  className=\"data-table__cell\"\r\n                                  align=\"center\"\r\n                                  padding=\"none\"\r\n                                  style={{\r\n                                    width: '10px',\r\n                                    whiteSpace,\r\n                                    paddingLeft,\r\n                                    borderBottom:\r\n                                      (this.state.showFullTextID === row.id ||\r\n                                        (weekDescription && weekDescription === row.week)) &&\r\n                                      fullText.display &&\r\n                                      0,\r\n                                  }}\r\n                                >\r\n                                  {this.state.editID !== id && (\r\n                                    <div className=\"data-table__hover-icon data-table__cell-inline-edit\">\r\n                                      <CustomIcon\r\n                                        class=\"icn_tasks_edit\"\r\n                                        tip={`Изменить: ${metaData.dataTable[property].value}`}\r\n                                        action={() => {\r\n                                          this.setEditID(id);\r\n                                          this.setEditItem(property);\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  )}\r\n                                </TableCell>\r\n                              )}\r\n                            </Fragment>\r\n                          );\r\n                        })}\r\n\r\n                      {/* Right column with actions menu */}\r\n                      {hasAdditionalCell && (\r\n                        <TableCell\r\n                          className=\"data-table__cell data-table__hover-icon\"\r\n                          padding=\"none\"\r\n                          style={{ paddingLeft: metaData.mobile ? '10px' : '' }}\r\n                        >\r\n                          <div className=\"data-table__hover-icon\">\r\n                            <Suspense fallback={<p>...</p>}>\r\n                              <TblActionMenu id={row.id} task={row} list={this.actionMenuList} />\r\n                            </Suspense>\r\n                          </div>\r\n                        </TableCell>\r\n                      )}\r\n                    </TableRow>\r\n\r\n                    {/* Full text row - if click to show */}\r\n                    {(this.state.showFullTextID === row.id ||\r\n                      (weekDescription && weekDescription === row.week)) &&\r\n                      fullText.display && (\r\n                        <Suspense\r\n                          fallback={\r\n                            <TableRow>\r\n                              <TableCell>...</TableCell>\r\n                            </TableRow>\r\n                          }\r\n                        >\r\n                          <TblFullTextRow data={fullText} headCells={headCells} id={row.id} />\r\n                        </Suspense>\r\n                      )}\r\n\r\n                    {/* Secondary List: show and hide */}\r\n                    {this.state.showAddRows === row.id && !groupHide[row[groupBy]] && (\r\n                      <Suspense\r\n                        fallback={\r\n                          <TableRow>\r\n                            <TableCell>...</TableCell>\r\n                          </TableRow>\r\n                        }\r\n                      >\r\n                        <TblSecondaryList\r\n                          secDataList={secDataList}\r\n                          fullColsNum={fullColsNum}\r\n                          loadSecondaryList={() => this.loadSecondaryList(row.id, 'task')}\r\n                        />\r\n                      </Suspense>\r\n                    )}\r\n                  </Fragment>\r\n                );\r\n              })\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={fullColsNum}>\r\n                {metaData.specificParameters?.tableName\r\n                  ? `${metaData.specificParameters?.tableName}: отсутствуют`\r\n                  : 'Данные загружаются...'}\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    ) : (\r\n      <div className=\"data-table__loading\">\r\n        <CircularProgress style={{ width: '100px', height: '100px' }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport LoadingComponent from '../LoadingComponent/LoadingComponent';\r\n\r\nimport storage from '../../storages/commonStorage';\r\n// import { dataTable } from '../../config/data';\r\nimport DataTable from '../DataTable/DataTable';\r\nimport './Content.css';\r\n\r\nconst MainCalendar = React.lazy(() => import('../MainCalendar/MainCalendar'));\r\nconst DataAdd = React.lazy(() => import('../DataAdd/DataAdd'));\r\n\r\nexport default function Content({ dataRef, reloadDataTable, dataTable, dataTableName }) {\r\n  const [tableName, setTableName] = React.useState(dataTableName);\r\n\r\n  const subscribe = storage.table.subscribe(() => {\r\n    const storageTableName = storage.table.getState().TABLE.tableName;\r\n    if (storageTableName) {\r\n      setTableName(storageTableName);\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    subscribe();\r\n    return subscribe();\r\n  }, [tableName]);\r\n\r\n  return (\r\n    <section className=\"content\">\r\n      {tableName !== 'calendar' ? (\r\n        <div className=\"content__table\">\r\n          <React.Suspense fallback={<LoadingComponent />}>\r\n            <DataTable reloadDataTable={reloadDataTable} ref={dataRef} />\r\n          </React.Suspense>\r\n        </div>\r\n      ) : (\r\n        <div className=\"content__calendar\">\r\n          <React.Suspense fallback={<LoadingComponent />}>\r\n            <MainCalendar dates={dataTable} />\r\n          </React.Suspense>\r\n        </div>\r\n      )}\r\n\r\n      <React.Suspense fallback={<LoadingComponent />}>\r\n        <DataAdd />\r\n      </React.Suspense>\r\n    </section>\r\n  );\r\n}\r\n","import React, { Suspense, lazy } from 'react';\r\n\r\nimport { metaData, dataTable } from './config/data';\r\nimport { mainModes } from './config/constants';\r\nimport { filters } from './utils/filters';\r\nimport { getData } from './utils/api';\r\nimport storage from './storages/commonStorage';\r\nimport Header from './Components/Header/Header';\r\nimport HeaderLogin from './Components/HeaderLogin/HeaderLogin';\r\nimport MainLeftSide from './Components/MainLeftSide/MainLeftSide';\r\nimport Content from './Components/Content/Content';\r\nimport './App.css';\r\n\r\nconst Hint = lazy(() => import('./SharedComponents/Hint'));\r\n\r\nexport default function App() {\r\n  const [developers, setDevelopers] = React.useState([]);\r\n  const _divDataTable = React.useRef(null);\r\n\r\n  const reloadDataTable = (dataTableName, cb, resetFilter = true) => {\r\n    metaData.dataTableName = dataTableName;\r\n    storage.table.dispatch({ type: 'SET_TABLENAME', tableName: dataTableName });\r\n\r\n    if (resetFilter) filters.clear();\r\n\r\n    Promise.all([getData(`${dataTableName}_meta`), getData(metaData.dataTableName)])\r\n      .then(() => {\r\n        if (typeof cb === 'function') cb();\r\n      })\r\n      .then(() => {\r\n        storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'data' });\r\n      });\r\n  };\r\n\r\n  const { pathname } = document.location;\r\n  const hostpath = window.location.href.search(/localhost:3000/) !== -1 ? '' : 'smisplan';\r\n  const pathArray = pathname.split('/').slice(1);\r\n  if (pathArray[0] === hostpath) {\r\n    pathArray.shift();\r\n  }\r\n\r\n  const tableName = pathArray[0];\r\n  const inputFilter = { data: {} };\r\n  if (pathArray[1] !== '') {\r\n    inputFilter.developer = pathArray[1];\r\n  }\r\n\r\n  if (mainModes.includes(tableName)) metaData.dataTableName = tableName;\r\n\r\n  if (\r\n    navigator.userAgent.match(/Android/i) ||\r\n    navigator.userAgent.match(/webOS/i) ||\r\n    navigator.userAgent.match(/iPhone/i) ||\r\n    navigator.userAgent.match(/iPad/i) ||\r\n    navigator.userAgent.match(/iPod/i) ||\r\n    navigator.userAgent.match(/BlackBerry/i) ||\r\n    navigator.userAgent.match(/Windows Phone/i)\r\n  ) {\r\n    metaData.mobile = true;\r\n\r\n    const root = document.documentElement;\r\n    root.style.setProperty('--font-size-table-title', '16px');\r\n    root.style.setProperty('--font-size-table', '14px');\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getData('developer').then((developersList) => {\r\n      setDevelopers(developersList);\r\n      Promise.all([\r\n        ...mainModes.map((mode) => getData(`${mode}_meta`)),\r\n        getData(metaData.dataTableName),\r\n      ]).then(() => {\r\n        storage.state.dispatch({ type: 'SET_DATALOADING', stage: 'data' });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"mainTable\" style={{ width: '100%', height: '100%' }}>\r\n      <header style={{ display: 'flex' }}>\r\n        <HeaderLogin reloadDataTable={reloadDataTable} dataRef={_divDataTable} />\r\n        <div className=\"divSpacingUp\" />\r\n        <Header\r\n          reloadDataTable={reloadDataTable}\r\n          projectList={metaData.projectList}\r\n          dataTable={dataTable}\r\n        />\r\n      </header>\r\n\r\n      <main style={{ display: 'flex' }} className=\"divBottom\">\r\n        <MainLeftSide\r\n          developer={inputFilter.developer}\r\n          developers={developers}\r\n          metaData={metaData}\r\n          dataTable={dataTable}\r\n        />\r\n        <Content\r\n          dataRef={_divDataTable}\r\n          reloadDataTable={reloadDataTable}\r\n          dataTable={dataTable}\r\n          dataTableName={metaData.dataTableName}\r\n        />\r\n\r\n        <Suspense fallback={<p>...</p>}>\r\n          <Hint />\r\n        </Suspense>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","// import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.querySelector('#root')\r\n);\r\n","export const dataTable = [];\r\nexport const metaData = {\r\n  mobile: false,\r\n  user: {},\r\n  dataTableName: 'task',\r\n  projectList: {},\r\n  developerList: {},\r\n  dataTable: {},\r\n  tables: {},\r\n};\r\n\r\nexport const resetDataTable = () => {\r\n  dataTable.splice(0);\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\n// reducers\r\nfunction ALERT(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'SHOW_ALERT':\r\n      state.alert = { status: action.status, message: action.message };\r\n      return state;\r\n    case 'HIDE_ALERT':\r\n      delete state.alert;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction STATE(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'SET_DATALOADING':\r\n      state.dataLoading = action.stage; // chain: root, meta, data => clear\r\n      return state;\r\n    case 'UNSET_DATALOADING':\r\n      delete state.dataLoading;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction TABLE(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'SET_TABLENAME':\r\n      state.tableName = action.tableName;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction META(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'INCREASE':\r\n      state.count++;\r\n      return state;\r\n    case 'ZERO':\r\n      state.count = 0;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction DATA(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'REDRAW':\r\n      state.redraw = action.redraw;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction UPD(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'UPDATE':\r\n      state.update = action.update;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst storage = {\r\n  state: createStore(combineReducers({ STATE })),\r\n  alert: createStore(combineReducers({ ALERT })),\r\n  data: createStore(combineReducers({ DATA })),\r\n  upd: createStore(combineReducers({ UPD })),\r\n  meta: createStore(combineReducers({ META }), { META: { count: 0 } }),\r\n  table: createStore(combineReducers({ TABLE })),\r\n};\r\n\r\nexport default storage;\r\n","// import MomentUtils from '@date-io/moment';\r\n\r\nexport default class DateW extends Date {\r\n  constructor(...props) {\r\n    if (props.length === 0) props[0] = new Date();\r\n    super(props);\r\n  }\r\n\r\n  getWeek = (dowOffset = 1) => {\r\n    dowOffset = dowOffset && typeof dowOffset === 'number' ? dowOffset : 0; // default dowOffset to zero\r\n    const newYear = new Date(this.getFullYear(), 0, 1);\r\n    let day = newYear.getDay() - dowOffset; // the day of week the year begins on\r\n    day = day >= 0 ? day : day + 7;\r\n    const daynum =\r\n      Math.floor(\r\n        (this.getTime() -\r\n          newYear.getTime() -\r\n          (this.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) /\r\n          86400000\r\n      ) + 1;\r\n    let weeknum;\r\n    // if the year starts before the middle of a week\r\n    if (day < 4) {\r\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\r\n      if (weeknum > 52) {\r\n        const nYear = new Date(this.getFullYear() + 1, 0, 1);\r\n        let nday = nYear.getDay() - dowOffset;\r\n        nday = nday >= 0 ? nday : nday + 7;\r\n        // if the next year starts before the middle of\r\n        // the week, it is week #1 of that year\r\n        weeknum = nday < 4 ? 1 : 53;\r\n      }\r\n    } else {\r\n      weeknum = Math.floor((daynum + day - 1) / 7);\r\n    }\r\n    return weeknum;\r\n  };\r\n\r\n  getWeekStr = (dayOffset = 1) => {\r\n    const week = this.getWeek(dayOffset);\r\n    return week < 10 ? `0${week}` : week;\r\n  };\r\n\r\n  getYearWeekStr = (dayOffset = 1) => `${this.getFullYear()}.${this.getWeekStr(dayOffset)}`;\r\n\r\n  static toDateTimeStr = (mode, value) => {\r\n    let date;\r\n    if (typeof value === 'string') {\r\n      date = value;\r\n      if (mode === 'time') date = value.split('T')[1];\r\n    } else if (typeof value === 'object' && value && value._isAMomentObject) {\r\n      switch (mode) {\r\n        case 'date':\r\n          date = value.format('YYYY-MM-DD');\r\n          break;\r\n        case 'time':\r\n          date = value.format('HH:mm:00');\r\n          break;\r\n        case 'datetime':\r\n          date = value.format('YYYY-MM-DD HH:mm:00');\r\n          break;\r\n        default:\r\n          date = undefined;\r\n      }\r\n    } else if (typeof value === 'object' && value instanceof Date) {\r\n      switch (mode) {\r\n        case 'date':\r\n          date = value.toLocaleDateString('ru-RU').replace(/(\\d+)\\.(\\d+)\\.(\\d+)/, '$3-$2-$1');\r\n          break;\r\n        case 'time':\r\n          date = value.toLocaleTimeString('ru-RU').replace(/(\\d+):(\\d+):(\\d+)/, '$1:$2:00');\r\n          break;\r\n        case 'datetime':\r\n          date = `${value\r\n            .toLocaleDateString('ru-RU')\r\n            .replace(/(\\d+?)\\.(\\d+?)\\.(\\d+?)/, '$3-$2-$1')}  ${value\r\n            .toLocaleTimeString('ru-RU')\r\n            .replace(/(\\d+?):(\\d+?):(\\d+?)/, '$1:$2:00')}`;\r\n          break;\r\n        default:\r\n          date = undefined;\r\n      }\r\n    }\r\n    return date;\r\n  };\r\n\r\n  // static\r\n}\r\n"],"sourceRoot":""}