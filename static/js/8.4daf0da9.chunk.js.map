{"version":3,"sources":["Components/Popup/PopupSimpleOutput/PopupSimpleOutput.js","Components/MainCalendar/MainCalendar.js"],"names":["PopupSimpleOutput","isOpened","onClose","title","format","text","Dialog","open","fullWidth","DialogTitle","id","DialogContent","split","map","rowData","dataTitle","dataValue","className","DialogActions","Button","variant","onClick","color","startIcon","React","memo","months","weekDays","calendarModes","today","month","week","day","list","MainCalendar","props","componentWillUnmount","unsubscribe","handleClosePopup","setState","popupIsOpened","dayEventsInfo","datesShown","state","dates","filter","date","dateStr","sort","a","b","time","length","d","replace","description","join","detailedEventInfo","event","info","start","toLocaleDateString","toLocaleTimeString","fullDate","dateEvent","metaData","developerList","responsible","value","participants","p","getDate","getMonth","getDay","handleDayClick","popupText","popupFormat","undefined","popupTitle","handleEventClick","getBackgroundColorByDate","backgroundColor","status","includes","result","bind","this","storage","subscribe","dataLoading","getState","STATE","tableName","dataTable","end","initialView","test","document","location","pathname","events","eventTimeFormat","hour","minute","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","dateClick","eventClick","locale","selectable","weekNumberCalculation","weekends","slotMinTime","headerToolbar","left","center","right","buttonText","Component"],"mappings":"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","file":"static/js/8.4daf0da9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './PopupSimpleOutput.css';\r\n\r\n// Standart dialog: just modal popup with text\r\nfunction PopupSimpleOutput({ isOpened, onClose, title, format, text }) {\r\n  return (\r\n    <Dialog open={isOpened} onClose={onClose} aria-labelledby=\"dialog-title\" fullWidth>\r\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        {format &&\r\n          format === 'listOfData' &&\r\n          text.split('\\n').map((rowData) => {\r\n            const [dataTitle, dataValue] = rowData.split(';');\r\n            return (\r\n              <div\r\n                key={`simpleOutputDialog-field-${dataTitle}`}\r\n                className=\"popup-simple-output__content\"\r\n              >\r\n                <div className=\"popup-simple-output__title\">{dataTitle}:</div>\r\n                <div className=\"popup-simple-output__info\">{dataValue}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        {!format && <span className=\"popup-simple-output__text\">{text}</span>}\r\n      </DialogContent>\r\n      <DialogActions className=\"popup-simple-output__actions\">\r\n        <Button variant=\"outlined\" onClick={onClose} color=\"secondary\" startIcon={<CloseIcon />}>\r\n          Закрыть\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(PopupSimpleOutput);\r\n","import React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nimport { dataTable, metaData } from '../../config/data';\r\nimport storage from '../../storages/commonStorage';\r\nimport PopupSimpleOutput from '../Popup/PopupSimpleOutput/PopupSimpleOutput';\r\n\r\nconst months = [\r\n  'января',\r\n  'февраля',\r\n  'марта',\r\n  'апреля',\r\n  'мая',\r\n  'июня',\r\n  'июля',\r\n  'августа',\r\n  'сентября',\r\n  'октября',\r\n  'ноября',\r\n  'декабря',\r\n];\r\nconst weekDays = ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресение'];\r\nconst calendarModes = { today: 'Сегодня', month: 'Месяц', week: 'Неделя', day: 'День', list: 'Список' };\r\n\r\nexport default class MainCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dates: this.props.dates,\r\n\r\n      popupText: '',\r\n      popupFormat: undefined,\r\n      popupTitle: '',\r\n      popupIsOpened: false,\r\n    };\r\n    this.handleClosePopup = this.handleClosePopup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      const { dataLoading } = storage.state.getState().STATE;\r\n      const { tableName } = storage.state.getState().STATE;\r\n      if (tableName && !dataLoading) this.setState({ dates: [] });\r\n      if (dataLoading && dataLoading === 'data') this.setState({ dates: dataTable });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount = () => this.unsubscribe();\r\n\r\n  handleClosePopup = () => this.setState({ popupIsOpened: false });\r\n\r\n  dayEventsInfo = (day) => {\r\n    const datesShown = this.state.dates\r\n      .filter((date) => date.date === day.dateStr)\r\n      .sort((a, b) => (a.time > b.time ? 1 : -1));\r\n\r\n    return datesShown.length > 0\r\n      ? datesShown\r\n          .map((d) => `${d.time.replace(/(\\d+):(\\d+):(\\d+)/, '$1:$2')}\\n${d.description}`)\r\n          .join('\\n\\n')\r\n      : 'Нет назначенных совещаний';\r\n  };\r\n\r\n  detailedEventInfo = (event) => {\r\n    const info = {\r\n      title: event.event.title,\r\n      date: event.event.start.toLocaleDateString().replace(/(\\d+).(\\d+).(\\d+)/, '$3-$2-$1'),\r\n      time: event.event.start.toLocaleTimeString(),\r\n      fullDate: event.event.start,\r\n    };\r\n    const dateEvent = this.state.dates.filter(\r\n      (d) => d.date === info.date && d.time === info.time && d.description === info.title\r\n    )[0];\r\n\r\n    let text = '';\r\n    text += `Тема;${dateEvent.description}`;\r\n    text += `\\nОтветственный;${metaData.developerList[dateEvent.responsible].value}`;\r\n    text += `\\nУчастники;${dateEvent.participants\r\n      .split(',')\r\n      .map((p) => metaData.developerList[p].value)\r\n      .join(', ')}`;\r\n    text += `\\nДата;${info.fullDate.getDate()} ${months[info.fullDate.getMonth()]}, ${\r\n      weekDays[info.fullDate.getDay() - 1]\r\n    }`;\r\n    text += `\\nВремя;${info.time.replace(/(\\d+):(\\d+):(\\d+)/, '$1:$2')}`;\r\n    return text;\r\n  };\r\n\r\n  handleDayClick = (day) => {\r\n    this.setState({\r\n      popupText: this.dayEventsInfo(day),\r\n      popupFormat: undefined,\r\n      popupTitle: 'Совещания за день',\r\n      popupIsOpened: true,\r\n    });\r\n  };\r\n\r\n  handleEventClick = (event) => {\r\n    this.setState({\r\n      popupText: this.detailedEventInfo(event),\r\n      popupFormat: 'listOfData',\r\n      popupTitle: 'Совещаниe',\r\n      popupIsOpened: true,\r\n    });\r\n  };\r\n\r\n  getBackgroundColorByDate = (date) => {\r\n    let backgroundColor = '';\r\n    if (date.status === 'rejected') {\r\n      backgroundColor = 'red';\r\n    } else if (['done', 'postponed'].includes(date.status)) {\r\n      backgroundColor = 'green';\r\n    } else if (!date.result) {\r\n      backgroundColor = 'green';\r\n    }\r\n\r\n    return backgroundColor;\r\n  };\r\n\r\n  render() {\r\n    const dates = this.state.dates.map((date) => ({\r\n      title: date.description,\r\n      start: `${date.date}T${date.time}`,\r\n      end: `${date.date}T${date.time}`,\r\n      backgroundColor: this.getBackgroundColorByDate(date),\r\n    }));\r\n\r\n    let initialView = 'dayGridMonth';\r\n    if (/\\/calendar\\/list/.test(document.location.pathname)) {\r\n      initialView = 'listWeek';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <FullCalendar\r\n          events={dates}\r\n          eventTimeFormat={{ hour: '2-digit', minute: '2-digit' }}\r\n          plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin]}\r\n          initialView={initialView}\r\n          dateClick={this.handleDayClick}\r\n          eventClick={this.handleEventClick}\r\n          locale=\"ru\"\r\n          selectable\r\n          weekNumberCalculation=\"ISO\"\r\n          weekends={false}\r\n          slotMinTime=\"08:00:00\"\r\n          headerToolbar={{\r\n            left: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\r\n            center: 'title',\r\n            right: 'today prev,next',\r\n          }}\r\n          buttonText={calendarModes}\r\n        />\r\n\r\n        <PopupSimpleOutput\r\n          isOpened={this.state.popupIsOpened}\r\n          text={this.state.popupText}\r\n          format={this.state.popupFormat}\r\n          title={this.state.popupTitle}\r\n          onClose={this.handleClosePopup}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}