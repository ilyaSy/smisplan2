{"version":3,"sources":["SharedComponents/CustomSelect.js","SharedComponents/DateTimePicker.js","SharedComponents/TimePicker.js","SharedComponents/DatePicker.js","SharedComponents/CustomDateTimePicker.js","Components/Popup/PopupEdit/PopupEdit.js","SharedComponents/exportDocx.js","Components/Popup/PopupConfirm/PopupConfirm.js","Components/Popup/PopupAddLinkedInfo/PopupAddLinkedInfo.js","Components/Table/TblActionMenu/TblActionMenu.js"],"names":["CustomSelect","props","handleChange","value","Array","isArray","setState","valueErr","setValue","map","a","join","setFocus","selectRef","focus","filterValues","data","isDisplayed","optionsCounter","maxOptions","RegExp","test","label","options","length","defaultValue","state","offsetTop","this","ReactDOM","findDOMNode","Component","isCreatable","CreatableSelect","Select","selectStyles","input","base","height","fontFamily","marginTop","fontSize","backgroundColor","control","minHeight","border","borderRadius","borderBottom","selectProps","menuIsOpen","borderColor","boxShadow","placeholder","color","option","valueContainer","paddingLeft","marginLeft","indicatorsContainer","padding","clearIndicator","dropdownIndicator","style","allowCreate","ref","styles","menuPlacement","bottom","defaultInputValue","onChange","onMenuOpen","noOptionsMessage","isClearable","isSearchable","required","isMulti","width","filterOption","React","DateTimePicker","useState","utils","MomentUtils","format","fullWidth","ampm","minutesStep","margin","e","_d","className","CustomDateTimePicker","type","PopupEdit","setOpenConfirm","openConfirm","setOpen","open","Object","keys","metaData","dataTable","forEach","property","isEditable","includes","task","realId","listName","vocabulary","getData","then","listInfo","d","id","onClose","handleDateTimeChange","getRealId","indexOf","handleOk","dataEdited","key","DateW","toDateTimeStr","isDataEdited","propertyInfo","dataEditedValue","parseInt","dataTableName","participants","split","responsible","action","console","log","handleSaveAsNew","date","time","confirmMessage","confirmSaveAsNew","week","parseFloat","getYearWeekStr","actionNew","handleUpload","storage","alert","dispatch","status","message","fileUpload","target","files","response","fileUrl","window","location","host","fileName","filesAttached","push","openUrl","url","filterValidKeys","sortValidKeys","b","tableIndex","getDefaultValue","v","tables","specificParameters","tableName","printPDF","tasksList","_dataRef","createRef","bind","match","properties","concat","filter","sort","Dialog","isOpened","classes","paper","DialogTitle","trigger","Tooltip","title","IconButton","content","current","onAfterPrint","CustomIcon","class","tip","textRows","doc","Document","rows","text","Paragraph","children","TextRun","size","font","addSection","Packer","toBlob","blob","saveAs","err","exportDocx","selectString","tasks","t","textToDoc","DialogContent","pKey","inputRef","el","refName","isSelectCreatable","Input","multiline","onKeyDown","stopPropagation","inputProps","maxHeight","overflow","endAdornment","hasFileUploader","InputAdornment","position","display","multiple","htmlFor","component","TextField","disabled","replace","DialogActions","Button","variant","onClick","startIcon","hasEditMenuSaveAsNew","PopupConfirm","actionName","actionText","memo","PopupAddLinkedInfo","editData","fields","field","emptyDataError","metaTable","realID","prop","initialValue","getDefaultValues","list","undefined","k","TblActionMenu","opened","setOpened","menuEl","setMenuEl","menuElSub","setMenuElSub","menuList","setMenuList","isPopupConfirmOpened","setIsPopupConfirmOpened","isPopupEditOpened","setIsPopupEditOpened","isPopupLinkedOpened","setIsPopupLinkedOpened","_menuElSub","useRef","hideBasicElement","parentElement","handleClickSub","event","currentTarget","offsetWidth","item","args","handleOpenPopupLinked","handleClosePopups","closeElSub","handleClickItem","onBeforeClick","Menu","keepMounted","anchorEl","index","Divider","isListOfItems","MenuItem","ListItemIcon","Typography","noWrap","listItems","listItem"],"mappings":"gPAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAwBRC,aAAe,SAACC,GACVA,GAAmB,KAAVA,GAA0B,SAAVA,GAAoBC,MAAMC,QAAQF,IAC7D,EAAKG,SAAS,CAAEC,UAAU,IAC1B,EAAKD,SAAS,CAAEH,UACmB,oBAAxB,EAAKF,MAAMO,UACpB,EAAKP,MAAMO,SAASL,EAAMM,KAAI,SAACC,GAAD,OAAOA,EAAEP,SAAOQ,KAAK,OAE5CR,GAAmB,KAAVA,GAA0B,SAAVA,GAClC,EAAKG,SAAS,CAAEC,UAAU,IAC1B,EAAKD,SAAS,CAAEH,UACmB,oBAAxB,EAAKF,MAAMO,UACpB,EAAKP,MAAMO,SAASL,EAAMA,SAG5B,EAAKG,SAAS,CAAEH,UACmB,oBAAxB,EAAKF,MAAMO,UACpB,EAAKP,MAAMO,SAAS,MAzCP,EA8CnBI,SAAW,kBAAM,EAAKC,UAAUC,SA9Cb,EAgDnBC,aAAe,SAACC,EAAMb,GACpB,IAAIc,EAAc,EAAKC,eAAiB,EAAKC,WAEzChB,GAAmB,KAAVA,IACI,IAAIiB,OAAOjB,EAAO,KACrBkB,KAAKL,EAAKM,SAAQL,GAAc,IAO9C,OAJIA,GAAa,EAAKC,iBAClB,EAAKA,iBAAmB,EAAKjB,MAAMsB,QAAQC,QAAU,EAAKN,iBAAmB,EAAKC,aACpF,EAAKD,eAAiB,GAEjBD,GAzDP,IAAIQ,EAAe,GAHF,OAIb,EAAKxB,MAAMwB,aACVA,EAAiB,EAAKxB,MAAtBwB,aACM,EAAKxB,MAAMwB,eACpBA,EAAe,IAGjB,EAAKC,MAAQ,CACXvB,MAAOsB,EACPlB,UAAU,EACVoB,UAAW,GAGb,EAAKR,WAAa,EAAKlB,MAAMkB,WAAa,EAAKlB,MAAMkB,WAAa,GAClE,EAAKD,eAAiB,EAjBL,E,qDAoBnB,WAEEU,KAAKtB,SAAS,CAAEqB,UAAWE,IAASC,YAAYF,MAAMD,c,oBAyCxD,WAAU,IAAD,OACDI,EAAYH,KAAK3B,MAAM+B,YAAcC,IAAkBC,IACvDC,EAAe,CACnBC,MAAO,SAACC,GAAD,mBAAC,eACHA,GADE,IAELC,OAAQ,OACRC,WAAY,mBACZC,UAAW,UACXC,SAAU,OACVC,gBAAiB,iBAEnBC,QAAS,SAACN,EAAMX,GAAP,mBAAC,eACLW,GADI,IAEPO,UAAW,OACXN,OAAQ,cACRC,WAAY,mBACZE,SAAU,OACVC,gBAAiB,cACjBG,OAAQ,MACRC,aAAc,MACdC,aAAc,EAAKrB,MAAMnB,UAErBmB,EAAMsB,YAAYC,WADlB,YAGA,YACJC,YAAa,EAAKxB,MAAMnB,SACpB,qBACAmB,EAAMsB,YAAYC,WAClB,qBACA,iCACJE,UAAW,OACX,UAAW,CACTJ,cAAcrB,EAAMsB,YAAYC,WAAa,aAC7CC,YAAa,EAAKxB,MAAMnB,SACpB,UACAmB,EAAMsB,YAAYC,WAClB,UACA,YAGRG,YAAa,SAACf,EAAMX,GAAP,mBAAC,eACTW,GADQ,IAEXC,OAAQ,OACRC,WAAY,mBACZE,SAAU,OACVY,MAAO,EAAK3B,MAAMnB,SAAW,UAAYmB,EAAMsB,YAAYC,WAAa,UAAY,GACpFP,gBAAiB,iBAEnBY,OAAQ,SAACjB,GAAD,mBAAC,eACJA,GADG,IAENE,WAAY,mBACZE,SAAU,OACVD,UAAW,OACXa,MAAO,yBAETE,eAAgB,SAAClB,GAAD,mBAAC,eACZA,GADW,IAEdO,UAAW,OACXN,OAAQ,cACRE,UAAW,OACXgB,YAAa,MACbC,WAAY,UAEdC,oBAAqB,SAACrB,GAAD,mBAAC,eACjBA,GADgB,IAEnBO,UAAW,kBACXe,QAAS,oBAEXC,eAAgB,SAACvB,GAAD,mBAAC,eACZA,GADW,IAEdsB,QAAS,gCAEXE,kBAAmB,SAACxB,GAAD,mBAAC,eACfA,GADc,IAEjBsB,QAAS,iCAIb,OACE,qBAAKG,MAAOlC,KAAK3B,MAAM6D,MAAvB,SACE,cAAC/B,EAAD,CACEgC,YAAanC,KAAK3B,MAAM8D,YACxBC,IAAKpC,KAAKf,UACVU,QAASK,KAAK3B,MAAMsB,QACpB0C,OAAQ9B,EAER+B,cAAetC,KAAK3B,MAAMkE,QAAoBvC,KAAKF,MAAMC,UAAY,IAAlC,SAAmD,MACtFxB,MAAOyB,KAAKF,MAAMvB,MAClBiD,YAAaxB,KAAK3B,MAAMqB,MACxBG,aAAcG,KAAK3B,MAAMwB,aACzB2C,kBAAmBxC,KAAK3B,MAAMmE,kBAC9BC,SAAUzC,KAAK1B,aACfoE,WAAY,WACV,EAAKpD,eAAiB,GAExBqD,iBAAkB,iBAAM,0IACxBC,aAAW,EACXC,cAAY,EACZC,UAAQ,EACRC,UAAW/C,KAAK3B,MAAM0E,QACtBb,MAAO,CAAEc,MAAO,SAChBC,aAAcjD,KAAKb,qB,GArKa+D,IAAM/C,Y,iJCAjC,SAASgD,EAAe9E,GACrC,MAA0B6E,IAAME,WAAhC,mBAAO7E,EAAP,KAAcK,EAAd,KAMA,OACE,cAAC,IAAD,CAAyByE,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,OAAO,mBACPC,WAAS,EACTC,MAAM,EACNC,YAAa,EACbC,OAAO,SACPlB,SAbW,SAACmB,GAChBhF,EAASgF,EAAEC,IACXxF,EAAMoE,SAASmB,EAAEC,KAYbtF,MAAOA,M,aChBA,SAAS4E,EAAe9E,GACrC,MAA0B6E,IAAME,SAAN,OAAe/E,QAAf,IAAeA,OAAf,EAAeA,EAAOE,OAAhD,mBAAOA,EAAP,KAAcK,EAAd,KACM4E,EAAgC,OAApBnF,EAAMmF,UAMxB,OACE,cAAC,IAAD,CAAyBH,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,OAAO,QACPC,UAAWA,EACXG,OAAO,SACPF,MAAM,EACNC,YAAa,EACbjB,SAbW,SAACmB,GAChBhF,EAASgF,EAAEC,IACXxF,EAAMoE,SAASmB,EAAEC,KAYbtF,MAAOA,EACP2D,MAAO7D,EAAM6D,MACb4B,UAAWzF,EAAMyF,c,aCnBV,SAASX,EAAe9E,GACrC,MAA0B6E,IAAME,SAAN,OAAe/E,QAAf,IAAeA,OAAf,EAAeA,EAAOE,OAAhD,mBAAOA,EAAP,KAAcK,EAAd,KACM4E,EAAgC,OAApBnF,EAAMmF,UAMxB,OACE,cAAC,IAAD,CAAyBH,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,OAAO,aACPC,UAAWA,EACXG,OAAO,SACPlB,SAXW,SAACmB,GAChBhF,EAASgF,EAAEC,IACXxF,EAAMoE,SAASmB,EAAEC,KAUbtF,MAAOA,EACP2D,MAAO7D,EAAM6D,UCjBN,SAAS6B,EAAqB1F,GAC3C,OACE,qCACkB,aAAfA,EAAM2F,MAAuB,cAAC,EAAD,eAAoB3F,IAClC,SAAfA,EAAM2F,MAAmB,cAAC,EAAD,eAAgB3F,IAC1B,SAAfA,EAAM2F,MAAmB,cAAC,EAAD,eAAgB3F,S,8jBC6E3B4F,E,kDACnB,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IA0CR6F,eAAiB,SAACC,GAAD,OAAiB,EAAKzF,SAAS,CAAEyF,iBA3C/B,EA6CnBC,QAAU,SAACC,GACT,EAAK3F,SAAS,CAAE2F,SAEZA,EACFC,OAAOC,KAAKC,IAASC,WAAWC,SAAQ,SAACC,GACvC,GACEH,IAASC,UAAUE,GAAUC,YAC7B,CAAC,SAAU,gBAAgBC,SAASL,IAASC,UAAUE,GAAUX,MACjE,CACA,EAAKc,KAAKH,GAAYF,IAAU,EAAKM,QAAQJ,GAE7C,IAAMK,EAAWR,IAASC,UAAUE,GAAUM,WAC1CT,IAASC,UAAUE,GAAUM,WAC7BN,EACCH,IAAS,GAAD,OAAIQ,EAAJ,UACXE,YAAQF,EAAU,UAAUG,MAAK,SAAC/F,GAChC,IAAMgG,EAAW,GACjBhG,EAAKsF,SAAQ,SAACW,GACZD,EAASC,EAAEC,IAAMD,KAEnB,EAAK3G,SAAL,yBAAoBsG,EAApB,QAAqCI,WAM7C,EAAK/G,MAAMkH,WAvEI,EA2EnBC,qBAAuB,SAACb,GAAD,OAAc,SAACpG,GAAD,OAAW,EAAKG,SAAL,eAAiBiG,EAAWpG,MA3EzD,EA6EnBkH,UAAY,kBAAMhB,IAAU5F,KAAI,SAACiG,GAAD,OAAUA,EAAKQ,MAAII,QAAQ,EAAKrH,MAAMiH,KA7EnD,EA+EnBK,SAAW,WACT,IAAMb,EAAOL,IAAU,EAAKgB,aAEtBG,EAAa,GACnBtB,OAAOC,KAAKC,IAASC,WAAWC,SAAQ,SAACmB,GAI7B,IAAD,EAHG,uBAARA,GAAwC,cAARA,IACtB,cAARA,EACFD,EAAWC,GAAOf,EAAKe,IAEvBD,EAAWC,GAAO,EAAK/F,MAAM+F,GAAO,EAAK/F,MAAM+F,IAAO,YAAKA,UAAL,eAAWtH,QAAS,KAEtE,CAAC,WAAY,OAAQ,QAAQsG,SAASL,IAASC,UAAUoB,GAAK7B,QAChE4B,EAAWC,GAAOC,IAAMC,cAAcvB,IAASC,UAAUoB,GAAK7B,KAAM,EAAKlE,MAAM+F,UAOvF,IAAIG,GAAe,EACnB1B,OAAOC,KAAKqB,GAAYlB,SAAQ,SAACmB,GAC/B,IAAMI,EAAezB,IAASC,UAAUoB,GAClCK,EACkB,QAAtBD,EAAajC,KAAiBmC,SAASP,EAAWC,GAAM,IAAMD,EAAWC,GACjD,QAAtBI,EAAajC,MAAkBkC,IAAoBpB,EAAKe,KAC1DG,GAAe,MAIY,eAA3BxB,IAAS4B,gBACNR,EAAWS,aAAaC,MAAM,KAAKzB,SAASe,EAAWW,eAC1DX,EAAWS,aAAX,UAA6BT,EAAWW,YAAxC,YAAuDX,EAAWS,gBAIlEL,EACF,EAAK3H,MAAMmI,OAAO,EAAKnI,MAAMiH,GAAIM,GAEjCa,QAAQC,IAAI,2IAEd,EAAKtC,SAAQ,IAvHI,EA0HnBuC,gBAAkB,WAChB,IAAM7B,EAAOL,IAAU,EAAKgB,aAExBX,EAAK8B,OAAS,EAAK9G,MAAM8G,MAAQ9B,EAAK+B,OAAS,EAAK/G,MAAM+G,MAC5D,EAAKnI,SAAS,CAAEoI,eAAgB,6JAElC,EAAK5C,gBAAe,IAhIH,EAmInB6C,iBAAmB,WACjB,IAAMjC,EAAOL,IAAU,EAAKgB,aAEtBG,EAAa,GACnBtB,OAAOC,KAAKC,IAASC,WAAWC,SAAQ,SAACmB,GACmB,IAAD,EAA7C,uBAARA,GAAwC,cAARA,IAClCD,EAAWC,GAAO,EAAK/F,MAAM+F,GAAO,EAAK/F,MAAM+F,IAAO,YAAKA,UAAL,eAAWtH,QAAS,KAE9D,cAARsH,IACFD,EAAWC,GAAOf,EAAKe,IAGrB,CAAC,WAAY,OAAQ,QAAQhB,SAASL,IAASC,UAAUoB,GAAK7B,QAChE4B,EAAWC,GAAOC,IAAMC,cAAcvB,IAASC,UAAUoB,GAAK7B,KAAM,EAAKlE,MAAM+F,SAKjFD,EAAWoB,OACbpB,EAAWoB,KAAOC,WAAW,IAAInB,IAAMF,EAAWgB,MAAMM,mBAG1D,EAAK7I,MAAM8I,UAAUvB,GACrB,EAAKxB,SAAQ,IA1JI,EA6JnBgD,aAAe,SAACxD,EAAGe,GACjB0C,IAAQC,MAAMC,SAAS,CAAEvD,KAAM,aAAcwD,OAAQ,OAAQC,QAAS,mGACtEC,YAAW9D,EAAE+D,OAAOC,MAAM,IAAIzC,MAAK,YAAwB,IAAD,mBAArB0C,EAAqB,KACxD,GADwD,KAgBtDR,IAAQC,MAAMC,SAAS,CACrBvD,KAAM,aACNwD,OAAQ,OACRC,QAAS,iHAlBD,CACVJ,IAAQC,MAAMC,SAAS,CACrBvD,KAAM,aACNwD,OAAQ,UACRC,QAAS,sNAEX,IAAMK,EAAO,iBAAaC,OAAOC,SAASC,KAA7B,0BAAmDJ,EAASK,UACzE,EAAKvD,GAAUpG,MAAf,kCAAkDuJ,GAElD,IAAMK,EAAgB,GAClB,EAAKrI,MAAL,UAAc6E,EAAd,mBACFwD,EAAcC,KAAd,MAAAD,EAAa,YAAS,EAAKrI,MAAL,UAAc6E,EAAd,oBACxBwD,EAAcC,KAAKN,GACnB,EAAKpJ,SAAL,yBAAoBiG,EAApB,iBAA8CwD,SA7KjC,EAwLnBE,QAAU,SAACC,GAAD,OAASP,OAAO1D,KAAKiE,EAAK,SAAU,KAxL3B,EA0LnBC,gBAAkB,SAAC1C,GAAD,MAAiB,uBAARA,GAAwC,cAARA,GA1LxC,EA4LnB2C,cAAgB,SAAC1J,EAAG2J,GAAJ,OACdjE,IAASC,UAAU3F,GAAG4J,YAAclE,IAASC,UAAUgE,GAAGC,WAAa,GAAK,GA7L3D,EA+LnBC,gBAAkB,SAAChE,GACjB,IAAMsB,EAAezB,IAASC,UAAUE,GAClCK,EAAWR,IAASC,UAAUE,GAAUM,YAAcN,EACtDS,EAAWZ,IAAS,GAAD,OAAIQ,EAAJ,UAAuB,EAAKlF,MAAL,UAAckF,EAAd,SAE5CnF,EAAe,EAAKiF,KAAKH,GAW7B,MAV0B,iBAAtBsB,EAAajC,MAAiD,WAAtBiC,EAAajC,OACvDnE,EAAe,EAAKiF,KAAKH,GACrB,EAAKG,KAAKH,GAAU2B,MAAM,KAAKzH,KAAI,SAAC+J,GAAD,YAAQ,CAAErK,MAAOqK,EAAGlJ,OAAO,UAAA0F,EAASwD,UAAT,eAAarK,QAASqK,MACpF,MAGW,cAAbjE,GAA4BH,IAASqE,OAAT,UAAmBhJ,EAAnB,UAAwCiJ,qBACtEjJ,EAAe2E,IAASqE,OAAT,UAAmBhJ,EAAnB,UAAwCiJ,mBAAmBC,WAGrElJ,GA5MP,EAAKC,MAAQ,CACXqE,aAAa,EACb2C,eAAgB,GAChBkC,UAAU,EACVC,UAAW,IAEb,EAAKC,SAAWhG,IAAMiG,YACtB,EAAK/E,QAAU,EAAKA,QAAQgF,KAAb,gBACX,EAAK/K,MAAMiH,KACb,EAAKP,OAASN,IAAU5F,KAAI,SAACiG,GAAD,OAAUA,EAAKQ,MAAII,QAAQ,EAAKrH,MAAMiH,IAClE,EAAKR,KAAOL,IAAU,EAAKM,QAE3BT,OAAOC,KAAKC,IAASC,WAAWC,SAAQ,SAACC,IACkC,IAArE,CAAC,WAAY,QAAQe,QAAQlB,IAASC,UAAUE,GAAUX,MAC5D,EAAKlE,MAAM6E,GACT,EAAKG,KAAKH,IAAqC,KAAxB,EAAKG,KAAKH,GAAmB,EAAKG,KAAKH,GAAY,MACV,IAAzD,CAAC,QAAQe,QAAQlB,IAASC,UAAUE,GAAUX,MACvD,EAAKlE,MAAM6E,GACT,EAAKG,KAAKH,IAAqC,KAAxB,EAAKG,KAAKH,GAAjC,qBACkB,EAAKG,KAAKH,IACxB,MAC8E,IAA3E,CAAC,SAAU,gBAAgBe,QAAQlB,IAASC,UAAUE,GAAUX,QACzE,EAAKlE,MAAM6E,GAAY,EAAKG,KAAKH,IAGnC,IAAMwD,EAAgB,GAEpB,mEAAmE1I,KAAK,EAAKqF,KAAKH,MAElFwD,EAAcC,KACZ,EAAKtD,KAAKH,GAAU0E,MAClB,8EAGJ,EAAKvJ,MAAL,UAAc6E,EAAd,kBAAyCwD,EAAc,QArC5C,E,0CAkNnB,WAAU,IAAD,OACDmB,EAAa,GAAGC,OACpBjF,OAAOC,KAAKC,IAASC,WAClB+E,OAAOxJ,KAAKuI,iBACZiB,QAAO,SAAC3D,GAAD,OAASrB,IAASC,UAAUoB,GAAKjB,cACxC6E,KAAKzJ,KAAKwI,eACblE,OAAOC,KAAKC,IAASC,WAClB+E,OAAOxJ,KAAKuI,iBACZiB,QAAO,SAAC3D,GAAD,OAAUrB,IAASC,UAAUoB,GAAKjB,cACzC6E,KAAKzJ,KAAKwI,gBAGf,OACExI,KAAK8E,MACH,eAAC4E,EAAA,EAAD,CACErF,KAAMrE,KAAK3B,MAAMsL,SACjBpE,QAASvF,KAAK3B,MAAMkH,QACpB,kBAAgB,eAChB/B,WAAS,EACToG,QAAS,CAAEC,MAAO,eALpB,UAOE,sBAAK/F,UAAU,qBAAf,UACE,cAACgG,EAAA,EAAD,CAAaxE,GAAG,eAAhB,kGACA,sBAAKxB,UAAU,wBAAf,UACE,cAAC,IAAD,CACEiG,QAAS,kBACP,cAACC,EAAA,EAAD,CAASC,MAAM,mDAAf,SACE,cAACC,EAAA,EAAD,CAAYpG,UAAU,MAAM5B,MAAO,CAAEH,QAAS,OAA9C,SACE,cAAC,IAAD,CAAWlB,SAAS,eAI1BsJ,QAAS,WAEP,OADA,EAAKzL,SAAS,CAAEsK,UAAU,IACnB,EAAKE,SAASkB,SAEvBC,aAAc,WACZ,EAAK3L,SAAS,CAAEsK,UAAU,OAGF,eAA3BxE,IAAS4B,eACR,cAACkE,EAAA,EAAD,CACEC,MAAM,WACNC,IAAI,qIACJ3J,SAAS,QACT2F,OAAQ,kBClVX,SAAoBiE,GACjCpD,IAAQC,MAAMC,SAAS,CACrBvD,KAAM,aACNwD,OAAQ,OACRC,QAAS,oJAGX,IAAMiD,EAAM,IAAIC,WACVC,EAAO,GAEb,IACEH,EAAS/F,SAAQ,SAACmG,GAChBD,EAAKxC,KAAK,IAAI0C,YAAU,CAAEC,SAAU,CAAC,IAAIC,UAAQ,CAAEH,OAAMI,KAAM,KAAMC,KAAM,iBAG7ER,EAAIS,WAAW,CAAEJ,SAAUH,IAE3BQ,SAAOC,OAAOX,GAAKvF,MAAK,SAACmG,GACvBC,iBAAOD,EAAM,0BACbjE,IAAQC,MAAMC,SAAS,CACrBvD,KAAM,aACNwD,OAAQ,UACRC,QAAS,4MAGb,MAAO+D,GACPnE,IAAQC,MAAMC,SAAS,CACrBvD,KAAM,aACNwD,OAAQ,OACRC,QAAS,oMAEXhB,QAAQC,IAAR,kQAA+D8E,IAGjE,OAAO,EDgTuBC,CAtTd,SAAC3G,EAAMmE,GACvB,IAAM2B,EAAO,CAAC,oGAAqBpG,IAASsE,mBAAmBC,UAAW,IAEpEO,EAAa,GAoCnB,GAnCAhF,OAAOC,KAAKC,IAASC,WAClB+E,QACC,SAAC3D,GAAD,MAAiB,uBAARA,GAAwC,cAARA,GAAuBrB,IAASC,UAAUoB,GAAKjB,cAEzF6E,MAAK,SAAC3K,EAAG2J,GAAJ,OAAWjE,IAASC,UAAU3F,GAAG4J,YAAclE,IAASC,UAAUgE,GAAGC,WAAa,GAAK,KAC5FhE,SAAQ,SAACC,GAAD,OAAc2E,EAAWlB,KAAKzD,MACzCL,OAAOC,KAAKC,IAASC,WAClB+E,QACC,SAAC3D,GAAD,MAAiB,uBAARA,GAAwC,cAARA,IAAwBrB,IAASC,UAAUoB,GAAKjB,cAE1F6E,MAAK,SAAC3K,EAAG2J,GAAJ,OAAWjE,IAASC,UAAU3F,GAAG4J,YAAclE,IAASC,UAAUgE,GAAGC,WAAa,GAAK,KAC5FhE,SAAQ,SAACC,GAAD,OAAc2E,EAAWlB,KAAKzD,MAEzC2E,EAAW5E,SAAQ,SAACC,GAClB,IAAMsB,EAAezB,IAASC,UAAUE,GAClCS,EAAWZ,IAASC,UAAUE,GAAUM,WAC1CT,IAAS,GAAD,OAAIA,IAASC,UAAUE,GAAUM,WAAjC,SACRT,IAAS,GAAD,OAAIG,EAAJ,SAERpG,EAAQuG,EAAKH,GAAYG,EAAKH,GAAY,GAK9C,GAJiB,cAAbA,GAA4BH,IAASqE,OAAT,UAAmBtK,EAAnB,UAAiCuK,qBAC/DvK,EAAQiG,IAASqE,OAAT,UAAmBtK,EAAnB,UAAiCuK,mBAAmBC,YAGiB,IAA3E,CAAC,SAAU,gBAAgBrD,QAAQlB,IAASC,UAAUE,GAAUX,OAA0B,KAAVzF,EAAc,CAChG,IAAMmN,EAAenN,EACrBA,EAAQ,GACRmN,EAAapF,MAAM,KAAK5B,SAAQ,SAACkE,GAAO,IAAD,IACrCrK,GAAmB,KAAVA,GAAe,UAAA6G,EAASwD,UAAT,eAAarK,QAASqK,EAArC,YAA6C,UAAAxD,EAASwD,UAAT,eAAarK,QAASqK,MAIhFgC,EAAKxC,KAAL,UAAanC,EAAa1H,MAA1B,eAAsCA,OAGT,eAA3BiG,IAAS4B,cAAgC,CAC3C,IAAMuF,EAAQ1C,EACd2B,EAAKxC,KAAK,IACNuD,EAAM/L,OAAS,GACjBgL,EAAKxC,KAAK,sGACVuD,EAAMjH,SAAQ,SAACkH,GAAD,OAAOhB,EAAKxC,KAAKwD,OAE/BhB,EAAKxC,KAAK,yKAId,OAAOwC,EAoQkCiB,CAAU,EAAK/G,KAAM,EAAKhF,MAAMmJ,WAAYzE,cAK7E,cAACsH,EAAA,EAAD,CAAe1J,IAAKpC,KAAKkJ,SAAzB,SACGI,EAAWzK,KAAI,SAAC8F,GACf,IAAMsB,EAAezB,IAASC,UAAUE,GAClCK,EAAWR,IAASC,UAAUE,GAAUM,WAC1CT,IAASC,UAAUE,GAAUM,WAC7BN,EACES,EAAWZ,IAAS,GAAD,OAAIQ,EAAJ,SACrBR,IAAS,GAAD,OAAIQ,EAAJ,SACR,EAAKlF,MAAL,UAAckF,EAAd,SAEAzG,EAAQ,EAAKuG,KAAKH,GAKtB,MAJiB,cAAbA,GAA4BH,IAASqE,OAAT,UAAmBtK,EAAnB,UAAiCuK,qBAC/DvK,EAAQiG,IAASqE,OAAT,UAAmBtK,EAAnB,UAAiCuK,mBAAmBC,WAI5D,gCACE,sBAA4CjF,UAAU,kBAAtD,UACE,qBAAK5B,MAAO,CAAET,MAAQwE,EAAarB,WAA4C,GAA/B,8BAAhD,SACGqB,EAAa1H,QAEf0H,EAAarB,aACW,iBAAtBqB,EAAajC,MAAiD,WAAtBiC,EAAajC,OACtDoB,GACE,cAAChH,EAAA,EAAD,CACE8D,MAAO,CAAEc,MAAO,OAAQhC,UAAW,OAAQJ,UAAW,OACtDjB,QAAS2E,OAAOC,KAAKa,GAClBqE,MAAK,SAAC3K,EAAG2J,GAAJ,OAAWrD,EAAStG,GAAGP,OAAS6G,EAASqD,GAAGlK,MAAQ,GAAK,KAC9DM,KAAI,SAACkN,GAAD,MAAW,CAAExN,MAAOwN,EAAMrM,MAAO0F,EAAS2G,GAAMxN,UACvDgE,QAAM,EACNH,IAAKuC,EACLqH,SAAU,SAACC,GACT,EAAKtH,GAAYsH,GAEnBC,QAASvH,EACT9E,aAAc,EAAK8I,gBAAgBhE,GACnC/F,SAAU,SAACgK,GACT,EAAKlK,SAAL,eAAiBiG,EAAWiE,KAE9BlJ,MAAM,gDACNqD,QAA+B,iBAAtBkD,EAAajC,KACtB5D,YAAa6F,EAAakG,oBAG/BlG,EAAarB,YACZ,CAAC,SAAU,MAAO,YAAYC,SAASoB,EAAajC,OAClD,cAACoI,EAAA,EAAD,CACEvM,aAAc,EAAK8I,gBAAgBhE,GACnCnB,WAAS,EACT6I,WAAS,EACTC,UAAW,SAAC1I,GAAD,OAAOA,EAAE2I,mBACpBP,SAAU,SAACC,GACT,EAAKtH,GAAYsH,GAEnBO,WAAY,CACVtK,MAAO,CACLuK,UAAW,EAAK3M,MAAMkJ,SAAW,SAAW,QAC5C0D,SAAU,qBAGdC,aACE1G,EAAa2G,kBACZ,EAAK9M,MAAMkJ,UACV,qBAAKlF,UAAU,0BAAf,SACE,eAAC+I,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,uBACExH,GAAG,0BACHtB,KAAK,OACL9B,MAAO,CAAE6K,QAAS,QAClBC,UAAQ,EACRvK,SAAU,SAACmB,GAAD,OAAO,EAAKwD,aAAaxD,EAAGe,MAExC,uBAAOsI,QAAQ,0BAAf,SACE,cAACjD,EAAA,EAAD,CAASC,MAAM,yDAAf,SACE,cAACC,EAAA,EAAD,CAAYzI,MAAM,UAAUyL,UAAU,OAAtC,SACE,cAAC,IAAD,iBAUnBjH,EAAarB,YACZ,CAAC,WAAY,OAAQ,QAAQC,SAASoB,EAAajC,OACjD,cAACD,EAAA,EAAD,CACEC,KAAMiC,EAAajC,KACnBzF,MAAO,EAAKuB,MAAM6E,GAClBlC,SAAU,EAAK+C,qBAAqBb,MAGxCsB,EAAarB,YACb,cAACuI,EAAA,EAAD,CACEtN,aAAc,EAAK8I,gBAAgBhE,GACnCqH,SAAU,SAACC,GACT,EAAKtH,GAAYsH,GAEnBzI,WAAS,EACT4J,UAAQ,MAnFd,qBAAwBzI,EAAxB,aAwFC,EAAK7E,MAAL,UAAc6E,EAAd,mBACC,EAAK7E,MAAL,UAAc6E,EAAd,kBAAuC/E,OAAS,GAC9C,qBAAKkE,UAAU,4BAAf,SACG,EAAKhE,MAAL,UAAc6E,EAAd,kBAAuC9F,KAAI,SAACiJ,GAAD,OAC1C,cAACwC,EAAA,EAAD,CACEC,MAAM,iBACNC,IAAG,sDAAc1C,EAAQuF,QAAQ,aAAc,OAC/CrJ,KAAK,cACLnD,SAAS,QACT2F,OAAQ,kBAAM,EAAK6B,QAAQP,KAL7B,UAMUA,WAnGpB,qBAAwBnD,EAAxB,eA4GN,eAAC2I,EAAA,EAAD,CAAexJ,UAAU,sBAAzB,UACE,cAACyJ,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK2F,SACdlE,MAAM,UACNqC,UAAU,uBACV4J,UAAW,cAAC,IAAD,IALb,+GASClJ,IAASsE,mBAAmB6E,sBAC3B,cAACJ,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK2G,gBACdlF,MAAM,UACNqC,UAAU,4BACV4J,UAAW,cAAC,IAAD,IALb,sHAUF,cAACH,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK3B,MAAMkH,QACpB9D,MAAM,YACNiM,UAAW,cAAC,IAAD,IAJb,wDASA,eAAChE,EAAA,EAAD,CACErF,KAAMrE,KAAKF,MAAMqE,YACjBoB,QAAS,kBAAM,EAAKrB,gBAAe,IACnC,kBAAgB,eAChBV,WAAS,EAJX,UAME,eAACsG,EAAA,EAAD,CAAaxE,GAAG,eAAhB,sKAC+BtF,KAAKF,MAAMgH,eAD1C,QAGA,eAACwG,EAAA,EAAD,CAAexJ,UAAU,sBAAzB,UACE,cAACyJ,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK+G,iBACdtF,MAAM,UACNqC,UAAU,uBACV4J,UAAW,cAAC,IAAD,IALb,0BASA,cAACH,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAS,kBAAM,EAAKvJ,gBAAe,IACnCzC,MAAM,YACNiM,UAAW,cAAC,IAAD,IAJb,kE,GAlbuBxK,IAAM/C,W,OE/E7C,SAASyN,EAAT,GAAkF,IAA1DtI,EAAyD,EAAzDA,GAAIkB,EAAqD,EAArDA,OAAQqH,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,WAAYnE,EAAqB,EAArBA,SAAUpE,EAAW,EAAXA,QAMpE,OACE,eAACmE,EAAA,EAAD,CAAQrF,KAAMsF,EAAUpE,QAASA,EAAS,kBAAgB,eAAe/B,WAAS,EAAlF,UACE,eAACsG,EAAA,EAAD,CAAaxE,GAAG,eAAhB,yGAAiDuI,EAAjD,QACA,eAAC/B,EAAA,EAAD,WACGgC,GAAc,qBAAKhK,UAAU,yBAAf,SAAyCgK,IACxD,sBAAMhK,UAAU,yBAAhB,gLAEF,eAACwJ,EAAA,EAAD,CAAexJ,UAAU,yBAAzB,UACE,cAACyJ,EAAA,EAAD,CACEC,QAAQ,WACRC,QAfS,WACfjH,EAAOlB,GACPC,KAcM9D,MAAM,UACNqC,UAAU,uBACV4J,UAAW,cAAC,IAAD,IALb,0BASA,cAACH,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAASlI,EAAS9D,MAAM,YAAYiM,UAAW,cAAC,IAAD,IAA1E,wDAQOxK,WAAM6K,KAAKH,G,UCtBLI,I,yDACnB,WAAY3P,GAAQ,IAAD,uBACjB,cAAMA,IA6CRmH,qBAAuB,SAACb,GAAD,OAAc,SAACpG,GAAD,OAAW,EAAKG,SAAL,eAAiBiG,EAAWpG,MA9CzD,EAgDnBoH,SAAW,WACT,IAAMsI,EAAW,GACjB3J,OAAOC,KAAK,EAAKzE,MAAMoO,QAAQxJ,SAAQ,SAACyJ,GACtCF,EAASE,GAAS,MAGpB,IAAIC,EAAiB,EACbpK,EAAS,EAAK3F,MAAd2F,KACFqK,EAAY7J,IAASqE,OAAT,UAAmB7E,EAAnB,UAClBM,OAAOC,KAAK0J,GAAUvJ,SAAQ,SAACmB,GAAS,IAAD,EACrCoI,EAASpI,GAAO,EAAK/F,MAAM+F,GAAO,EAAK/F,MAAM+F,IAAO,YAAKA,UAAL,eAAWtH,QAAS,KAEpE,CAAC,WAAY,OAAQ,QAAQsG,SAASwJ,EAAU5J,UAAUoB,GAAK7B,QACjEiK,EAASpI,GAAOC,IAAMC,cAAcsI,EAAU5J,UAAUoB,GAAK7B,KAAM,EAAKlE,MAAM+F,KAGpE,SAARA,GAAoBoI,EAASpI,IAA0B,KAAlBoI,EAASpI,IAAcuI,OAG9DC,EAAU5J,UAAUuC,OACtBiH,EAASjH,KAAO,IAAIlB,IAAMmI,EAASrH,MAAMM,kBAGvCkH,EACF,EAAK1P,SAAS,CAAE0P,gBAAgB,KAEhC,EAAK1P,SAAS,CAAE0P,gBAAgB,IAChC,EAAK/P,MAAMmI,OAAO,EAAKnI,MAAMiH,GAAI,EAAKjH,MAAM2F,KAAMiK,GAClD,EAAK5P,MAAMkH,YA1Eb,EAAKzF,MAAQ,CACXuE,KAAM,EAAKhG,MAAMsL,SACjByE,gBAAgB,GAIlB,IAAQpK,EAAS,EAAK3F,MAAd2F,KACFkK,EAAS,GACTG,EAAY7J,IAASqE,OAAT,UAAmB7E,EAAnB,UACZsK,EAAS7J,IAAU5F,KAAI,SAACiG,GAAD,OAAUA,EAAKQ,MAAII,QAAQ,EAAKrH,MAAMiH,IAXlD,OAYjBhB,OAAOC,KAAK8J,EAAU5J,WAAWC,SAAQ,SAAC6J,GAC3B,OAATA,GAA4D,KAA3CF,EAAU5J,UAAU8J,GAAM1O,eAC7CqO,EAAOK,GAAQ,CACbvK,KAAMqK,EAAU5J,UAAU8J,GAAMvK,KAChCzF,MAAO8P,EAAU5J,UAAU8J,GAAMhQ,OAG/B8P,EAAU5J,UAAU8J,GAAMC,eAC5BN,EAAOK,GAAMC,aAAeC,aAC1BH,EACAC,EACAF,EAAU5J,UACV,iBAIA,CAAC,SAAU,gBAAgBI,SAASwJ,EAAU5J,UAAU8J,GAAMvK,QAChEkK,EAAOK,GAAMG,KAAOL,EAAU5J,UAAU8J,GAAMtJ,YAAcsJ,OAKlE,EAAKzO,MAAMoO,OAASA,EACpB5J,OAAOC,KAAK2J,GAAQxJ,SAAQ,SAACyJ,GACvBD,EAAOC,GAAOK,aAChB,EAAK1O,MAAMqO,GAASD,EAAOC,GAAOK,aACzB,CAAC,WAAY,OAAQ,QAAQ3J,SAASqJ,EAAOC,GAAOnK,MAC7D,EAAKlE,MAAMqO,GAAS,KAEpB,EAAKrO,MAAMqO,QAASQ,KAzCP,E,0CAgFnB,WAAU,IAAD,OACDV,EAAWjO,KAAKF,MAAMoO,OAC5B,OACE,eAACxE,EAAA,EAAD,CACErF,KAAMrE,KAAK3B,MAAMsL,SACjBpE,QAAS,WACP,EAAK7G,SAAS,CAAE0P,gBAAgB,IAChC,EAAK/P,MAAMkH,WAEb,kBAAgB,eAChB/B,WAAS,EACTtB,MAAO,CAAEwK,SAAU,WACnB9C,QAAS,CAAEC,MAAO,sBATpB,UAWE,cAACC,EAAA,EAAD,CAAaxE,GAAG,eAAhB,SACE,sBAAKxB,UAAU,+BAAf,UACE,8BAAM9D,KAAK3B,MAAM4L,MAAQjK,KAAK3B,MAAM4L,MAAQ,8HAE5C,cAACsD,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK3B,MAAMkH,QACpB9D,MAAM,YACNiM,UAAW,cAAC,IAAD,IAJb,6DAUJ,eAAC5B,EAAA,EAAD,WACG9L,KAAKF,MAAMsO,gBACV,qBAAKtK,UAAU,qCAAf,8NAIDQ,OAAOC,KAAK0J,GACVzE,QAAO,SAAC7E,GAAD,MAA2B,SAAbA,KACrB8E,MAAK,SAAC3K,EAAG2J,GAAJ,OAAWwF,EAASnP,GAAGP,OAAS0P,EAASxF,GAAGlK,MAAQ,GAAK,KAC9DM,KAAI,SAAC8F,GACJ,IAAMsB,EAAegI,EAAStJ,GACxBS,EAAWZ,IAAS,GAAD,OAAIyB,EAAayI,KAAjB,SACjBF,EAAiBvI,EAAjBuI,aAER,OACE,sBAAoB1K,UAAU,6BAA9B,UACE,qBAAKA,UAAU,+BAAf,SAA+CmC,EAAa1H,QAC3D,CAAC,SAAU,gBAAgBsG,SAASoB,EAAajC,OAChD,cAAC5F,EAAA,EAAD,CACE8D,MAAO,CAAEc,MAAO,OAAQhC,UAAW,OAAQJ,UAAW,OACtDjB,QAAS2E,OAAOC,KAAKa,GAClBqE,MAAK,SAAC3K,EAAG2J,GAAJ,OAAWrD,EAAStG,GAAGP,OAAS6G,EAASqD,GAAGlK,MAAQ,GAAK,KAC9DM,KAAI,SAAC+P,GAAD,MAAQ,CAAErQ,MAAOqQ,EAAGlP,MAAO0F,EAASwJ,GAAGrQ,UAC9CsB,aACE2O,EACIA,EAAalI,MAAM,KAAKzH,KAAI,SAAC+J,GAAD,MAAQ,CAAErK,MAAOqK,EAAGlJ,MAAO0F,EAASwD,GAAGrK,UACnE,KAEN6D,IAAKuC,EACLqH,SAAU,SAACC,GACT,EAAKtH,GAAYsH,GAEnBrN,SAAU,SAACL,GAAD,OAAW,EAAKG,SAAL,eAAiBiG,EAAWpG,KACjDmB,MAAM,gDACNqD,QAA+B,iBAAtBkD,EAAajC,OAGzB,CAAC,WAAY,SAAU,MAAMa,SAASoB,EAAajC,OAClD,cAACmJ,EAAA,EAAD,CACE3J,WAAS,EACTjF,MAAOiQ,EACP/L,SAAU,EAAK+C,qBAAqBb,GACpC0H,UAAiC,aAAtBpG,EAAajC,OAG3B,CAAC,WAAY,OAAQ,QAAQa,SAASoB,EAAajC,OAClD,cAACD,EAAA,EAAD,CACEC,KAAMiC,EAAajC,KACnBvB,SAAU,EAAK+C,qBAAqBb,OAjChCA,SAwClB,cAAC2I,EAAA,EAAD,CAAexJ,UAAU,iCAAzB,SACE,cAACyJ,EAAA,EAAD,CACEC,QAAQ,WACRC,QAASzN,KAAK2F,SACdlE,MAAM,UACNqC,UAAU,uBACV4J,UAAW,cAAC,IAAD,IALb,iE,GArKsCxK,IAAM/C,Y,OCNtD,SAAS0O,GAAcxQ,GACrB,MAA4B6E,IAAME,UAAS,GAA3C,mBAAO0L,EAAP,KAAeC,EAAf,KACA,EAA4B7L,IAAME,SAAS,MAA3C,mBAAO4L,EAAP,KAAeC,EAAf,KACA,EAAkC/L,IAAME,SAAS,MAAjD,mBAAO8L,EAAP,KAAkBC,EAAlB,KACA,EAAgCjM,IAAME,SAAS,IAA/C,mBAAOgM,EAAP,KAAiBC,EAAjB,KACA,EAAwDnM,IAAME,UAAS,GAAvE,mBAAOkM,EAAP,KAA6BC,EAA7B,KACA,EAAkDrM,IAAME,UAAS,GAAjE,mBAAOoM,EAAP,KAA0BC,EAA1B,KACA,EAAsDvM,IAAME,SAAS,IAArE,mBAAOsM,EAAP,KAA4BC,EAA5B,KAEMC,EAAa1M,IAAM2M,OAAO,MAM1BC,EAAmB,WACvBd,EAAOe,cAAc7N,MAAM6K,QAAU,GACrCgC,GAAU,IAeNiB,EAAiB,SAACC,GAnBtBjB,EAAOe,cAAc7N,MAAM6K,QAAU,OAqBrCoC,EAAac,EAAMC,eACnBN,EAAWxF,QAAQlI,MAAML,YAAc,EAAD,UAAQ+N,EAAWxF,QAAQW,SAAS,GAAGoF,YAAc,EAArD,OAGlC3J,EAAS,SAAC4J,EAAMC,GACpBtB,GAAU,GACVqB,EAAK5J,OAAL,MAAA4J,EAAI,YAAWC,KAKXC,EAAwB,SAACtM,GAAD,OAAU2L,EAAuB,eAAG3L,GAAO,KAInEuM,EAAoB,SAACN,GACzBN,EAAuB,IACvBJ,GAAwB,GACxBE,GAAqB,GACrBR,EAAU,MACVF,GAAU,GACNkB,GAAOA,EAAM1D,mBAQbiE,EAAa,kBAAMrB,EAAa,OAEhCsB,EAAkB,SAACL,EAAM9K,GAAP,OAAc,WACpC2J,EAAU,MACM,eAAZmB,EAAK9K,GAxBuBmK,GAAqB,GA0B9B,iBAAZW,EAAK9K,GAtBmBiK,GAAwB,GAwBpC,eAAZa,EAAK9K,IAEO,aAAZ8K,EAAK9K,GADdgL,EAAsBF,EAAK9K,IAI3B8K,EAAK5J,OAAOlB,KAIhB,OACE,qCACE,cAACgF,EAAA,EAAD,CAAYC,MAAM,YAAYC,IAAI,4EAAgBhE,OA9DlC,SAACyJ,GACnB5R,EAAMqS,gBAENf,EAAuB,IACnBL,GAAsBC,GAAwB,GAC9CC,GAAmBC,GAAqB,GAE5CR,EAAUgB,EAAMC,eAChBnB,GAAU,GACVM,EAAYhR,EAAMqQ,SAuDfI,GACC,cAAC6B,EAAA,EAAD,CACEC,aAAW,EACXC,SAAU7B,EACV3K,OAAQ2K,EACRzJ,QA/BQ,WACduK,IACAb,EAAU,OA8BJnL,UAAU,kBALZ,SAOGsL,EAASvQ,KAAI,SAACuR,EAAMU,GAAP,eACZ,gCACe,YAAZV,EAAK9K,IAAoB,cAACyL,EAAA,EAAD,0BAA8BD,IAE3C,YAAZV,EAAK9K,KAAqB8K,EAAKY,eAC9B,eAACC,EAAA,EAAD,CAA2CxD,QAASgD,EAAgBL,EAAM/R,EAAMiH,IAAhF,UACE,eAAC4L,EAAA,EAAD,WACe,eAAZd,EAAK9K,IACJ,qCACE,cAACgF,EAAA,EAAD,CAAYC,MAAK,cAAS6F,EAAK9K,IAAMkF,IAAI,mFACzC,cAAC,EAAD,CACEb,SAAU6F,EACVjK,QAASgL,EACTjL,GAAIjH,EAAMiH,GACVkB,OAAQ,sCAAI6J,EAAJ,yBAAIA,EAAJ,uBAAa7J,EAAO4J,EAAMC,IAClClJ,UAAWiJ,EAAKjJ,UAChBrC,KAAMzG,EAAMyG,UAIjB,CAAC,aAAc,YAAYD,SAASuL,EAAK9K,KACxC,qCACE,cAACgF,EAAA,EAAD,CAAYC,MAAK,cAAS6F,EAAK9K,IAAMkF,IAAK4F,EAAK7R,MAAOyF,KAAK,gBAC3D,cAAC,GAAD,CACE2F,SAAU+F,EAAoBU,EAAK9K,MAAO,EAC1CC,QAASgL,EACTjL,GAAIjH,EAAMiH,GACVkB,OAAQ4J,EAAK5J,OACbxC,KAAMoM,EAAKpM,UAIJ,iBAAZoM,EAAK9K,IACJ,qCACE,cAACgF,EAAA,EAAD,CAAYC,MAAK,cAAS6F,EAAK9K,IAAMkF,IAAK4F,EAAKvC,aAC/C,cAAC,GAAD,CACElE,SAAU2F,EACV/J,QAASgL,EACTjL,GAAIjH,EAAMiH,GACVkB,OAAQ4J,EAAK5J,OACbsH,WAAU,8CAAWzP,EAAMyG,YAAjB,aAAW,EAAYvG,YAIrC,CAAC,aAAc,eAAgB,aAAc,YAAYsG,SAASuL,EAAK9K,IAQrE,KAPF,cAACgF,EAAA,EAAD,CACEC,MAAK,cAAS6F,EAAK9K,IACnBkB,OAAQ4J,EAAKvC,WACbA,WAAYuC,EAAKvC,WACjBC,WAAU,UAAEzP,EAAMyG,YAAR,aAAE,EAAYvG,MACxBiM,IAAK4F,EAAK7R,WAIhB,cAAC4S,EAAA,EAAD,CAAY3D,QAAQ,UAAU4D,QAAM,EAApC,SACGhB,EAAK7R,UAlDV,eAAuB6R,EAAK9K,GAA5B,cAsDW,YAAZ8K,EAAK9K,IAAoB8K,EAAKY,eAC7B,eAACC,EAAA,EAAD,CAA2CxD,QAASuC,EAApD,UACE,cAACkB,EAAA,EAAD,UACE,cAAC,IAAD,CAAWrQ,SAAS,aAEtB,cAACsQ,EAAA,EAAD,CAAY3D,QAAQ,UAAU4D,QAAM,EAApC,SACGhB,EAAK7R,UALV,eAAuB6R,EAAK9K,GAA5B,cASW,YAAZ8K,EAAK9K,IAAoB8K,EAAKY,eAC7B,cAACL,EAAA,EAAD,CACEC,aAAW,EACXC,SAAU3B,EACV9M,IAAKwN,EAELvL,OAAQ6K,EACR3J,QAASiL,EANX,SAQGlM,OAAOC,KAAK6L,EAAKiB,WAAWxS,KAAI,SAACyS,GAAD,OAC/B,cAACL,EAAA,EAAD,CAEExD,QAAS,WACPqC,IACAb,EAAU,MACVE,EAAa,MACbiB,EAAK5J,OAAOnI,EAAMiH,GAAIgM,IAN1B,SASGlB,EAAKiB,UAAUC,GAAU/S,OAT5B,cACc6R,EAAK9K,GADnB,yBACsCgM,QAV1C,cAIclB,EAAK9K,GAJnB,oBArEJ,UAAawL,YAoGV5N,cAAM6K,KAAKc","file":"static/js/6.f9f0adb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport default class CustomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let defaultValue = '';\r\n    if (this.props.defaultValue) {\r\n      ({ defaultValue } = this.props);\r\n    } else if (this.props.defaultValue) {\r\n      defaultValue = [];\r\n    }\r\n\r\n    this.state = {\r\n      value: defaultValue,\r\n      valueErr: false,\r\n      offsetTop: 0,\r\n    };\r\n\r\n    this.maxOptions = this.props.maxOptions ? this.props.maxOptions : 60;\r\n    this.optionsCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    this.setState({ offsetTop: ReactDOM.findDOMNode(this).offsetTop });\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    if (value && value !== '' && value !== 'null' && Array.isArray(value)) {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.map((a) => a.value).join(','));\r\n      }\r\n    } else if (value && value !== '' && value !== 'null') {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.value);\r\n      }\r\n    } else {\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  setFocus = () => this.selectRef.focus();\r\n\r\n  filterValues = (data, value) => {\r\n    let isDisplayed = this.optionsCounter < this.maxOptions;\r\n\r\n    if (value && value !== '') {\r\n      const regExp = new RegExp(value, 'i');\r\n      if (!regExp.test(data.label)) isDisplayed = false;\r\n    }\r\n\r\n    if (isDisplayed) this.optionsCounter++;\r\n    if (this.optionsCounter === this.props.options.length || this.optionsCounter === this.maxOptions) {\r\n      this.optionsCounter = 0;\r\n    }\r\n    return isDisplayed;\r\n  };\r\n\r\n  render() {\r\n    const Component = this.props.isCreatable ? CreatableSelect : Select;\r\n    const selectStyles = {\r\n      input: (base) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        marginTop: '-0.75px',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      control: (base, state) => ({\r\n        ...base,\r\n        minHeight: '25px',\r\n        height: 'fit-content',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n        border: '0px',\r\n        borderRadius: '0px',\r\n        borderBottom: this.state.valueErr\r\n          ? '2px solid'\r\n          : state.selectProps.menuIsOpen\r\n          ? '2px solid'\r\n          : '1px solid',\r\n        borderColor: this.state.valueErr\r\n          ? '#f44336 !important'\r\n          : state.selectProps.menuIsOpen\r\n          ? '#3f51b5 !important'\r\n          : 'rgba(0, 0, 0, 0.42) !important',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n          borderBottom: state.selectProps.menuIsOpen ? '2px solid' : '2px solid',\r\n          borderColor: this.state.valueErr\r\n            ? '#f44336'\r\n            : state.selectProps.menuIsOpen\r\n            ? '#3f51b5'\r\n            : 'black',\r\n        },\r\n      }),\r\n      placeholder: (base, state) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        color: this.state.valueErr ? '#f44336' : state.selectProps.menuIsOpen ? '#3f51b5' : '',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      option: (base) => ({\r\n        ...base,\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        marginTop: '-3px',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      }),\r\n      valueContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '24px',\r\n        height: 'fit-content',\r\n        marginTop: '-5px',\r\n        paddingLeft: '0px',\r\n        marginLeft: '-2px',\r\n      }),\r\n      indicatorsContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '25px !important',\r\n        padding: '0px !important',\r\n      }),\r\n      clearIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n      dropdownIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div style={this.props.style}>\r\n        <Component\r\n          allowCreate={this.props.allowCreate}\r\n          ref={this.selectRef}\r\n          options={this.props.options}\r\n          styles={selectStyles}\r\n          // menuPlacement={this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\r\n          menuPlacement={this.props.bottom ? 'bottom' : this.state.offsetTop < 250 ? 'bottom' : 'top'}\r\n          value={this.state.value}\r\n          placeholder={this.props.label}\r\n          defaultValue={this.props.defaultValue}\r\n          defaultInputValue={this.props.defaultInputValue}\r\n          onChange={this.handleChange}\r\n          onMenuOpen={() => {\r\n            this.optionsCounter = 0;\r\n          }}\r\n          noOptionsMessage={() => 'Нет подходящих вариантов'}\r\n          isClearable\r\n          isSearchable\r\n          required\r\n          isMulti={!!this.props.isMulti}\r\n          style={{ width: '200px' }}\r\n          filterOption={this.filterValues}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState();\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDateTimePicker\r\n        format=\"YYYY-MM-DD HH:mm\"\r\n        fullWidth\r\n        ampm={false}\r\n        minutesStep={5}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = props.fullWidth !== 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardTimePicker\r\n        format=\"HH:mm\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        ampm={false}\r\n        minutesStep={5}\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n        className={props.className}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = props.fullWidth !== 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDatePicker\r\n        format=\"YYYY-MM-DD\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import DateTimePicker from './DateTimePicker';\r\nimport TimePicker from './TimePicker';\r\nimport DatePicker from './DatePicker';\r\n\r\nexport default function CustomDateTimePicker(props) {\r\n  return (\r\n    <>\r\n      {props.type === 'datetime' && <DateTimePicker {...props} />}\r\n      {props.type === 'date' && <DatePicker {...props} />}\r\n      {props.type === 'time' && <TimePicker {...props} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TextField,\r\n  DialogContent,\r\n  Input,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport ReactToPrint from 'react-to-print';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport CustomDateTimePicker from '../../../SharedComponents/CustomDateTimePicker';\r\nimport 'moment/locale/ru';\r\n\r\nimport { metaData, dataTable } from '../../../config/data';\r\nimport { getData, fileUpload } from '../../../utils/apiFunctions';\r\nimport storage from '../../../storages/commonStorage';\r\nimport CustomSelect from '../../../SharedComponents/CustomSelect';\r\nimport CustomIcon from '../../../SharedComponents/CustomIcon';\r\nimport exportDocx from '../../../SharedComponents/exportDocx';\r\nimport DateW from '../../../utils/date';\r\nimport './PopupEdit.css';\r\n\r\nconst textToDoc = (task, tasksList) => {\r\n  const rows = ['Планировщик задач', metaData.specificParameters.tableName, ''];\r\n\r\n  const properties = [];\r\n  Object.keys(metaData.dataTable)\r\n    .filter(\r\n      (key) => key !== 'specificParameters' && key !== 'undefined' && metaData.dataTable[key].isEditable\r\n    )\r\n    .sort((a, b) => (metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1))\r\n    .forEach((property) => properties.push(property));\r\n  Object.keys(metaData.dataTable)\r\n    .filter(\r\n      (key) => key !== 'specificParameters' && key !== 'undefined' && !metaData.dataTable[key].isEditable\r\n    )\r\n    .sort((a, b) => (metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1))\r\n    .forEach((property) => properties.push(property));\r\n\r\n  properties.forEach((property) => {\r\n    const propertyInfo = metaData.dataTable[property];\r\n    const listInfo = metaData.dataTable[property].vocabulary\r\n      ? metaData[`${metaData.dataTable[property].vocabulary}List`]\r\n      : metaData[`${property}List`];\r\n\r\n    let value = task[property] ? task[property] : '';\r\n    if (property === 'mainTable' && metaData.tables[`${value}_meta`].specificParameters) {\r\n      value = metaData.tables[`${value}_meta`].specificParameters.tableName;\r\n    }\r\n\r\n    if (['select', 'multi-select'].indexOf(metaData.dataTable[property].type) !== -1 && value !== '') {\r\n      const selectString = value;\r\n      value = '';\r\n      selectString.split(',').forEach((v) => {\r\n        value += value === '' ? listInfo[v]?.value || v : `,${listInfo[v]?.value || v}`;\r\n      });\r\n    }\r\n\r\n    rows.push(`${propertyInfo.value}:   ${value}`);\r\n  });\r\n\r\n  if (metaData.dataTableName === 'discussion') {\r\n    const tasks = tasksList;\r\n    rows.push('');\r\n    if (tasks.length > 0) {\r\n      rows.push('Незакрытые задачи:');\r\n      tasks.forEach((t) => rows.push(t));\r\n    } else {\r\n      rows.push('Незакрытые задачи: отсутствуют');\r\n    }\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\n// Standart dialog: full edit current task (anything loaded as main table)\r\nexport default class PopupEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openConfirm: false,\r\n      confirmMessage: '',\r\n      printPDF: false,\r\n      tasksList: [],\r\n    };\r\n    this._dataRef = React.createRef();\r\n    this.setOpen = this.setOpen.bind(this);\r\n    if (this.props.id) {\r\n      this.realId = dataTable.map((task) => task.id).indexOf(this.props.id);\r\n      this.task = dataTable[this.realId];\r\n\r\n      Object.keys(metaData.dataTable).forEach((property) => {\r\n        if (['datetime', 'date'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] =\r\n            this.task[property] && this.task[property] !== '' ? this.task[property] : null;\r\n        } else if (['time'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] =\r\n            this.task[property] && this.task[property] !== ''\r\n              ? `2000-01-01T${this.task[property]}`\r\n              : null;\r\n        } else if (['select', 'multi-select'].indexOf(metaData.dataTable[property].type) !== -1) {\r\n          this.state[property] = this.task[property];\r\n        }\r\n\r\n        const filesAttached = [];\r\n        if (\r\n          /\\b(http:.+?)(txt|docx?|xlsx?|pptx?|pdf|png|bmp|img|jpg|jpeg)\\b/im.test(this.task[property])\r\n        ) {\r\n          filesAttached.push(\r\n            this.task[property].match(\r\n              /\\b(http:.+?)(txt|doc|docx|ppt|pptx|xls|xlsx|pdf|png|bpm|img|jpg|jpeg)\\b/gi\r\n            )\r\n          );\r\n          this.state[`${property}FilesAttached`] = filesAttached[0];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOpenConfirm = (openConfirm) => this.setState({ openConfirm });\r\n\r\n  setOpen = (open) => {\r\n    this.setState({ open });\r\n\r\n    if (open) {\r\n      Object.keys(metaData.dataTable).forEach((property) => {\r\n        if (\r\n          metaData.dataTable[property].isEditable &&\r\n          ['select', 'multi-select'].includes(metaData.dataTable[property].type)\r\n        ) {\r\n          this.task[property] = dataTable[this.realId][property];\r\n\r\n          const listName = metaData.dataTable[property].vocabulary\r\n            ? metaData.dataTable[property].vocabulary\r\n            : property;\r\n          if (!metaData[`${listName}List`]) {\r\n            getData(listName, 'direct').then((data) => {\r\n              const listInfo = {};\r\n              data.forEach((d) => {\r\n                listInfo[d.id] = d;\r\n              });\r\n              this.setState({ [`${listName}List`]: listInfo });\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleDateTimeChange = (property) => (value) => this.setState({ [property]: value });\r\n\r\n  getRealId = () => dataTable.map((task) => task.id).indexOf(this.props.id);\r\n\r\n  handleOk = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    const dataEdited = {};\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      if (key !== 'specificParameters' && key !== 'undefined') {\r\n        if (key === 'mainTable') {\r\n          dataEdited[key] = task[key];\r\n        } else {\r\n          dataEdited[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n          if (['datetime', 'date', 'time'].includes(metaData.dataTable[key].type)) {\r\n            dataEdited[key] = DateW.toDateTimeStr(metaData.dataTable[key].type, this.state[key]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // check if something changed and send only if changed;\r\n    let isDataEdited = false;\r\n    Object.keys(dataEdited).forEach((key) => {\r\n      const propertyInfo = metaData.dataTable[key];\r\n      const dataEditedValue =\r\n        propertyInfo.type === 'int' ? parseInt(dataEdited[key], 10) : dataEdited[key];\r\n      if (propertyInfo.type !== 'int' && dataEditedValue !== task[key]) {\r\n        isDataEdited = true;\r\n      }\r\n    });\r\n\r\n    if (metaData.dataTableName === 'discussion') {\r\n      if (!dataEdited.participants.split(',').includes(dataEdited.responsible)) {\r\n        dataEdited.participants = `${dataEdited.responsible},${dataEdited.participants}`;\r\n      }\r\n    }\r\n\r\n    if (isDataEdited) {\r\n      this.props.action(this.props.id, dataEdited);\r\n    } else {\r\n      console.log('Изменений внесено не было');\r\n    }\r\n    this.setOpen(false);\r\n  };\r\n\r\n  handleSaveAsNew = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    if (task.date === this.state.date && task.time === this.state.time) {\r\n      this.setState({ confirmMessage: '(дата и время не были изменены!)' });\r\n    }\r\n    this.setOpenConfirm(true);\r\n  };\r\n\r\n  confirmSaveAsNew = () => {\r\n    const task = dataTable[this.getRealId()];\r\n\r\n    const dataEdited = {};\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      if (key !== 'specificParameters' && key !== 'undefined') {\r\n        dataEdited[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n        if (key === 'mainTable') {\r\n          dataEdited[key] = task[key];\r\n        }\r\n\r\n        if (['datetime', 'date', 'time'].includes(metaData.dataTable[key].type)) {\r\n          dataEdited[key] = DateW.toDateTimeStr(metaData.dataTable[key].type, this.state[key]);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (dataEdited.week) {\r\n      dataEdited.week = parseFloat(new DateW(dataEdited.date).getYearWeekStr());\r\n    }\r\n\r\n    this.props.actionNew(dataEdited);\r\n    this.setOpen(false);\r\n  };\r\n\r\n  handleUpload = (e, property) => {\r\n    storage.alert.dispatch({ type: 'SHOW_ALERT', status: 'warn', message: 'Файл загружается...' });\r\n    fileUpload(e.target.files[0]).then(([response, error]) => {\r\n      if (!error) {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'success',\r\n          message: 'Файл загружен успешно, ссылка добавлена',\r\n        });\r\n        const fileUrl = `http://${window.location.host}/smisplan-docs/${response.fileName}`;\r\n        this[property].value = `{this[property].value}\\n${fileUrl}`;\r\n\r\n        const filesAttached = [];\r\n        if (this.state[`${property}FilesAttached`])\r\n          filesAttached.push(...this.state[`${property}FilesAttached`]);\r\n        filesAttached.push(fileUrl);\r\n        this.setState({ [`${property}FilesAttached`]: filesAttached });\r\n      } else {\r\n        storage.alert.dispatch({\r\n          type: 'SHOW_ALERT',\r\n          status: 'fail',\r\n          message: 'Ошибка при загрузке',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  openUrl = (url) => window.open(url, '_blank', '');\r\n\r\n  filterValidKeys = (key) => key !== 'specificParameters' && key !== 'undefined';\r\n\r\n  sortValidKeys = (a, b) =>\r\n    metaData.dataTable[a].tableIndex >= metaData.dataTable[b].tableIndex ? 1 : -1;\r\n\r\n  getDefaultValue = (property) => {\r\n    const propertyInfo = metaData.dataTable[property];\r\n    const listName = metaData.dataTable[property].vocabulary || property;\r\n    const listInfo = metaData[`${listName}List`] || this.state[`${listName}List`];\r\n\r\n    let defaultValue = this.task[property];\r\n    if (propertyInfo.type === 'multi-select' || propertyInfo.type === 'select') {\r\n      defaultValue = this.task[property]\r\n        ? this.task[property].split(',').map((v) => ({ value: v, label: listInfo[v]?.value || v }))\r\n        : null;\r\n    }\r\n\r\n    if (property === 'mainTable' && metaData.tables[`${defaultValue}_meta`].specificParameters) {\r\n      defaultValue = metaData.tables[`${defaultValue}_meta`].specificParameters.tableName;\r\n    }\r\n\r\n    return defaultValue;\r\n  };\r\n\r\n  render() {\r\n    const properties = [].concat(\r\n      Object.keys(metaData.dataTable)\r\n        .filter(this.filterValidKeys)\r\n        .filter((key) => metaData.dataTable[key].isEditable)\r\n        .sort(this.sortValidKeys),\r\n      Object.keys(metaData.dataTable)\r\n        .filter(this.filterValidKeys)\r\n        .filter((key) => !metaData.dataTable[key].isEditable)\r\n        .sort(this.sortValidKeys)\r\n    );\r\n\r\n    return (\r\n      this.task && (\r\n        <Dialog\r\n          open={this.props.isOpened}\r\n          onClose={this.props.onClose}\r\n          aria-labelledby=\"dialog-title\"\r\n          fullWidth\r\n          classes={{ paper: 'dialog-edit' }}\r\n        >\r\n          <div className=\"popup-edit__header\">\r\n            <DialogTitle id=\"dialog-title\">Редактирование</DialogTitle>\r\n            <div className=\"popup-edit__print-doc\">\r\n              <ReactToPrint\r\n                trigger={() => (\r\n                  <Tooltip title=\"Печатать\">\r\n                    <IconButton className=\"icn\" style={{ padding: '0px' }}>\r\n                      <PrintIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n                content={() => {\r\n                  this.setState({ printPDF: true });\r\n                  return this._dataRef.current;\r\n                }}\r\n                onAfterPrint={() => {\r\n                  this.setState({ printPDF: false });\r\n                }}\r\n              />\r\n              {metaData.dataTableName === 'discussion' && (\r\n                <CustomIcon\r\n                  class=\"icn_save\"\r\n                  tip=\"Сохранить как документ MS Word\"\r\n                  fontSize=\"large\"\r\n                  action={() => exportDocx(textToDoc(this.task, this.state.tasksList), metaData)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <DialogContent ref={this._dataRef}>\r\n            {properties.map((property) => {\r\n              const propertyInfo = metaData.dataTable[property];\r\n              const listName = metaData.dataTable[property].vocabulary\r\n                ? metaData.dataTable[property].vocabulary\r\n                : property;\r\n              const listInfo = metaData[`${listName}List`]\r\n                ? metaData[`${listName}List`]\r\n                : this.state[`${listName}List`];\r\n\r\n              let value = this.task[property];\r\n              if (property === 'mainTable' && metaData.tables[`${value}_meta`].specificParameters) {\r\n                value = metaData.tables[`${value}_meta`].specificParameters.tableName;\r\n              }\r\n\r\n              return (\r\n                <div key={`dialogEdit-${property}-main`}>\r\n                  <div key={`dialogEdit-${property}-subMain`} className=\"popup-edit__row\">\r\n                    <div style={{ color: !propertyInfo.isEditable ? 'var(--font-color-disabled)' : '' }}>\r\n                      {propertyInfo.value}\r\n                    </div>\r\n                    {propertyInfo.isEditable &&\r\n                      (propertyInfo.type === 'multi-select' || propertyInfo.type === 'select') &&\r\n                      listInfo && (\r\n                        <CustomSelect\r\n                          style={{ width: '100%', minHeight: '30px', marginTop: '5px' }}\r\n                          options={Object.keys(listInfo)\r\n                            .sort((a, b) => (listInfo[a].value >= listInfo[b].value ? 1 : -1))\r\n                            .map((pKey) => ({ value: pKey, label: listInfo[pKey].value }))}\r\n                          bottom\r\n                          ref={property}\r\n                          inputRef={(el) => {\r\n                            this[property] = el;\r\n                          }}\r\n                          refName={property}\r\n                          defaultValue={this.getDefaultValue(property)}\r\n                          setValue={(v) => {\r\n                            this.setState({ [property]: v });\r\n                          }}\r\n                          label=\"Выбрать...\"\r\n                          isMulti={propertyInfo.type === 'multi-select'}\r\n                          isCreatable={propertyInfo.isSelectCreatable}\r\n                        />\r\n                      )}\r\n                    {propertyInfo.isEditable &&\r\n                      ['string', 'int', 'fulltext'].includes(propertyInfo.type) && (\r\n                        <Input\r\n                          defaultValue={this.getDefaultValue(property)}\r\n                          fullWidth\r\n                          multiline\r\n                          onKeyDown={(e) => e.stopPropagation()}\r\n                          inputRef={(el) => {\r\n                            this[property] = el;\r\n                          }}\r\n                          inputProps={{\r\n                            style: {\r\n                              maxHeight: this.state.printPDF ? '2000px' : '200px',\r\n                              overflow: 'unset !important',\r\n                            },\r\n                          }}\r\n                          endAdornment={\r\n                            propertyInfo.hasFileUploader &&\r\n                            !this.state.printPDF && (\r\n                              <div className=\"popup-edit__upload-file\">\r\n                                <InputAdornment position=\"end\">\r\n                                  <input\r\n                                    id=\"editDialog-fileUploader\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    multiple\r\n                                    onChange={(e) => this.handleUpload(e, property)}\r\n                                  />\r\n                                  <label htmlFor=\"editDialog-fileUploader\">\r\n                                    <Tooltip title=\"Загрузить\">\r\n                                      <IconButton color=\"default\" component=\"span\">\r\n                                        <CloudUploadIcon />\r\n                                      </IconButton>\r\n                                    </Tooltip>\r\n                                  </label>\r\n                                </InputAdornment>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        />\r\n                      )}\r\n                    {propertyInfo.isEditable &&\r\n                      ['datetime', 'date', 'time'].includes(propertyInfo.type) && (\r\n                        <CustomDateTimePicker\r\n                          type={propertyInfo.type}\r\n                          value={this.state[property]}\r\n                          onChange={this.handleDateTimeChange(property)}\r\n                        />\r\n                      )}\r\n                    {!propertyInfo.isEditable && (\r\n                      <TextField\r\n                        defaultValue={this.getDefaultValue(property)}\r\n                        inputRef={(el) => {\r\n                          this[property] = el;\r\n                        }}\r\n                        fullWidth\r\n                        disabled\r\n                      />\r\n                    )}\r\n                  </div>\r\n\r\n                  {this.state[`${property}FilesAttached`] &&\r\n                    this.state[`${property}FilesAttached`].length > 0 && (\r\n                      <div className=\"popup-edit__attached-file\">\r\n                        {this.state[`${property}FilesAttached`].map((fileUrl) => (\r\n                          <CustomIcon\r\n                            class=\"icn_attachment\"\r\n                            tip={`Открыть: ${fileUrl.replace(/^.+\\/(.+)$/, '$1')}`}\r\n                            type=\"material-ui\"\r\n                            fontSize=\"large\"\r\n                            action={() => this.openUrl(fileUrl)}\r\n                            key={`${fileUrl}`}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              );\r\n            })}\r\n          </DialogContent>\r\n          <DialogActions className=\"popup-edit__actions\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.handleOk}\r\n              color=\"primary\"\r\n              className=\"MuiButton-outlinedOk\"\r\n              startIcon={<CheckIcon />}\r\n            >\r\n              Принять изменения\r\n            </Button>\r\n            {metaData.specificParameters.hasEditMenuSaveAsNew && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={this.handleSaveAsNew}\r\n                color=\"default\"\r\n                className=\"MuiButton-outlinedDefault\"\r\n                startIcon={<SaveAltIcon />}\r\n              >\r\n                Сохранить как новую\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.props.onClose}\r\n              color=\"secondary\"\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n\r\n            <Dialog\r\n              open={this.state.openConfirm}\r\n              onClose={() => this.setOpenConfirm(false)}\r\n              aria-labelledby=\"dialog-title\"\r\n              fullWidth\r\n            >\r\n              <DialogTitle id=\"dialog-title\">\r\n                Вы подтверждаете сохранение {this.state.confirmMessage} ?\r\n              </DialogTitle>\r\n              <DialogActions className=\"popup-edit__actions\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={this.confirmSaveAsNew}\r\n                  color=\"primary\"\r\n                  className=\"MuiButton-outlinedOk\"\r\n                  startIcon={<CheckIcon />}\r\n                >\r\n                  Да\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => this.setOpenConfirm(false)}\r\n                  color=\"secondary\"\r\n                  startIcon={<CloseIcon />}\r\n                >\r\n                  Отмена\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Document, Packer, Paragraph, TextRun } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\nimport storage from '../storages/commonStorage';\r\n\r\nexport default function exportDocx(textRows) {\r\n  storage.alert.dispatch({\r\n    type: 'SHOW_ALERT',\r\n    status: 'warn',\r\n    message: 'Идёт сохранение документа...',\r\n  });\r\n\r\n  const doc = new Document();\r\n  const rows = [];\r\n\r\n  try {\r\n    textRows.forEach((text) => {\r\n      rows.push(new Paragraph({ children: [new TextRun({ text, size: '24', font: 'Arial' })] }));\r\n    });\r\n\r\n    doc.addSection({ children: rows });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      saveAs(blob, 'SMISPlan document.docx');\r\n      storage.alert.dispatch({\r\n        type: 'SHOW_ALERT',\r\n        status: 'success',\r\n        message: 'Документ успешно сохранён и загружен',\r\n      });\r\n    });\r\n  } catch (err) {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'fail',\r\n      message: 'Ошибка при создании и/или сохранении',\r\n    });\r\n    console.log(`Ошибка при сохранении и/или создании документа: ${err}`);\r\n  }\r\n\r\n  return true;\r\n}\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './PopupConfirm.css';\r\n\r\nfunction PopupConfirm({ id, action, actionName, actionText, isOpened, onClose }) {\r\n  const handleOk = () => {\r\n    action(id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpened} onClose={onClose} aria-labelledby=\"dialog-title\" fullWidth>\r\n      <DialogTitle id=\"dialog-title\">Вы подтверждаете {actionName} ?</DialogTitle>\r\n      <DialogContent>\r\n        {actionText && <div className=\"popup-confirm__content\">{actionText}</div>}\r\n        <span className=\"popup-confirm__content\">Действие невозможно отменить!</span>\r\n      </DialogContent>\r\n      <DialogActions className=\"popup-confirm__actions\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleOk}\r\n          color=\"primary\"\r\n          className=\"MuiButton-outlinedOk\"\r\n          startIcon={<CheckIcon />}\r\n        >\r\n          Да\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={onClose} color=\"secondary\" startIcon={<CloseIcon />}>\r\n          Отмена\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default React.memo(PopupConfirm);\r\n","import React from 'react';\r\n\r\nimport { Dialog, DialogTitle, DialogActions, TextField, DialogContent } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport 'moment/locale/ru';\r\n\r\nimport CustomSelect from '../../../SharedComponents/CustomSelect';\r\nimport CustomDateTimePicker from '../../../SharedComponents/CustomDateTimePicker';\r\nimport { metaData, dataTable } from '../../../config/data';\r\nimport DateW from '../../../utils/date';\r\nimport getDefaultValues from '../../../utils/defaultData';\r\nimport './PopupAddLinkedInfo.css';\r\n\r\n// Standart dialog:\r\nexport default class PopupAddLinkedInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: this.props.isOpened,\r\n      emptyDataError: false,\r\n    };\r\n\r\n    // get list of not defined fields;\r\n    const { type } = this.props;\r\n    const fields = {};\r\n    const metaTable = metaData.tables[`${type}_meta`];\r\n    const realID = dataTable.map((task) => task.id).indexOf(this.props.id);\r\n    Object.keys(metaTable.dataTable).forEach((prop) => {\r\n      if (prop !== 'id' && metaTable.dataTable[prop].defaultValue === '') {\r\n        fields[prop] = {\r\n          type: metaTable.dataTable[prop].type,\r\n          value: metaTable.dataTable[prop].value,\r\n        };\r\n\r\n        if (metaTable.dataTable[prop].initialValue) {\r\n          fields[prop].initialValue = getDefaultValues(\r\n            realID,\r\n            prop,\r\n            metaTable.dataTable,\r\n            'initialValue'\r\n          );\r\n        }\r\n\r\n        if (['select', 'multi-select'].includes(metaTable.dataTable[prop].type)) {\r\n          fields[prop].list = metaTable.dataTable[prop].vocabulary || prop;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state.fields = fields;\r\n    Object.keys(fields).forEach((field) => {\r\n      if (fields[field].initialValue) {\r\n        this.state[field] = fields[field].initialValue;\r\n      } else if (['datetime', 'date', 'time'].includes(fields[field].type)) {\r\n        this.state[field] = null;\r\n      } else {\r\n        this.state[field] = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDateTimeChange = (property) => (value) => this.setState({ [property]: value });\r\n\r\n  handleOk = () => {\r\n    const editData = {};\r\n    Object.keys(this.state.fields).forEach((field) => {\r\n      editData[field] = '';\r\n    });\r\n\r\n    let emptyDataError = 0;\r\n    const { type } = this.props;\r\n    const metaTable = metaData.tables[`${type}_meta`];\r\n    Object.keys(editData).forEach((key) => {\r\n      editData[key] = this.state[key] ? this.state[key] : this[key]?.value || null;\r\n\r\n      if (['datetime', 'date', 'time'].includes(metaTable.dataTable[key].type)) {\r\n        editData[key] = DateW.toDateTimeStr(metaTable.dataTable[key].type, this.state[key]);\r\n      }\r\n\r\n      if (key !== 'week' && (!editData[key] || editData[key] === '')) emptyDataError++;\r\n    });\r\n\r\n    if (metaTable.dataTable.week) {\r\n      editData.week = new DateW(editData.date).getYearWeekStr();\r\n    }\r\n\r\n    if (emptyDataError) {\r\n      this.setState({ emptyDataError: true });\r\n    } else {\r\n      this.setState({ emptyDataError: false });\r\n      this.props.action(this.props.id, this.props.type, editData);\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const editData = this.state.fields;\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpened}\r\n        onClose={() => {\r\n          this.setState({ emptyDataError: false });\r\n          this.props.onClose();\r\n        }}\r\n        aria-labelledby=\"dialog-title\"\r\n        fullWidth\r\n        style={{ overflow: 'visible' }}\r\n        classes={{ paper: 'dialog-linked-data' }}\r\n      >\r\n        <DialogTitle id=\"dialog-title\">\r\n          <div className=\"popup-add-linked-info__title\">\r\n            <div>{this.props.title ? this.props.title : 'Добавление информации'}</div>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={this.props.onClose}\r\n              color=\"secondary\"\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {this.state.emptyDataError && (\r\n            <div className=\"popup-add-linked-info__err-no-data\">\r\n              Данные должны быть полностью заполнены\r\n            </div>\r\n          )}\r\n          {Object.keys(editData)\r\n            .filter((property) => property !== 'week')\r\n            .sort((a, b) => (editData[a].value >= editData[b].value ? 1 : -1))\r\n            .map((property) => {\r\n              const propertyInfo = editData[property];\r\n              const listInfo = metaData[`${propertyInfo.list}List`];\r\n              const { initialValue } = propertyInfo;\r\n\r\n              return (\r\n                <div key={property} className=\"popup-add-linked-info__row\">\r\n                  <div className=\"popup-add-linked-info__value\">{propertyInfo.value}</div>\r\n                  {['select', 'multi-select'].includes(propertyInfo.type) && (\r\n                    <CustomSelect\r\n                      style={{ width: '100%', minHeight: '30px', marginTop: '5px' }}\r\n                      options={Object.keys(listInfo)\r\n                        .sort((a, b) => (listInfo[a].value >= listInfo[b].value ? 1 : -1))\r\n                        .map((k) => ({ value: k, label: listInfo[k].value }))}\r\n                      defaultValue={\r\n                        initialValue\r\n                          ? initialValue.split(',').map((v) => ({ value: v, label: listInfo[v].value }))\r\n                          : null\r\n                      }\r\n                      ref={property}\r\n                      inputRef={(el) => {\r\n                        this[property] = el;\r\n                      }}\r\n                      setValue={(value) => this.setState({ [property]: value })}\r\n                      label=\"Выбрать...\"\r\n                      isMulti={propertyInfo.type === 'multi-select'}\r\n                    />\r\n                  )}\r\n                  {['fulltext', 'string', 'id'].includes(propertyInfo.type) && (\r\n                    <TextField\r\n                      fullWidth\r\n                      value={initialValue}\r\n                      onChange={this.handleDateTimeChange(property)}\r\n                      multiline={propertyInfo.type === 'fulltext'}\r\n                    />\r\n                  )}\r\n                  {['datetime', 'date', 'time'].includes(propertyInfo.type) && (\r\n                    <CustomDateTimePicker\r\n                      type={propertyInfo.type}\r\n                      onChange={this.handleDateTimeChange(property)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </DialogContent>\r\n        <DialogActions className=\"popup-add-linked-info__actions\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={this.handleOk}\r\n            color=\"primary\"\r\n            className=\"MuiButton-outlinedOk\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Принять\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Menu, MenuItem, ListItemIcon, Typography, Divider } from '@material-ui/core';\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\r\n\r\nimport CustomIcon from '../../../SharedComponents/CustomIcon';\r\nimport PopupEdit from '../../Popup/PopupEdit/PopupEdit';\r\nimport PopupConfirm from '../../Popup/PopupConfirm/PopupConfirm';\r\nimport PopupAddLinkedInfo from '../../Popup/PopupAddLinkedInfo/PopupAddLinkedInfo';\r\nimport './TblActionMenu.css';\r\n\r\nfunction TblActionMenu(props) {\r\n  const [opened, setOpened] = React.useState(false);\r\n  const [menuEl, setMenuEl] = React.useState(null);\r\n  const [menuElSub, setMenuElSub] = React.useState(null);\r\n  const [menuList, setMenuList] = React.useState([]);\r\n  const [isPopupConfirmOpened, setIsPopupConfirmOpened] = React.useState(false);\r\n  const [isPopupEditOpened, setIsPopupEditOpened] = React.useState(false);\r\n  const [isPopupLinkedOpened, setIsPopupLinkedOpened] = React.useState({});\r\n\r\n  const _menuElSub = React.useRef(null);\r\n\r\n  // need for correct work of sub menu\r\n  const showBasicElement = () => {\r\n    menuEl.parentElement.style.display = 'flex';\r\n  };\r\n  const hideBasicElement = () => {\r\n    menuEl.parentElement.style.display = '';\r\n    setOpened(false);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    props.onBeforeClick();\r\n\r\n    setIsPopupLinkedOpened({});\r\n    if (isPopupConfirmOpened) setIsPopupConfirmOpened(false);\r\n    if (isPopupEditOpened) setIsPopupEditOpened(false);\r\n\r\n    setMenuEl(event.currentTarget);\r\n    setOpened(true);\r\n    setMenuList(props.list);\r\n  };\r\n\r\n  const handleClickSub = (event) => {\r\n    showBasicElement();\r\n    setMenuElSub(event.currentTarget);\r\n    _menuElSub.current.style.marginLeft = -1 * `${_menuElSub.current.children[1].offsetWidth + 5}px`;\r\n  };\r\n\r\n  const action = (item, args) => {\r\n    setOpened(false);\r\n    item.action(...args);\r\n  };\r\n\r\n  const handleOpenPopupEdit = () => setIsPopupEditOpened(true);\r\n\r\n  const handleOpenPopupLinked = (type) => setIsPopupLinkedOpened({ [type]: true });\r\n\r\n  const handleOpenPopupConfirm = () => setIsPopupConfirmOpened(true);\r\n\r\n  const handleClosePopups = (event) => {\r\n    setIsPopupLinkedOpened({});\r\n    setIsPopupConfirmOpened(false);\r\n    setIsPopupEditOpened(false);\r\n    setMenuEl(null);\r\n    setOpened(false);\r\n    if (event) event.stopPropagation();\r\n  };\r\n\r\n  const closeEl = () => {\r\n    hideBasicElement();\r\n    setMenuEl(null);\r\n  };\r\n\r\n  const closeElSub = () => setMenuElSub(null);\r\n\r\n  const handleClickItem = (item, id) => () => {\r\n    setMenuEl(null);\r\n    if (item.id === 'tasks_edit') {\r\n      handleOpenPopupEdit();\r\n    } else if (item.id === 'tasks_delete') {\r\n      handleOpenPopupConfirm();\r\n    } else if (item.id === 'discussion') {\r\n      handleOpenPopupLinked(item.id);\r\n    } else if (item.id === 'question') {\r\n      handleOpenPopupLinked(item.id);\r\n    } else {\r\n      item.action(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomIcon class=\"icn_moreH\" tip=\"Меню действий\" action={handleClick} />\r\n\r\n      {opened && (\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={menuEl}\r\n          open={!!menuEl}\r\n          onClose={closeEl}\r\n          className=\"tbl-action-menu\"\r\n        >\r\n          {menuList.map((item, index) => (\r\n            <div key={`${index}`}>\r\n              {item.id === 'divider' && <Divider key={`menu-divider-${index}`} />}\r\n\r\n              {item.id !== 'divider' && !item.isListOfItems && (\r\n                <MenuItem key={`menu-${item.id}-menuItem`} onClick={handleClickItem(item, props.id)}>\r\n                  <ListItemIcon>\r\n                    {item.id === 'tasks_edit' && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip=\"Редактировать\" />\r\n                        <PopupEdit\r\n                          isOpened={isPopupEditOpened}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={(...args) => action(item, args)}\r\n                          actionNew={item.actionNew}\r\n                          task={props.task}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {['discussion', 'question'].includes(item.id) && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip={item.value} type=\"material-ui\" />\r\n                        <PopupAddLinkedInfo\r\n                          isOpened={isPopupLinkedOpened[item.id] || false}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={item.action}\r\n                          type={item.type}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {item.id === 'tasks_delete' && (\r\n                      <>\r\n                        <CustomIcon class={`icn_${item.id}`} tip={item.actionName} />\r\n                        <PopupConfirm\r\n                          isOpened={isPopupConfirmOpened}\r\n                          onClose={handleClosePopups}\r\n                          id={props.id}\r\n                          action={item.action}\r\n                          actionText={`Тема: ${props.task?.value}`}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {!['tasks_edit', 'tasks_delete', 'discussion', 'question'].includes(item.id) ? (\r\n                      <CustomIcon\r\n                        class={`icn_${item.id}`}\r\n                        action={item.actionName}\r\n                        actionName={item.actionName}\r\n                        actionText={props.task?.value}\r\n                        tip={item.value}\r\n                      />\r\n                    ) : null}\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\" noWrap>\r\n                    {item.value}\r\n                  </Typography>\r\n                </MenuItem>\r\n              )}\r\n              {item.id !== 'divider' && item.isListOfItems && (\r\n                <MenuItem key={`menu-${item.id}-menuItem`} onClick={handleClickSub}>\r\n                  <ListItemIcon>\r\n                    <ArrowLeft fontSize=\"medium\" />\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\" noWrap>\r\n                    {item.value}\r\n                  </Typography>\r\n                </MenuItem>\r\n              )}\r\n              {item.id !== 'divider' && item.isListOfItems && (\r\n                <Menu\r\n                  keepMounted\r\n                  anchorEl={menuElSub}\r\n                  ref={_menuElSub}\r\n                  key={`menu${item.id}-menuItem-sub`}\r\n                  open={!!menuElSub}\r\n                  onClose={closeElSub}\r\n                >\r\n                  {Object.keys(item.listItems).map((listItem) => (\r\n                    <MenuItem\r\n                      key={`menu${item.id}-menuItem-sub-${listItem}`}\r\n                      onClick={() => {\r\n                        hideBasicElement();\r\n                        setMenuEl(null);\r\n                        setMenuElSub(null);\r\n                        item.action(props.id, listItem);\r\n                      }}\r\n                    >\r\n                      {item.listItems[listItem].value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TblActionMenu);\r\n"],"sourceRoot":""}