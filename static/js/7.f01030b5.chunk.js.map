{"version":3,"sources":["SharedComponents/CustomSelect.js","SharedComponents/DateTimePicker.js","SharedComponents/TimePicker.js","SharedComponents/DatePicker.js","SharedComponents/CustomDateTimePicker.js","Components/DataAdd/DataAdd.js"],"names":["CustomSelect","props","handleChange","value","Array","isArray","setState","valueErr","setValue","map","a","join","setFocus","selectRef","focus","filterValues","data","isDisplayed","optionsCounter","maxOptions","RegExp","test","label","options","length","defaultValue","state","offsetTop","this","ReactDOM","findDOMNode","Component","isCreatable","CreatableSelect","Select","selectStyles","input","base","height","fontFamily","marginTop","fontSize","backgroundColor","control","minHeight","border","borderRadius","borderBottom","selectProps","menuIsOpen","borderColor","boxShadow","placeholder","color","option","valueContainer","paddingLeft","marginLeft","indicatorsContainer","padding","clearIndicator","dropdownIndicator","style","allowCreate","ref","styles","menuPlacement","bottom","defaultInputValue","onChange","onMenuOpen","noOptionsMessage","isClearable","isSearchable","required","isMulti","width","filterOption","React","DateTimePicker","useState","utils","MomentUtils","format","fullWidth","ampm","minutesStep","margin","e","_d","className","CustomDateTimePicker","type","DataAdd","componentWillUnmount","unsubscribe","addTask","storage","alert","dispatch","status","message","task","id","parseInt","dataTable","t","sort","b","emptyDataError","Object","keys","metaData","forEach","key","field","addMenuIndex","objName","dataTableName","mainTable","idTask","participants","responsible","now","moment","date","time","DateW","toDateTimeStr","week","getYearWeekStr","property","includes","undefined","getDefaultValues","user","login","doData","then","error","json","specificParameters","mainValue","push","redraw","setDeveloperErr","developer","handleDateClick","hasAddMenu","addMenuTitle","developers","selectDialogOptions","subscribe","dataLoading","getState","STATE","developerList","textFieldClass","values","filter","target","title","variant","component","onClick","paddingBottom","paddingTop","startIcon","PureComponent"],"mappings":"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","file":"static/js/7.f01030b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nexport default class CustomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let defaultValue = '';\r\n    if (this.props.defaultValue) {\r\n      ({ defaultValue } = this.props);\r\n    } else if (this.props.defaultValue) {\r\n      defaultValue = [];\r\n    }\r\n\r\n    this.state = {\r\n      value: defaultValue,\r\n      valueErr: false,\r\n      offsetTop: 0,\r\n    };\r\n\r\n    this.maxOptions = this.props.maxOptions ? this.props.maxOptions : 60;\r\n    this.optionsCounter = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    this.setState({ offsetTop: ReactDOM.findDOMNode(this).offsetTop });\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    if (value && value !== '' && value !== 'null' && Array.isArray(value)) {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.map((a) => a.value).join(','));\r\n      }\r\n    } else if (value && value !== '' && value !== 'null') {\r\n      this.setState({ valueErr: false });\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue(value.value);\r\n      }\r\n    } else {\r\n      this.setState({ value });\r\n      if (typeof this.props.setValue === 'function') {\r\n        this.props.setValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  setFocus = () => this.selectRef.focus();\r\n\r\n  filterValues = (data, value) => {\r\n    let isDisplayed = this.optionsCounter < this.maxOptions;\r\n\r\n    if (value && value !== '') {\r\n      const regExp = new RegExp(value, 'i');\r\n      if (!regExp.test(data.label)) isDisplayed = false;\r\n    }\r\n\r\n    if (isDisplayed) this.optionsCounter++;\r\n    if (this.optionsCounter === this.props.options.length || this.optionsCounter === this.maxOptions) {\r\n      this.optionsCounter = 0;\r\n    }\r\n    return isDisplayed;\r\n  };\r\n\r\n  render() {\r\n    const Component = this.props.isCreatable ? CreatableSelect : Select;\r\n    const selectStyles = {\r\n      input: (base) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        marginTop: '-0.75px',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      control: (base, state) => ({\r\n        ...base,\r\n        minHeight: '25px',\r\n        height: 'fit-content',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        backgroundColor: 'transparent',\r\n        border: '0px',\r\n        borderRadius: '0px',\r\n        borderBottom: this.state.valueErr\r\n          ? '2px solid'\r\n          : state.selectProps.menuIsOpen\r\n          ? '2px solid'\r\n          : '1px solid',\r\n        borderColor: this.state.valueErr\r\n          ? '#f44336 !important'\r\n          : state.selectProps.menuIsOpen\r\n          ? '#3f51b5 !important'\r\n          : 'rgba(0, 0, 0, 0.42) !important',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n          borderBottom: state.selectProps.menuIsOpen ? '2px solid' : '2px solid',\r\n          borderColor: this.state.valueErr\r\n            ? '#f44336'\r\n            : state.selectProps.menuIsOpen\r\n            ? '#3f51b5'\r\n            : 'black',\r\n        },\r\n      }),\r\n      placeholder: (base, state) => ({\r\n        ...base,\r\n        height: '25px',\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        color: this.state.valueErr ? '#f44336' : state.selectProps.menuIsOpen ? '#3f51b5' : '',\r\n        backgroundColor: 'transparent',\r\n      }),\r\n      option: (base) => ({\r\n        ...base,\r\n        fontFamily: 'var(--font-main)',\r\n        fontSize: '15px',\r\n        marginTop: '-3px',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      }),\r\n      valueContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '24px',\r\n        height: 'fit-content',\r\n        marginTop: '-5px',\r\n        paddingLeft: '0px',\r\n        marginLeft: '-2px',\r\n      }),\r\n      indicatorsContainer: (base) => ({\r\n        ...base,\r\n        minHeight: '25px !important',\r\n        padding: '0px !important',\r\n      }),\r\n      clearIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n      dropdownIndicator: (base) => ({\r\n        ...base,\r\n        padding: '0px 5px 0px 5px !important',\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div style={this.props.style}>\r\n        <Component\r\n          allowCreate={this.props.allowCreate}\r\n          ref={this.selectRef}\r\n          options={this.props.options}\r\n          styles={selectStyles}\r\n          // menuPlacement={this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\r\n          menuPlacement={this.props.bottom ? 'bottom' : this.state.offsetTop < 250 ? 'bottom' : 'top'}\r\n          value={this.state.value}\r\n          placeholder={this.props.label}\r\n          defaultValue={this.props.defaultValue}\r\n          defaultInputValue={this.props.defaultInputValue}\r\n          onChange={this.handleChange}\r\n          onMenuOpen={() => {\r\n            this.optionsCounter = 0;\r\n          }}\r\n          noOptionsMessage={() => 'Нет подходящих вариантов'}\r\n          isClearable\r\n          isSearchable\r\n          required\r\n          isMulti={!!this.props.isMulti}\r\n          style={{ width: '200px' }}\r\n          filterOption={this.filterValues}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState();\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDateTimePicker\r\n        format=\"YYYY-MM-DD HH:mm\"\r\n        fullWidth\r\n        ampm={false}\r\n        minutesStep={5}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = props.fullWidth !== 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardTimePicker\r\n        format=\"HH:mm\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        ampm={false}\r\n        minutesStep={5}\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n        className={props.className}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport default function DateTimePicker(props) {\r\n  const [value, setValue] = React.useState(props?.value);\r\n  const fullWidth = props.fullWidth !== 'no';\r\n  const onChange = (e) => {\r\n    setValue(e._d);\r\n    props.onChange(e._d);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <KeyboardDatePicker\r\n        format=\"YYYY-MM-DD\"\r\n        fullWidth={fullWidth}\r\n        margin=\"normal\"\r\n        onChange={onChange}\r\n        value={value}\r\n        style={props.style}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import DateTimePicker from './DateTimePicker';\r\nimport TimePicker from './TimePicker';\r\nimport DatePicker from './DatePicker';\r\n\r\nexport default function CustomDateTimePicker(props) {\r\n  return (\r\n    <>\r\n      {props.type === 'datetime' && <DateTimePicker {...props} />}\r\n      {props.type === 'date' && <DatePicker {...props} />}\r\n      {props.type === 'time' && <TimePicker {...props} />}\r\n    </>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { TextField, Tooltip, Button } from '@material-ui/core';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport moment from 'moment';\r\nimport CustomDateTimePicker from '../../SharedComponents/CustomDateTimePicker';\r\n\r\nimport { dataTable, metaData } from '../../config/data';\r\nimport { doData } from '../../utils/apiFunctions';\r\nimport storage from '../../storages/commonStorage';\r\nimport CustomSelect from '../../SharedComponents/CustomSelect';\r\nimport DateW from '../../utils/date';\r\nimport getDefaultValues from '../../utils/defaultData';\r\nimport './DataAdd.css';\r\n\r\nexport default class DataAdd extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasAddMenu: true,\r\n      addMenuTitle: ' ',\r\n      developers: '',\r\n      selectDialogOptions: [],\r\n    };\r\n\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      const field = metaData.dataTable[key];\r\n      if (field.addMenuIndex && !parseInt(field.addMenuIndex, 10)) {\r\n        this.state[key] = '';\r\n        this.state[`${key}Err`] = false;\r\n        if (metaData.dataTable[key].type === 'select') {\r\n          this.state[`${key}s`] = '';\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = storage.state.subscribe(() => {\r\n      const { dataLoading } = storage.state.getState().STATE;\r\n      if (dataLoading && dataLoading === 'root') {\r\n        this.setState({ developers: metaData.developerList });\r\n      }\r\n      if (dataLoading && dataLoading === 'data') {\r\n        this.setState({\r\n          developers: metaData.developerList,\r\n          hasAddMenu: metaData.specificParameters.hasAddMenu,\r\n          addMenuTitle: metaData.specificParameters.addMenuTitle,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount = () => this.unsubscribe();\r\n\r\n  addTask = () => {\r\n    storage.alert.dispatch({\r\n      type: 'SHOW_ALERT',\r\n      status: 'warn',\r\n      message: 'Идёт добавление информации в БД...',\r\n    });\r\n\r\n    const task = {\r\n      id: parseInt(dataTable.map((t) => t.id).sort((a, b) => b - a)[0], 10) + 1,\r\n    };\r\n\r\n    // check empty fields in bottom menu\r\n    let emptyDataError = false;\r\n    Object.keys(metaData.dataTable).forEach((key) => {\r\n      const field = metaData.dataTable[key];\r\n      const state = this.state[key];\r\n      if (field.addMenuIndex && +field.addMenuIndex >= 0) {\r\n        const objName = `_addTask${field.id}`;\r\n        if (this[objName]) {\r\n          if (this[objName].value === '') {\r\n            this.setState({ [`${key}Err`]: true });\r\n            this[objName].focus();\r\n            emptyDataError = true;\r\n          } else {\r\n            this.setState({ [`${key}Err`]: false });\r\n            task[key] = this[objName].value;\r\n          }\r\n        } else if (!state || state === '') {\r\n          this.setState({ [`${key}Err`]: true });\r\n          emptyDataError = true;\r\n        } else {\r\n          this.setState({ [`${key}Err`]: false });\r\n          task[key] = state;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!emptyDataError) {\r\n      if (metaData.dataTableName === 'discussion') {\r\n        task.mainTable = 'task';\r\n        task.idTask = 42;\r\n        task.participants = task.responsible;\r\n\r\n        const now = moment();\r\n        const { date, time } = this.state;\r\n        task.date = DateW.toDateTimeStr('date', date || now);\r\n        task.time = DateW.toDateTimeStr('time', time || now);\r\n        task.week = new DateW(date || now).getYearWeekStr();\r\n      }\r\n\r\n      // set default values\r\n      Object.keys(metaData.dataTable).forEach((property) => {\r\n        if (typeof task[property] === 'undefined' || task[property] === '') {\r\n          if (['datetime', 'date', 'time'].includes(metaData.dataTable[property].type)) {\r\n            task[property] = undefined;\r\n            if (['datetime', 'date', 'time'].includes(metaData.dataTable[property].defaultValue)) {\r\n              task[property] = getDefaultValues(undefined, property, metaData.dataTable);\r\n            }\r\n          } else {\r\n            switch (property) {\r\n              case 'author':\r\n                task[property] = metaData.user.login;\r\n                break;\r\n              case 'mainTable':\r\n                task[property] = metaData.dataTableName;\r\n                break;\r\n              default:\r\n                task[property] =\r\n                  metaData.dataTable[property].defaultValue === 'empty'\r\n                    ? ''\r\n                    : metaData.dataTable[property].defaultValue;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      doData('put', task, undefined, metaData.dataTableName).then(([error, json]) => {\r\n        if (error) {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'fail',\r\n            message: 'Ошибка при добавлении',\r\n          });\r\n        } else if (json && json.id) {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'success',\r\n            message: 'Добавление успешно',\r\n          });\r\n          task.id = json.id;\r\n          task.value = task[metaData.specificParameters.mainValue];\r\n          if (metaData[`${metaData.dataTableName}List`]) {\r\n            metaData[`${metaData.dataTableName}List`][task.id] = task;\r\n          }\r\n          dataTable.push(task);\r\n\r\n          // redraw table after adding row\r\n          storage.data.dispatch({ type: 'REDRAW', redraw: true });\r\n\r\n          Object.keys(metaData.dataTable).forEach((key) => {\r\n            const field = metaData.dataTable[key];\r\n            if (!field.addMenuIndex || parseInt(field.addMenuIndex, 10) === 0) {\r\n              const objName = `_addTask${field.id}`;\r\n\r\n              // clear states\r\n              this.setState({ [`${key}Err`]: false });\r\n              this.setState({ [key]: '' });\r\n\r\n              // clear fields\r\n              if (this[objName]) {\r\n                this[objName].value = '';\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          storage.alert.dispatch({\r\n            type: 'SHOW_ALERT',\r\n            status: 'fail',\r\n            message: 'Ошибка при добавлении записи в БД',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (value) => {\r\n    if (value && value !== '' && value !== 'null') {\r\n      this.setDeveloperErr(false);\r\n    }\r\n    this.setState({ developer: value });\r\n  };\r\n\r\n  handleDateClick = (field) => (value) => this.setState({ [field]: value });\r\n\r\n  render() {\r\n    const { developers, addMenuTitle, hasAddMenu } = this.state;\r\n    const textFieldClass = `data-add__text-field${\r\n      metaData.dataTableName === 'discussion' && '_discussion'\r\n    }`;\r\n\r\n    return (\r\n      hasAddMenu && (\r\n        <div className=\"data-add\">\r\n          <div className=\"data-add__title\">\r\n            <b>{addMenuTitle}</b>\r\n          </div>\r\n\r\n          {Object.values(metaData.dataTable)\r\n            .filter((field) => field.addMenuIndex && parseInt(field.addMenuIndex, 10) > 0)\r\n            .sort((a, b) => parseInt(a.addMenuIndex, 10) - parseInt(b.addMenuIndex, 10))\r\n            .map((field) => (\r\n              <Fragment key={field.id}>\r\n                {field.type === 'select' && (\r\n                  <CustomSelect\r\n                    style={{ width: '200px', marginTop: '-4px' }}\r\n                    options={Object.values(developers)\r\n                      .sort((a, b) => (a.value >= b.value ? 1 : -1))\r\n                      .map((developer) => ({ value: developer.id, label: developer.value }))}\r\n                    setValue={(value) => this.setState({ [field.id]: value })}\r\n                    label={`${field.value}*`}\r\n                  />\r\n                )}\r\n\r\n                {field.type === 'string' && (\r\n                  <div className={textFieldClass}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      placeholder={field.value}\r\n                      error={!!this.state[`${field.id}Err`]}\r\n                      value={this.state[field.id]}\r\n                      onChange={(e) => {\r\n                        this.setState({ [field.id]: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {['datetime', 'date', 'time'].includes(field.type) && (\r\n                  <CustomDateTimePicker\r\n                    type={field.type}\r\n                    onChange={this.handleDateClick(field.id)}\r\n                    fullWidth=\"no\"\r\n                    style={{ width: field.type === 'date' ? '140px' : '97px', margin: '0 0 9px 0' }}\r\n                    className=\"tbl-header-btn-menu__datepicker\"\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n\r\n          <div className=\"data-add__button\">\r\n            <Tooltip title={addMenuTitle}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                color=\"primary\"\r\n                onClick={this.addTask}\r\n                style={{ paddingBottom: '0px', paddingTop: '0px' }}\r\n                startIcon={<PlaylistAddIcon />}\r\n              >\r\n                Добавить\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}