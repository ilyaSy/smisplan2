{"version":3,"sources":["Components/PopupEditFullText/PopupEditFullText.js"],"names":["PopupEditFullText","props","handleOk","text","value","action","id","property","console","log","setState","open","state","fullText","class","this","tip","onClose","aria-labelledby","fullWidth","metaData","dataTable","defaultValue","inputRef","el","multiline","style","marginTop","display","justifyContent","variant","onClick","color","className","startIcon","React","Component"],"mappings":"kTASqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAIVC,SAAW,WACP,EAAKD,MAAME,OAAS,WAAiBC,MACjC,EAAKH,MAAMI,OAAO,EAAKJ,MAAMK,GAAI,EAAKL,MAAMM,SAAU,WAAiBH,OACvEI,QAAQC,IAAI,2IAEhB,EAAKC,SAAS,CAACC,MAAM,KARrB,EAAKC,MAAQ,CAAED,MAAM,EAAOE,SAAU,EAAKZ,MAAME,MAFnC,E,0CAalB,WAAW,IAAD,OACN,OACI,oCACI,kBAAC,IAAD,CAAYW,MAAOC,KAAKd,MAAMa,MAAOE,IAAI,mDAAWX,OAAQ,kBAAM,EAAKK,SAAS,CAACC,MAAM,OAEvF,kBAAC,IAAD,CACIA,KAAMI,KAAKH,MAAMD,KACjBM,QAAS,kBAAO,EAAKP,SAAS,CAACC,MAAM,KACrCO,kBAAgB,eAChBC,WAAW,GACf,kBAAC,IAAD,CAAab,GAAG,gBAAgBS,KAAKd,MAAMG,MAAQW,KAAKd,MAAMG,MAAQgB,IAASC,UAAUN,KAAKd,MAAMM,UAAUH,OAC9G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWkB,aAAcP,KAAKH,MAAMC,SAAUU,SAAU,SAAAC,GAAE,OAAI,EAAI,SAAeA,GAAIL,WAAW,EAAMM,WAAS,KAEnH,kBAAC,IAAD,CAAeC,MAAO,CAACC,UAAU,OAAQC,QAAQ,OAAQC,eAAgB,kBACrE,kBAAC,IAAD,CAAQC,QAAQ,WAAWC,QAAShB,KAAKb,SAAU8B,MAAM,UAAUC,UAAU,uBACzEC,UAAW,kBAAC,IAAD,OADf,qGAIA,kBAAC,IAAD,CAAQJ,QAAQ,YAAYC,QAAS,kBAAM,EAAKrB,SAAS,CAACC,MAAM,KAASqB,MAAM,YAC3EE,UAAW,kBAAC,IAAD,OADf,qD,GAjC2BC,IAAMC","file":"static/js/9.16cb8d6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Dialog, DialogTitle, DialogActions, TextField, DialogContent, Button} from '@material-ui/core';\r\nimport CheckIcon    from '@material-ui/icons/Check';\r\nimport CloseIcon    from '@material-ui/icons/Close';\r\n\r\nimport {metaData}   from '../../config/data';\r\nimport CustomIcon   from '../../SharedComponents/CustomIcon';\r\n\r\n// Standart dialog: edit single property in modal popup\r\nexport default class PopupEditFullText extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { open: false, fullText: this.props.text };\r\n    }\r\n  \r\n    handleOk = () => {\r\n        this.props.text !== this['fullText'].value ?\r\n            this.props.action(this.props.id, this.props.property, this['fullText'].value) :\r\n            console.log('Изменений внесено не было');\r\n\r\n        this.setState({open: false});\r\n    };\r\n  \r\n    render () {\r\n        return (\r\n            <>\r\n                <CustomIcon class={this.props.class} tip=\"Изменить\" action={() => this.setState({open: true})}/>\r\n            \r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={() =>  this.setState({open: false})}\r\n                    aria-labelledby=\"dialog-title\"\r\n                    fullWidth={true}>\r\n                <DialogTitle id=\"dialog-title\">{this.props.value ? this.props.value : metaData.dataTable[this.props.property].value}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField defaultValue={this.state.fullText} inputRef={el => this['fullText'] = el} fullWidth={true} multiline />\r\n                </DialogContent>\r\n                <DialogActions style={{marginTop:\"20px\", display:\"flex\", justifyContent: \"space-between\"}}>\r\n                    <Button variant=\"outlined\" onClick={this.handleOk} color=\"primary\" className=\"MuiButton-outlinedOk\"\r\n                        startIcon={<CheckIcon />}>\r\n                        Принять изменения\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() => this.setState({open: false})} color=\"secondary\"\r\n                        startIcon={<CloseIcon />}>\r\n                        Закрыть\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}