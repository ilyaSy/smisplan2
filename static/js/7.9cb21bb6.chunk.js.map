{"version":3,"sources":["SharedComponents/CustomSelect.js","Components/DataAdd/DataAdd.js"],"names":["CustomSelect","props","handleChange","value","Array","isArray","setState","valueErr","setValue","map","a","join","setFocus","refs","refName","focus","filterValues","data","isDisplayed","optionsCounter","maxOptions","RegExp","test","label","options","length","state","defaultValue","isMulti","offsetTop","this","ReactDOM","findDOMNode","selectStyles","input","base","height","fontFamily","marginTop","fontSize","backgroundColor","control","minHeight","border","borderRadius","borderBottom","selectProps","menuIsOpen","borderColor","boxShadow","placeholder","color","option","valueContainer","paddingLeft","marginLeft","indicatorsContainer","padding","clearIndicator","dropdownIndicator","style","isCreatable","allowCreate","ref","selectRef","styles","menuPlacement","bottom","defaultInputValue","onChange","onMenuOpen","noOptionsMessage","isClearable","isSearchable","required","width","filterOption","Component","DataAdd","key","addTask","storage","alert","dispatch","type","status","message","task","id","parseInt","dataTable","sort","b","emptyDataError","metaData","field","addMenuIndex","objName","dataTableName","mainTable","idTask","participants","responsible","now","moment","date","DateW","toDateTimeStr","time","week","getYearWeekStr","Object","keys","forEach","property","includes","undefined","getDefaultValues","user","login","doData","then","error","json","specificParameters","mainValue","push","redraw","setDeveloperErr","developer","handleDateClick","hasAddMenu","addMenuTitle","developers","selectDialogOptions","_dialogSelect","React","createRef","unsubscribe","subscribe","dataLoading","getState","STATE","developerList","textFieldClass","className","values","filter","inputRef","el","fullWidth","utils","MomentUtils","format","margin","Date","ampm","minutesStep","title","variant","component","onClick","paddingBottom","paddingTop","startIcon","PureComponent"],"mappings":"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","file":"static/js/7.9cb21bb6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\nexport default class CustomSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.defaultValue ? this.props.defaultValue : this.props.isMulti ? [] : '',\n      valueErr: false,\n      offsetTop: 0,\n    }\n\n    this.maxOptions = this.props.maxOptions ? this.props.maxOptions : 60;\n    this.optionsCounter = 0;\n  }\n\n  handleChange = value => {\n    if (value && value !== '' && value !== 'null' && Array.isArray(value)) {\n      this.setState({ valueErr: false });\n      this.setState({ value: value });\n      if (typeof this.props.setValue === 'function') {\n        this.props.setValue(value.map(a => { return a.value }).join(','));\n      }\n    }\n    else if (value && value !== '' && value !== 'null') {\n      this.setState({ valueErr: false });\n      this.setState({ value: value });\n      if (typeof this.props.setValue === 'function') {\n        this.props.setValue(value.value);\n      }\n    }\n    else {\n      this.setState({ value: value });\n      if (typeof this.props.setValue === 'function') {\n        this.props.setValue('');\n      }\n    }\n  }\n\n  setFocus = () => { this.refs[this.props.refName].focus() }\n\n  filterValues = (data, value) => {\n    let isDisplayed = this.optionsCounter < this.maxOptions ? true : false;\n\n    if (value && value !== '') {\n      let regExp = new RegExp(value, \"i\")\n      if (!regExp.test(data.label)) isDisplayed = false;\n    }\n\n    if (isDisplayed) this.optionsCounter++;\n    if (this.optionsCounter === this.props.options.length || this.optionsCounter === this.maxOptions) {\n      this.optionsCounter = 0;\n    }\n    return isDisplayed;\n  }\n\n  componentDidMount() {\n    this.setState({ offsetTop: ReactDOM.findDOMNode(this).offsetTop });\n  }\n\n  render() {\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        height: \"25px\",\n        fontFamily: \"var(--font-main)\",\n        marginTop: \"-0.75px\",\n        fontSize: \"15px\",\n        backgroundColor: \"transparent\",\n      }),\n      control: (base, state) => ({\n        ...base,\n        minHeight: \"25px\",\n        height: \"fit-content\",\n        fontFamily: \"var(--font-main)\",\n        fontSize: \"15px\",\n        backgroundColor: \"transparent\",\n        border: \"0px\",\n        borderRadius: \"0px\",\n        borderBottom: this.state.valueErr ? \"2px solid\" : state.selectProps.menuIsOpen ? \"2px solid\" : \"1px solid\",\n        borderColor: this.state.valueErr ? \"#f44336 !important\" : state.selectProps.menuIsOpen ? \"#3f51b5 !important\" : \"rgba(0, 0, 0, 0.42) !important\",\n        boxShadow: \"none\",\n        \"&:hover\": {\n          borderBottom: state.selectProps.menuIsOpen ? \"2px solid\" : \"2px solid\",\n          borderColor: this.state.valueErr ? \"#f44336\" : state.selectProps.menuIsOpen ? \"#3f51b5\" : \"black\",\n        },\n      }),\n      placeholder: (base, state) => ({\n        ...base,\n        height: \"25px\",\n        fontFamily: \"var(--font-main)\",\n        fontSize: \"15px\",\n        color: this.state.valueErr ? \"#f44336\" : state.selectProps.menuIsOpen ? \"#3f51b5\" : \"\",\n        backgroundColor: \"transparent\",\n      }),\n      option: base => ({\n        ...base,\n        fontFamily: \"var(--font-main)\",\n        fontSize: \"15px\",\n        marginTop: \"-3px\",\n        color: \"rgba(0, 0, 0, 0.87)\",\n      }),\n      valueContainer: base => ({\n        ...base,\n        minHeight: \"24px\",\n        height: \"fit-content\",\n        marginTop: \"-5px\",\n        paddingLeft: '0px',\n        marginLeft: '-2px',\n      }),\n      indicatorsContainer: base => ({\n        ...base,\n        minHeight: \"25px !important\",\n        padding: \"0px !important\",\n      }),\n      clearIndicator: base => ({\n        ...base,\n        padding: \"0px 5px 0px 5px !important\",\n      }),\n      dropdownIndicator: base => ({\n        ...base,\n        padding: \"0px 5px 0px 5px !important\",\n      }),\n    };\n\n    return (\n      <div style={this.props.style}>\n        {\n          !this.props.isCreatable &&\n          <Select\n            allowCreate={this.props.allowCreate}\n            ref={this.selectRef}\n            options={this.props.options}\n            styles={selectStyles}\n            // menuPlacement={this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\n            menuPlacement={this.props.bottom ? \"bottom\" : this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\n            value={this.state.value}\n            placeholder={this.props.label}\n            defaultValue={this.props.defaultValue}\n            defaultInputValue={this.props.defaultInputValue}\n            onChange={this.handleChange}\n            onMenuOpen={() => { return this.optionsCounter = 0; }}\n            noOptionsMessage={() => { return \"Нет подходящих вариантов\" }}\n            isClearable\n            isSearchable\n            required\n            isMulti={this.props.isMulti ? true : false}\n            style={{ width: \"200px\" }}\n            filterOption={this.filterValues}\n          />\n        }\n        {\n          this.props.isCreatable &&\n          <CreatableSelect\n            allowCreate={this.props.allowCreate}\n            ref={this.selectRef}\n            options={this.props.options}\n            styles={selectStyles}\n            menuPlacement={this.props.bottom ? \"bottom\" : this.state.offsetTop < 250 ? \"bottom\" : \"top\"}\n            value={this.state.value}\n            placeholder={this.props.label}\n            defaultValue={this.props.defaultValue}\n            defaultInputValue={this.props.defaultInputValue}\n            onChange={this.handleChange}\n            onMenuOpen={() => { return this.optionsCounter = 0; }}\n            noOptionsMessage={() => { return \"Нет подходящих вариантов\" }}\n            isClearable\n            isSearchable\n            required\n            isMulti={this.props.isMulti ? true : false}\n            style={{ width: \"200px\" }}\n            filterOption={this.filterValues}\n          />\n        }\n      </div>\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport { TextField, Tooltip, Button } from '@material-ui/core';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\n\nimport { dataTable, metaData, filters } from '../../config/data';\nimport { doData } from '../../utils/api';\nimport storage from '../../storages/commonStorage';\nimport CustomSelect from '../../SharedComponents/CustomSelect';\nimport DateW from '../../utils/date';\nimport getDefaultValues from '../../utils/defaultData';\nimport './DataAdd.css';\n\nexport default class DataAdd extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      hasAddMenu: true,\n      addMenuTitle: ' ',\n      developers: '',\n      selectDialogOptions: [],\n    };\n    this._dialogSelect = React.createRef();\n    for (let key in metaData.dataTable) {\n      let field = metaData.dataTable[key];\n      if (!field.addMenuIndex || parseInt(field.addMenuIndex) === 0) continue;\n\n      this.state[key] = '';\n      this.state[`${key}Err`] = false;\n      if (metaData.dataTable[key].type === 'select') {\n        this.state[`${key}s`] = '';\n      }\n    }\n  }\n\n  addTask = () => {\n    storage.alert.dispatch({\n      type: 'SHOW_ALERT',\n      status: 'warn',\n      message: 'Идёт добавление информации в БД...',\n    });\n\n    let task = {\n      id:\n        parseInt(\n          dataTable\n            .map((task) => task.id)\n            .sort((a, b) => {\n              return b - a;\n            })[0]\n        ) + 1,\n    };\n\n    // check empty fields in bottom menu\n    let emptyDataError = false;\n    for (let key in metaData.dataTable) {\n      let field = metaData.dataTable[key];\n      if (!field.addMenuIndex || parseInt(field.addMenuIndex) === 0) continue;\n\n      let objName = `_addTask${field.id}`;\n      if (this[objName]) {\n        if (this[objName].value === '') {\n          this.setState({ [`${key}Err`]: true });\n          this[objName].focus();\n          emptyDataError = true;\n        } else {\n          this.setState({ [`${key}Err`]: false });\n          task[key] = this[objName].value;\n        }\n      } else if (this.refs[objName]) {\n        if (!this.state[key] || this.state[key] === '') {\n          this.setState({ [`${key}Err`]: true });\n          this.refs[objName].setState({ valueErr: true });\n          this.refs[objName].setFocus();\n          emptyDataError = true;\n        } else {\n          this.setState({ [`${key}Err`]: false });\n          this.refs[objName].setState({ valueErr: false });\n          task[key] = this.state[key];\n        }\n      }\n    }\n\n    if (!emptyDataError) {\n      if (metaData.dataTableName === 'discussion') {\n        task.mainTable = 'task';\n        task.idTask = 42;\n        task.participants = task.responsible;\n\n        const now = moment();\n        task.date = DateW.toDateTimeStr('date', this.state.date || now);\n        task.time = DateW.toDateTimeStr('time', this.state.time || now);\n        task.week = new DateW(this.state.date || now).getYearWeekStr();\n      }\n\n      // set default values\n      Object.keys(metaData.dataTable).forEach((property) => {\n        if (typeof task[property] === 'undefined' || task[property] === '') {\n          if (['datetime', 'date', 'time'].includes(metaData.dataTable[property].type)) {\n            task[property] = undefined;\n            if (['datetime', 'date', 'time'].includes(metaData.dataTable[property].defaultValue)) {\n              task[property] = getDefaultValues(undefined, property, metaData.dataTable);\n            }\n          } else {\n            switch (property) {\n              case 'author':\n                task[property] = metaData.user.login;\n                break;\n              case 'mainTable':\n                task[property] = metaData.dataTableName;\n                break;\n              default:\n                task[property] =\n                  metaData.dataTable[property].defaultValue === 'empty'\n                    ? ''\n                    : metaData.dataTable[property].defaultValue;\n            }\n          }\n        }\n      });\n\n      doData('put', task, undefined, metaData.dataTableName).then(([error, json]) => {\n        if (error) {\n          storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'fail',\n            message: 'Ошибка при добавлении',\n          });\n        } else if (json && json.data && json.data.id) {\n          storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'success',\n            message: 'Добавление успешно',\n          });\n          task.id = json.data.id;\n          task.value = task[metaData.specificParameters.mainValue];\n          if (metaData[`${metaData.dataTableName}List`]) {\n            metaData[`${metaData.dataTableName}List`][task.id] = task;\n          }\n          dataTable.push(task);\n\n          //redraw table after adding row\n          storage.data.dispatch({ type: 'REDRAW', redraw: true });\n\n          for (let key in metaData.dataTable) {\n            let field = metaData.dataTable[key];\n            if (!field.addMenuIndex || parseInt(field.addMenuIndex) === 0) continue;\n            let objName = `_addTask${field.id}`;\n\n            //clear states\n            this.setState({ [`${key}Err`]: false });\n            this.setState({ [key]: '' });\n\n            //clear fields\n            if (this[objName]) {\n              this[objName].value = '';\n            } else if (this.refs[objName]) {\n              this.refs[objName].setState({ valueErr: false });\n              this.refs[objName].setState({ value: null });\n            }\n          }\n        } else {\n          storage.alert.dispatch({\n            type: 'SHOW_ALERT',\n            status: 'fail',\n            message: 'Ошибка при добавлении записи в БД',\n          });\n        }\n      });\n    }\n  };\n\n  handleChange = (value) => {\n    if (value && value !== '' && value !== 'null') {\n      this.setDeveloperErr(false);\n    }\n    this.setState({ developer: value });\n  };\n\n  handleDateClick = (field) => (value) => {\n    this.setState({[field]: value});\n  }\n\n  componentDidMount() {\n    this.unsubscribe = storage.state.subscribe(() => {\n      let dataLoading = storage.state.getState().STATE.dataLoading;\n      if (dataLoading && dataLoading === 'root') {\n        this.setState({ developers: metaData.developerList });\n      }\n    //   if (dataLoading && dataLoading === 'meta') {\n      if (dataLoading && dataLoading === 'data') {\n        this.setState({\n          developers: metaData.developerList,\n          hasAddMenu: metaData.specificParameters.hasAddMenu,\n          addMenuTitle: metaData.specificParameters.addMenuTitle,\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { developers, addMenuTitle } = this.state;\n    const textFieldClass = `data-add__text-field${metaData.dataTableName === 'discussion' && '_discussion'}`;\n\n    return (\n      <>\n        {this.state.hasAddMenu && (\n          <div className=\"data-add\">\n            <div className=\"data-add__title\">\n              <b>{addMenuTitle}</b>\n            </div>\n\n            {Object.values(metaData.dataTable)\n              .filter((field) => {\n                return field.addMenuIndex && parseInt(field.addMenuIndex) > 0;\n              })\n              .sort((a, b) => {\n                return parseInt(a.addMenuIndex) - parseInt(b.addMenuIndex);\n              })\n              .map((field) => {\n                let objName = `_addTask${field.id}`;\n\n                return (\n                  <Fragment key={field.id}>\n                    {field.type === 'select' && (\n                      <CustomSelect\n                        style={{ width: '200px', marginTop: '-4px' }}\n                        options={Object.values(developers)\n                          .sort((a, b) => {\n                            return a['value'] >= b['value'] ? 1 : -1;\n                          })\n                          .map((developer) => {\n                            return { value: developer.id, label: developer.value };\n                          })}\n                        refName={objName}\n                        ref={objName}\n                        inputRef={(el) => (this[objName] = el)}\n                        setValue={(value) => {\n                          return this.setState({ [field.id]: value });\n                        }}\n                        label={`${field.value}*`}\n                      />\n                    )}\n\n                    {field.type === 'string' && (\n                      <div className={textFieldClass}>\n                        <TextField\n                          required\n                          fullWidth={true}\n                          placeholder={field.value}\n                          error={this.state[`${field.id}Err`] ? true : false}\n                          ref={objName}\n                          inputRef={(el) => (this[objName] = el)}\n                        />\n                      </div>\n                    )}\n\n                    {field.type === 'date' &&\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <KeyboardDatePicker\n                          format=\"YYYY-MM-DD\"\n                          margin=\"normal\"\n                          value={this.state[field.id] || new Date()}\n                          onChange={this.handleDateClick(field.id)}\n                          style={{ width: \"140px\", margin: \"0 0 9px 0\" }}\n                          className=\"tbl-header-btn-menu__datepicker\"\n                          inputRef={(el) => (this[objName] = el)}\n                        />\n                      </MuiPickersUtilsProvider>\n                    }\n\n                    {field.type === 'time' &&\n                      <MuiPickersUtilsProvider utils={MomentUtils}>\n                        <KeyboardTimePicker\n                          format=\"HH:mm:ss\"\n                          ampm={false}\n                          minutesStep={5}\n                          margin=\"normal\"\n                          value={this.state[field.id] || new Date()}\n                          onChange={this.handleDateClick(field.id)}\n                          style={{ width: \"97px\", margin: \"0 0 9px 0\" }}\n                          className=\"tbl-header-btn-menu__datepicker\"\n                          inputRef={(el) => (this[objName] = el)}\n                        />\n                      </MuiPickersUtilsProvider>\n                    }\n                  </Fragment>\n                );\n              })}\n\n            <div className=\"data-add__button\">\n              <Tooltip title={addMenuTitle}>\n                <Button\n                  variant=\"outlined\"\n                  component=\"span\"\n                  color=\"primary\"\n                  onClick={this.addTask}\n                  style={{ paddingBottom: '0px', paddingTop: '0px' }}\n                  startIcon={<PlaylistAddIcon />}\n                >\n                  Добавить\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}